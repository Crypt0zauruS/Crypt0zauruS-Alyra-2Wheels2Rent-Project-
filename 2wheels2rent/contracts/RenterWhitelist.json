{
  "contractName": "RenterWhitelist",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_TW2RR",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_W2R",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_TW2RLenderNFT",
          "type": "address"
        },
        {
          "internalType": "contract I2VaultW2R",
          "name": "_vaultW2R",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NFTId",
          "type": "uint256"
        }
      ],
      "name": "RenterBlacklisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renter",
          "type": "address"
        }
      ],
      "name": "RenterRemovedFromBlacklist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NFTId",
          "type": "uint256"
        }
      ],
      "name": "RenterRemovedFromWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NFTId",
          "type": "uint256"
        }
      ],
      "name": "RenterWhitelisted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "W2R",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklistedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "numAddressesWhitelisted",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "bikeRentContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "NFTId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lenderWhitelist",
          "type": "address"
        }
      ],
      "name": "setLenderWhitelistAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "rather",
          "type": "string"
        }
      ],
      "name": "setRenterInfoAndMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeAddressFromWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addToBlacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeFromBlacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_TW2RR\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_W2R\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_TW2RLenderNFT\",\"type\":\"address\"},{\"internalType\":\"contract I2VaultW2R\",\"name\":\"_vaultW2R\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NFTId\",\"type\":\"uint256\"}],\"name\":\"RenterBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"}],\"name\":\"RenterRemovedFromBlacklist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NFTId\",\"type\":\"uint256\"}],\"name\":\"RenterRemovedFromWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NFTId\",\"type\":\"uint256\"}],\"name\":\"RenterWhitelisted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"W2R\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklistedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAddressesWhitelisted\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeAddressFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lenderWhitelist\",\"type\":\"address\"}],\"name\":\"setLenderWhitelistAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rather\",\"type\":\"string\"}],\"name\":\"setRenterInfoAndMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"bikeRentContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"NFTId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract manages a whitelist of renters and their associated BikeRent contracts. It allows renters to be added to the whitelist and to deploy BikeRent contracts. The contract owner can add and remove renters from the blacklist.\",\"kind\":\"dev\",\"methods\":{\"addToBlacklist(address)\":{\"params\":{\"_address\":\"Address to be blacklisted.\"}},\"constructor\":{\"params\":{\"_TW2RLenderNFT\":\"Address of the Lender NFT contract.\",\"_TW2RR\":\"Address of the TwoWheels2RentRenter contract.\",\"_W2R\":\"Address of the W2R token contract.\",\"_vaultW2R\":\"Address of the VaultW2R contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeFromBlacklist(address)\":{\"params\":{\"_address\":\"Address to be removed from the blacklist.\"}},\"setLenderWhitelistAddress(address)\":{\"params\":{\"_lenderWhitelist\":\"Address of the LenderWhitelist contract.\"}},\"setRenterInfoAndMint(string,string)\":{\"params\":{\"name\":\"Renter's name.\",\"rather\":\"Renter's rather.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"RenterWhitelist\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToBlacklist(address)\":{\"notice\":\"Add an address to the blacklist.\"},\"constructor\":{\"notice\":\"Constructor to set the required addresses for the contract.\"},\"removeAddressFromWhitelist()\":{\"notice\":\"Remove a renter from the whitelist.\"},\"removeFromBlacklist(address)\":{\"notice\":\"Remove an address from the blacklist.\"},\"renounceOwnership()\":{\"notice\":\"Prevent renouncing ownership of this contract.\"},\"setLenderWhitelistAddress(address)\":{\"notice\":\"Set the LenderWhitelist contract address.\"},\"setRenterInfoAndMint(string,string)\":{\"notice\":\"Add a renter to the whitelist, set Renter struct and call mintNFT.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RenterWhitelist.sol\":\"RenterWhitelist\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/BikeRent.sol\":{\"keccak256\":\"0x94503ba04f86c93e0e0fd51273633ad96af28266a597b84718653419a872bae4\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://c9fe139696b65ff9cf7a73a6219516fb50cffc2f398445cd8336640550702135\",\"dweb:/ipfs/Qmeao8Emb9k57cHfYFDdhGuGQXrwaEe8L6dLiAC6aPmAE2\"]},\"project:/contracts/RenterWhitelist.sol\":{\"keccak256\":\"0xf05b9d145276085e63292853a064fd58bb12a022cebaade8782eb85c4e3469a9\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://f819a9fcd5c9d97ae335d9a2c3eed93cde1057bc08518018eef9356932bc1534\",\"dweb:/ipfs/QmWuPHUxpvEE3vtS9FdijMU1yHqTtzpcpYQ3yGAji6qNzA\"]},\"project:/contracts/Utilities.sol\":{\"keccak256\":\"0x867283422d7d9aafb333683d2bc514f0d4832aca60694b243204b28ba27a4346\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://4f8ee5f3245535de759396a478a2996d078bc2fe09545daee59be4ab8253d615\",\"dweb:/ipfs/QmTDaDzVJZxexgscjveTyq6NCWHcCW7woTrmLtFK8KnGDo\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162005f2138038062005f21833981016040819052620000349162000183565b6200003f336200011a565b6001600160a01b038416158015906200006057506001600160a01b03831615155b80156200007557506001600160a01b03821615155b80156200008a57506001600160a01b03811615155b620000c95760405162461bcd60e51b815260206004820152600b60248201526a626164206164647265737360a81b604482015260640160405180910390fd5b600480546001600160a01b03199081166001600160a01b03938416179091556007805482169583169590951790945560038054851693821693909317909255600180549093169116179055620001eb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200018057600080fd5b50565b600080600080608085870312156200019a57600080fd5b8451620001a7816200016a565b6020860151909450620001ba816200016a565b6040860151909350620001cd816200016a565b6060860151909250620001e0816200016a565b939692955090935050565b615d2680620001fb6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c80638f036072116200007a5780638f03607214620001b8578063a226481b14620001cc578063bde9768714620001e3578063d5749d4214620001ed578063de8f2ba81462000224578063f2fde38b146200023b57600080fd5b806306c933d814620000c85780634011d7cd146200013057806344337ea11462000158578063537df3b61462000171578063715018a614620001885780638da5cb5b1462000192575b600080fd5b62000106620000d936600462000f7c565b6005602052600090815260409020805460019091015460ff82169161010090046001600160a01b03169083565b6040805193151584526001600160a01b039092166020840152908201526060015b60405180910390f35b6000546200014590600160a01b900460ff1681565b60405160ff909116815260200162000127565b6200016f6200016936600462000f7c565b62000252565b005b6200016f6200018236600462000f7c565b6200036d565b6200016f62000413565b6000546001600160a01b03165b6040516001600160a01b03909116815260200162000127565b6003546200019f906001600160a01b031681565b6200016f620001dd36600462000f7c565b6200045a565b6200016f6200049a565b62000213620001fe36600462000f7c565b60066020526000908152604090205460ff1681565b604051901515815260200162000127565b6200016f6200023536600462001059565b6200056c565b6200016f6200024c36600462000f7c565b6200091c565b6200025c62000998565b6001600160a01b03811660009081526006602052604090205460ff1615620002a15760405162461bcd60e51b81526004016200029890620010c4565b60405180910390fd5b6001600160a01b03811660009081526005602052604090205460ff16156200036a57620002ce81620009f6565b620003045760405162461bcd60e51b815260206004820152600560248201526432b93937b960d91b604482015260640162000298565b6001600160a01b0381166000818152600660209081526040808320805460ff1916600190811790915560058352928190209092015491519182527f2521e1d2181ef8de636f6830a509e2813fb22c1822a283dad266e756f0e3c2ec910160405180910390a25b50565b6200037762000998565b6001600160a01b03811660009081526006602052604090205460ff16620003ca5760405162461bcd60e51b81526020600482015260066024820152651b9bdd08189b60d21b604482015260640162000298565b6001600160a01b038116600081815260066020526040808220805460ff19169055517f62576b323defc6105d3c96bae5da2a00a7aae3f8f875d27b27da03d0c3cac2d79190a250565b6200041d62000998565b60405162461bcd60e51b815260206004820152601160248201527010d85b9d081899481c995b9bdd5b98d959607a1b604482015260640162000298565b6200046462000998565b6001600160a01b0381166200047857600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526006602052604090205460ff1615620004cd5760405162461bcd60e51b81526004016200029890620010c4565b3360009081526005602052604090205460ff16620005175760405162461bcd60e51b81526020600482015260066024820152651b9bdd081ddb60d21b604482015260640162000298565b6200052233620009f6565b50336000818152600560209081526040918290206001015491519182527f2521e1d2181ef8de636f6830a509e2813fb22c1822a283dad266e756f0e3c2ec910160405180910390a2565b3360009081526006602052604090205460ff16156200059f5760405162461bcd60e51b81526004016200029890620010c4565b3360009081526005602052604090205460ff1615620005e65760405162461bcd60e51b81526020600482015260026024820152611ddb60f21b604482015260640162000298565b3360009081526005602052604090205461010090046001600160a01b0316156200063e5760405162461bcd60e51b815260206004820152600860248201526719195c1b1bde595960c21b604482015260640162000298565b3360009081526005602052604090206001015415620006895760405162461bcd60e51b81526020600482015260066024820152651b5a5b9d195960d21b604482015260640162000298565b600082511180156200069c575060008151115b620006d25760405162461bcd60e51b8152602060048201526005602482015264656d70747960d81b604482015260640162000298565b6028825111158015620006e757506028815111155b620007205760405162461bcd60e51b8152602060048201526008602482015267746f6f206c6f6e6760c01b604482015260640162000298565b600760009054906101000a90046001600160a01b03166001600160a01b031663402199456040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000774573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200079a9190620010e0565b620007d25760405162461bcd60e51b81526020600482015260076024820152666e6f204950465360c81b604482015260640162000298565b60408051808201825283815260208082018490523360009081526005909152918220805460ff1916600117905581549091600160a01b90910460ff169060146200081c836200111a565b825460ff9182166101009390930a92830291909202199091161790555060075460405163e8c3bc0560e01b81526001600160a01b039091169063e8c3bc05906200086d903390859060040162001184565b6020604051808303816000875af11580156200088d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008b39190620011d8565b33600090815260056020526040902060010155620008d062000caf565b336000818152600560209081526040918290206001015491519182527fdf1fc30c9a67ee41e3e4e2050611e3d7aef8c0921a69a171a465272ae1952da6910160405180910390a2505050565b6200092662000998565b6001600160a01b0381166200098d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000298565b6200036a8162000f1e565b6000546001600160a01b03163314620009f45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000298565b565b6007546001600160a01b03828116600090815260056020526040808220600101549051632890e0d760e01b8152600481019190915290929190911690632890e0d7906024016020604051808303816000875af115801562000a5b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a819190620010e0565b62000abc5760405162461bcd60e51b815260206004820152600a602482015269313ab9371032b93937b960b11b604482015260640162000298565b6001600160a01b03808316600090815260056020908152604080832054600880546001600160a01b031916610100909204909516908117909455805163083197ef60e41b815290516383197ef0936004808401949383900301908290875af115801562000b2d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b539190620010e0565b62000b915760405162461bcd60e51b815260206004820152600d60248201526c6572726f722064657374726f7960981b604482015260640162000298565b60048054600854604051639eea227960e01b81526001600160a01b03918216938101939093521690639eea2279906024016020604051808303816000875af115801562000be2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c089190620010e0565b62000c475760405162461bcd60e51b815260206004820152600e60248201526d4572726f722072656d6f76696e6760901b604482015260640162000298565b6001600160a01b038216600090815260056020526040812080546001600160a81b03191681556001018190558054600160a01b900460ff1690601462000c8d83620011f2565b91906101000a81548160ff021916908360ff1602179055505060019050919050565b3360009081526006602052604090205460ff161562000ce25760405162461bcd60e51b81526004016200029890620010c4565b3360009081526005602052604090205460ff1662000d2c5760405162461bcd60e51b81526020600482015260066024820152651b9bdd081ddb60d21b604482015260640162000298565b3360009081526005602052604090205461010090046001600160a01b03161562000d845760405162461bcd60e51b815260206004820152600860248201526719195c1b1bde595960c21b604482015260640162000298565b33600090815260056020526040812060010154900362000dd45760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b5a5b9d195960b21b604482015260640162000298565b6002546001600160a01b031662000dea57600080fd5b60035460015460045460025460405133946001600160a01b039081169481169330939082169291169062000e1e9062000f6e565b6001600160a01b0396871681529486166020860152928516604085015290841660608401528316608083015290911660a082015260c001604051809103906000f08015801562000e72573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03928316908117825533600090815260056020526040908190208054610100600160a81b031916610100909302929092179091556004805492549151635ffd993b60e01b81529184169082015260016024820152911690635ffd993b90604401600060405180830381600087803b15801562000f0357600080fd5b505af115801562000f18573d6000803e3d6000fd5b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b614ade806200121383390190565b60006020828403121562000f8f57600080fd5b81356001600160a01b038116811462000fa757600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011262000fd657600080fd5b813567ffffffffffffffff8082111562000ff45762000ff462000fae565b604051601f8301601f19908116603f011681019082821181831017156200101f576200101f62000fae565b816040528381528660208588010111156200103957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156200106d57600080fd5b823567ffffffffffffffff808211156200108657600080fd5b620010948683870162000fc4565b93506020850135915080821115620010ab57600080fd5b50620010ba8582860162000fc4565b9150509250929050565b602080825260029082015261189b60f21b604082015260600190565b600060208284031215620010f357600080fd5b8151801515811462000fa757600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff810362001133576200113362001104565b60010192915050565b6000815180845260005b81811015620011645760208185018101518683018201520162001146565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b03831681526040602082015260008251604080840152620011af60808401826200113c565b90506020840151603f19848303016060850152620011ce82826200113c565b9695505050505050565b600060208284031215620011eb57600080fd5b5051919050565b600060ff82168062001208576200120862001104565b600019019291505056fe6080604052600a6006556202a300600755620151806008553480156200002457600080fd5b5060405162004ade38038062004ade8339810160408190526200004791620001e8565b85856001600160a01b0382166200005d57600080fd5b6001600160a01b0381166200007157600080fd5b60048054600580546001600160a01b0319166001600160a01b03948516179055600160a01b9383166001600160a81b03199091161792909217909155841615801590620000c657506001600160a01b03831615155b8015620000db57506001600160a01b03821615155b8015620000f057506001600160a01b03811615155b620001305760405162461bcd60e51b815260206004820152600b60248201526a626164206164647265737360a81b60448201526064015b60405180910390fd5b336001600160a01b03841614620001745760405162461bcd60e51b815260206004820152600760248201526613db9b1e481ddb60ca1b604482015260640162000127565b600d80546001600160a01b039586166001600160a01b031991821617909155600c8054948616948216949094179093556014805492851692841692909217909155600e805491909316911617905550620002699050565b80516001600160a01b0381168114620001e357600080fd5b919050565b60008060008060008060c087890312156200020257600080fd5b6200020d87620001cb565b95506200021d60208801620001cb565b94506200022d60408801620001cb565b93506200023d60608801620001cb565b92506200024d60808801620001cb565b91506200025d60a08801620001cb565b90509295509295509295565b61486580620002796000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80638f0360721161010f578063bf0058d0116100a2578063d9536d4c11610071578063d9536d4c14610450578063dd4b22d114610463578063e627f2db1461046c578063f7b2a7be1461047457600080fd5b8063bf0058d014610400578063c520e74a14610413578063c95dee7914610434578063d771642a1461044757600080fd5b8063b465c3c0116100de578063b465c3c014610302578063bc378a73146103d2578063be3f22eb146103da578063befc0921146103ed57600080fd5b80638f0360721461039b57806393736bb4146103ae578063af0654b7146103b7578063af8df99d146103bf57600080fd5b80633e14641711610187578063778f520b11610156578063778f520b1461035a5780638046c8ac1461036d57806383197ef0146103805780638da5cb5b1461038857600080fd5b80633e1464171461030257806360a6673c1461032b5780636dcf811d146103335780637486f8a01461034757600080fd5b8063155dd5ee116101c3578063155dd5ee1461025557806328ab10fc146102685780632c678ca51461029357806330109962146102eb57600080fd5b8063090fc58b146101ea5780630bfcef351461021c5780631401c5f914610231575b600080fd5b6101fd6101f8366004613c1a565b61047d565b6040516102139a99989796959493929190613c96565b60405180910390f35b61022f61022a366004613d44565b610586565b005b600e5461024590600160a01b900460ff1681565b6040519015158152602001610213565b61022f610263366004613d99565b610acd565b60185461027b906001600160a01b031681565b6040516001600160a01b039091168152602001610213565b6102a66102a1366004613d99565b610c59565b604080519889526001600160a01b039097166020890152958701949094526060860192909252608085015260a084015260c0830152151560e082015261010001610213565b6102f460075481565b604051908152602001610213565b6102f4610310366004613db2565b6001600160a01b031660009081526017602052604090205490565b61022f610cbc565b60045461024590600160a01b900460ff1681565b61022f610355366004613dd6565b610f66565b61022f610368366004613e28565b611844565b61022f61037b366004613d99565b611b24565b610245611d3f565b60045461027b906001600160a01b031681565b60055461027b906001600160a01b031681565b6102f460015481565b61022f611f2d565b61022f6103cd366004613db2565b612030565b6016546102f4565b61022f6103e8366004613d44565b6121e7565b61022f6103fb366004613e6a565b61268c565b61022f61040e366004613eac565b612806565b610426610421366004613db2565b612911565b604051610213929190613f18565b61022f610442366004613eac565b612a3d565b6102f460085481565b61022f61045e366004613f46565b612b47565b6102f460005481565b6102f461341d565b6102f460065481565b6017602052816000526040600020818154811061049957600080fd5b6000918252602090912060079091020180546001820154600283015460038401546004850154600586015460068701805496995094975092959194909360ff8085169461010081048216946201000082048316946301000000909204909216929061050390613f81565b80601f016020809104026020016040519081016040528092919081815260200182805461052f90613f81565b801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b505050505090508a565b600454600160a01b900460ff16156105b95760405162461bcd60e51b81526004016105b090613fbb565b60405180910390fd5b600d546040516370a0823160e01b81526001600160a01b03808616600483015285926000929116906370a0823190602401602060405180830381865afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190613fe0565b116106485760405162461bcd60e51b81526004016105b090613ff9565b600e54601580546001600160a01b0319166001600160a01b0392831690811790915560405162d9267b60e31b81529183166004830152906306c933d890602401606060405180830381865afa1580156106a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c9919061402f565b516106e65760405162461bcd60e51b81526004016105b09061409a565b60155460405162d9267b60e31b81526001600160a01b038381166004830152339216906306c933d890602401606060405180830381865afa15801561072f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610753919061402f565b602001516001600160a01b03161461077d5760405162461bcd60e51b81526004016105b09061409a565b600e54600160a01b900460ff1680156107a057506018546001600160a01b031615155b6107bc5760405162461bcd60e51b81526004016105b0906140ba565b306000908152600a6020526040812080546107d690613f81565b90501180156108015750306000908152600a6020526040812060010180546107fd90613f81565b9050115b61081d5760405162461bcd60e51b81526004016105b0906140dd565b601854839083906001600160a01b0316331461084b5760405162461bcd60e51b81526004016105b0906140fd565b6010805461085890613f81565b9050601e1480156108695750601e81145b80156108c3575060405161088290601090602001614122565b6040516020818303038152906040528051906020012082826040516020016108ab929190614198565b60405160208183030381529060405280519060200120145b6108df5760405162461bcd60e51b81526004016105b0906141a8565b600f54158015906108fe5750600f54603c906108fb90426141df565b11155b61091a5760405162461bcd60e51b81526004016105b0906141f8565b3360009081526017602052604081208054610937906001906141df565b8154811061094757610947614219565b906000526020600020906007020190508060050160029054906101000a900460ff16801561097a5750600581015460ff16155b6109965760405162461bcd60e51b81526004016105b09061422f565b60058101805460ff1916600117905560048082015460145460405163255d23d760e11b815230938101939093526024830182905290916001600160a01b0390911690634aba47ae90604401600060405180830381600087803b1580156109fb57600080fd5b505af1158015610a0f573d6000803e3d6000fd5b50503360009081526002602052604081208054859450909250610a33908490614252565b925050819055508060036000828254610a4c9190614252565b9091555050600e805460ff60a01b19169055601880546001600160a01b03191690558154306000818152600a6020526040908190209051919233927fe37fd6880e9c45f86a337efb15d4a7f39b28518286c32b05f9eeac6b550adcd692610abb929142919060018201906142e2565b60405180910390a35050505050505050565b600454600160a01b900460ff1615610af75760405162461bcd60e51b81526004016105b090613fbb565b6004546001600160a01b03163314610b215760405162461bcd60e51b81526004016105b090614313565b60008111610b595760405162461bcd60e51b815260206004820152600560248201526404e6f7420360dc1b60448201526064016105b0565b6005546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc59190613fe0565b1015610c025760405162461bcd60e51b815260206004820152600c60248201526b125b9cdd59999a58da595b9d60a21b60448201526064016105b0565b600554610c19906001600160a01b0316338361347b565b60408051828152426020820152309133917fb933d9f5921d73b25377b9ffc45ea2914238b8379c2098a3178e766cb8f326d491015b60405180910390a350565b60168181548110610c6957600080fd5b6000918252602090912060089091020180546001820154600283015460038401546004850154600586015460068701546007909701549597506001600160a01b0390941695929491939092909160ff1688565b600454600160a01b900460ff1615610ce65760405162461bcd60e51b81526004016105b090613fbb565b600e54600160a01b900460ff168015610d0957506018546001600160a01b031615155b610d255760405162461bcd60e51b81526004016105b0906140ba565b306000908152600a602052604081208054610d3f90613f81565b9050118015610d6a5750306000908152600a602052604081206001018054610d6690613f81565b9050115b610d865760405162461bcd60e51b81526004016105b0906140dd565b6004546001600160a01b03163314610db05760405162461bcd60e51b81526004016105b090614313565b6018546001600160a01b031660009081526017602052604081208054610dd8906001906141df565b81548110610de857610de8614219565b906000526020600020906007020190508060050160039054906101000a900460ff168015610e215750600581015462010000900460ff16155b8015610e325750600581015460ff16155b610e4e5760405162461bcd60e51b81526004016105b09061422f565b600f5415801590610e6d5750600f54603c90610e6a90426141df565b11155b610e895760405162461bcd60e51b81526004016105b0906141f8565b601854600b80546001600160a01b0319166001600160a01b03928316908117909155600480546040516370cf9d7760e11b81529316908301529063e19f3aee90602401600060405180830381600087803b158015610ee657600080fd5b505af1158015610efa573d6000803e3d6000fd5b50505060058201805462ff000019166201000017905550601854306000818152600a602052604090819020905191926001600160a01b0316917f0cd92eec05e4f2840efd243f3a73e91e5f9af26e52ab39532ce64b1b9fe9100191610c4e914291906001820190614337565b600454600160a01b900460ff1615610f905760405162461bcd60e51b81526004016105b090613fbb565b600d546040516370a0823160e01b81526001600160a01b03808816600483015287926000929116906370a0823190602401602060405180830381865afa158015610fde573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110029190613fe0565b1161101f5760405162461bcd60e51b81526004016105b090613ff9565b600e54601580546001600160a01b0319166001600160a01b0392831690811790915560405162d9267b60e31b81529183166004830152906306c933d890602401606060405180830381865afa15801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a0919061402f565b516110bd5760405162461bcd60e51b81526004016105b09061409a565b60155460405162d9267b60e31b81526001600160a01b038381166004830152339216906306c933d890602401606060405180830381865afa158015611106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112a919061402f565b602001516001600160a01b0316146111545760405162461bcd60e51b81526004016105b09061409a565b3360009081526012602081905260409091208054620151809061117790426141df565b1061118757600060018201554281555b60038160010154106111ab5760405162461bcd60e51b81526004016105b09061436c565b6001810180549060006111bd83614393565b9091555050600e54600160a01b900460ff161580156111e557506018546001600160a01b0316155b80156111f057503315155b61122a5760405162461bcd60e51b815260206004820152600b60248201526a6261642072656e74696e6760a81b60448201526064016105b0565b306000908152600a60205260408120805461124490613f81565b905011801561126f5750306000908152600a60205260408120600101805461126b90613f81565b9050115b61128b5760405162461bcd60e51b81526004016105b0906140dd565b60006112978789614252565b6005546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156112e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113089190613fe0565b10156113455760405162461bcd60e51b815260206004820152600c60248201526b125b9cdd59999a58da595b9d60a21b60448201526064016105b0565b60008080885b60165483101561178757336001600160a01b03166016848154811061137257611372614219565b60009182526020909120600160089092020101546001600160a01b031603611775576000601684815481106113a9576113a9614219565b600091825260209182902060408051610100810182526008909302909101805480845260018201546001600160a01b0316948401949094526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c083015260079081015460ff16151560e0830152549092509061143490426141df565b11156114525760405162461bcd60e51b81526004016105b0906141f8565b8060e001511561148f5760405162461bcd60e51b81526020600482015260086024820152671858d8d95c1d195960c21b60448201526064016105b0565b6127106006548e6114a091906143ac565b6114ab9060646143ac565b10156114b657600080fd5b60008d9050816060015193506000612710600654836114d591906143ac565b6114e09060646143ac565b6114ea91906143d9565b905060018360e00190151590811515815250506001600e60146101000a81548160ff02191690831515021790555060008c905060008f905060008a905060176000336001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280858152602001898152602001878152602001848152602001868152602001600015158152602001600015158152602001600015158152602001600015158152602001604051806020016040528060008152508152509080600181540180825580915050600190039060005260206000209060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548160ff0219169083151502179055506101008201518160050160036101000a81548160ff02191690831515021790555061012082015181600601908161169f9190614450565b5050601880546001600160a01b03191633179055506000805490806116c383614393565b909155506116d390508784614252565b6116e0906202a300614252565b6001556005546116fa906001600160a01b0316338d61347b565b601854608087810151604080518781526020810192909252810188905260608101859052908101839052600060a08201526001600160a01b039091169033907f087203a8efe3f1cbaf620bc456ac2e3ce7b11303af6d2187b376cccbb769b25c9060c00160405180910390a360019950505050505050611787565b8261177f81614393565b93505061134b565b836117bf5760405162461bcd60e51b8152602060048201526008602482015267139bc8199bdd5b9960c21b60448201526064016105b0565b6117c8836134de565b5060005b6016548110156118345783811415801561181257506117eb8284614252565b601682815481106117fe576117fe614219565b906000526020600020906008020160000154105b1561182257611820816134de565b505b8061182c81614393565b9150506117cc565b5050505050505050505050505050565b600454600160a01b900460ff161561186e5760405162461bcd60e51b81526004016105b090613fbb565b600d546040516370a0823160e01b81526001600160a01b03808516600483015284926000929116906370a0823190602401602060405180830381865afa1580156118bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e09190613fe0565b116118fd5760405162461bcd60e51b81526004016105b090613ff9565b600e54601580546001600160a01b0319166001600160a01b0392831690811790915560405162d9267b60e31b81529183166004830152906306c933d890602401606060405180830381865afa15801561195a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197e919061402f565b5161199b5760405162461bcd60e51b81526004016105b09061409a565b60155460405162d9267b60e31b81526001600160a01b038381166004830152339216906306c933d890602401606060405180830381865afa1580156119e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a08919061402f565b602001516001600160a01b031614611a325760405162461bcd60e51b81526004016105b09061409a565b600e54600160a01b900460ff168015611a5557506018546001600160a01b031615155b611a715760405162461bcd60e51b81526004016105b0906140ba565b306000908152600a602052604081208054611a8b90613f81565b9050118015611ab65750306000908152600a602052604081206001018054611ab290613f81565b9050115b611ad25760405162461bcd60e51b81526004016105b0906140dd565b60008411611b135760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c99599d5b9960921b60448201526064016105b0565b611b1e8484846136c9565b50505050565b600454600160a01b900460ff1615611b4e5760405162461bcd60e51b81526004016105b090613fbb565b600554604051636eb1769f60e11b8152336004820152306024820152829182916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015611ba0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc49190613fe0565b1015611bfd5760405162461bcd60e51b8152602060048201526008602482015267185c1c1c9bdd985b60c21b60448201526064016105b0565b60008211611c3a5760405162461bcd60e51b815260206004820152600a60248201526918985908185b5bdd5b9d60b21b60448201526064016105b0565b6005546040516370a0823160e01b815233600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015611c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca69190613fe0565b1015611ce75760405162461bcd60e51b815260206004820152601060248201526f24b739bab33334b1b4b2b73a102b992960811b60448201526064016105b0565b600554611cff906001600160a01b03163330856138f8565b60408051838152426020820152309133917f224b1db9c133c01e120ca7551e3b56fec93a1f208e1c0509c23361a560a61026910160405180910390a35050565b600c546000906001600160a01b03163314611d8d5760405162461bcd60e51b815260206004820152600e60248201526d13db9b1e481dda1a5d195b1a5cdd60921b60448201526064016105b0565b600154421015611dcc5760405162461bcd60e51b815260206004820152600a602482015269736166652064656c617960b01b60448201526064016105b0565b6004805460ff60a01b1916600160a01b1781556009805460ff191660011790556005546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611e39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5d9190613fe0565b1115611ef057600480546005546040516370a0823160e01b81523093810193909352611ef0926001600160a01b0392831692909116906370a0823190602401602060405180830381865afa158015611eb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edd9190613fe0565b6005546001600160a01b0316919061347b565b604051428152309033907f05bec130a67bc2853b0a7f5cfe8590b473fcc3342360d8933fb7064b1ebf8b6d9060200160405180910390a350600190565b600454600160a01b900460ff1615611f575760405162461bcd60e51b81526004016105b090613fbb565b6004546001600160a01b03163314611f815760405162461bcd60e51b81526004016105b090614313565b600e54600160a01b900460ff168015611fa457506018546001600160a01b031615155b611fc05760405162461bcd60e51b81526004016105b0906140ba565b306000908152600a602052604081208054611fda90613f81565b90501180156120055750306000908152600a60205260408120600101805461200190613f81565b9050115b6120215760405162461bcd60e51b81526004016105b0906140dd565b61202e60008060006136c9565b565b600454600160a01b900460ff161561205a5760405162461bcd60e51b81526004016105b090613fbb565b6004546001600160a01b031633146120845760405162461bcd60e51b81526004016105b090614313565b6001600160a01b038116158015906120aa57506004546001600160a01b03828116911614155b80156120bf57506001600160a01b0381163014155b6120db5760405162461bcd60e51b81526004016105b0906141a8565b6016546121155760405162461bcd60e51b8152602060048201526008602482015267139bc8199bdd5b9960c21b60448201526064016105b0565b60005b6016548110156121e357816001600160a01b03166016828154811061213f5761213f614219565b60009182526020909120600160089092020101546001600160a01b0316036121d1576016818154811061217457612174614219565b600091825260209091206007600890920201015460ff16156121c35760405162461bcd60e51b81526020600482015260086024820152671858d8d95c1d195960c21b60448201526064016105b0565b6121cc816134de565b505050565b806121db81614393565b915050612118565b5050565b600454600160a01b900460ff16156122115760405162461bcd60e51b81526004016105b090613fbb565b600d546040516370a0823160e01b81526001600160a01b03808616600483015285926000929116906370a0823190602401602060405180830381865afa15801561225f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122839190613fe0565b116122a05760405162461bcd60e51b81526004016105b090613ff9565b600e54601580546001600160a01b0319166001600160a01b0392831690811790915560405162d9267b60e31b81529183166004830152906306c933d890602401606060405180830381865afa1580156122fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612321919061402f565b5161233e5760405162461bcd60e51b81526004016105b09061409a565b60155460405162d9267b60e31b81526001600160a01b038381166004830152339216906306c933d890602401606060405180830381865afa158015612387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ab919061402f565b602001516001600160a01b0316146123d55760405162461bcd60e51b81526004016105b09061409a565b600e54600160a01b900460ff1680156123f857506018546001600160a01b031615155b6124145760405162461bcd60e51b81526004016105b0906140ba565b306000908152600a60205260408120805461242e90613f81565b90501180156124595750306000908152600a60205260408120600101805461245590613f81565b9050115b6124755760405162461bcd60e51b81526004016105b0906140dd565b601854839083906001600160a01b031633146124a35760405162461bcd60e51b81526004016105b0906140fd565b601080546124b090613f81565b9050601e1480156124c15750601e81145b801561251b57506040516124da90601090602001614122565b604051602081830303815290604052805190602001208282604051602001612503929190614198565b60405160208183030381529060405280519060200120145b6125375760405162461bcd60e51b81526004016105b0906141a8565b600f54158015906125565750600f54603c9061255390426141df565b11155b6125725760405162461bcd60e51b81526004016105b0906141f8565b6018546001600160a01b03166000908152601760205260408120805461259a906001906141df565b815481106125aa576125aa614219565b906000526020600020906007020190508060050160039054906101000a900460ff16156126015760405162461bcd60e51b81526020600482015260056024820152643a30b5b2b760d91b60448201526064016105b0565b60058101805463ff000000191663010000001790556006810161262560108261450a565b50601854306000818152600a602052604090819020905191926001600160a01b0316917f58441e06988866f5582b245c6d5073b65d386d56d2d7f2ee714ae642aba451bf9161267b914291906001820190614337565b60405180910390a350505050505050565b6004546001600160a01b031633146126b65760405162461bcd60e51b81526004016105b090614313565b600454600160a01b900460ff16156126e05760405162461bcd60e51b81526004016105b090613fbb565b600e54600160a01b900460ff16801561270357506018546001600160a01b031615155b61271f5760405162461bcd60e51b81526004016105b0906140ba565b306000908152600a60205260408120805461273990613f81565b90501180156127645750306000908152600a60205260408120600101805461276090613f81565b9050115b6127805760405162461bcd60e51b81526004016105b0906140dd565b336000908152601360208190526040909120805462015180906127a390426141df565b106127b357600060018201554281555b60038160010154106127d75760405162461bcd60e51b81526004016105b09061436c565b6001810180549060006127e983614393565b909155505042600f5560106127ff8486836145d7565b5050505050565b6004546001600160a01b031633146128305760405162461bcd60e51b81526004016105b090614313565b600454600160a01b900460ff16801561284c575060095460ff16155b6128915760405162461bcd60e51b81526020600482015260166024820152751058dd1a5d985d1959081bdc8819195cdd1c9bde595960521b60448201526064016105b0565b821580159061289f57508015155b6128bb5760405162461bcd60e51b81526004016105b0906140dd565b6128c784848484612a3d565b6004805460ff60a01b19169055604051428152309033907f975a71b6f0e7c3037baf066252bb3dde490161b5536420b1954b32b39316f7b79060200160405180910390a350505050565b600a6020526000908152604090208054819061292c90613f81565b80601f016020809104026020016040519081016040528092919081815260200182805461295890613f81565b80156129a55780601f1061297a576101008083540402835291602001916129a5565b820191906000526020600020905b81548152906001019060200180831161298857829003601f168201915b5050505050908060010180546129ba90613f81565b80601f01602080910402602001604051908101604052809291908181526020018280546129e690613f81565b8015612a335780601f10612a0857610100808354040283529160200191612a33565b820191906000526020600020905b815481529060010190602001808311612a1657829003601f168201915b5050505050905082565b6004546001600160a01b03163314612a675760405162461bcd60e51b81526004016105b090614313565b60095460ff1615612aa65760405162461bcd60e51b815260206004820152600960248201526819195cdd1c9bde595960ba1b60448201526064016105b0565b8215801590612ab457508015155b612ad05760405162461bcd60e51b81526004016105b0906140dd565b306000908152600a6020526040902080612aeb8587836145d7565b5060018101612afb8385836145d7565b50604051309033907f6cad0fcdfd6b730f10e1bef22b48067bd4880a9e9bec47880bceb85733be339690612b389042908a908a908a908a906146ba565b60405180910390a35050505050565b600454600160a01b900460ff1615612b715760405162461bcd60e51b81526004016105b090613fbb565b6004546001600160a01b03163314612b9b5760405162461bcd60e51b81526004016105b090614313565b33600090815260116020819052604090912080546201518090612bbe90426141df565b10612bce57600060018201554281555b6003816001015410612bf25760405162461bcd60e51b81526004016105b09061436c565b600181018054906000612c0483614393565b90915550506001600160a01b03861615801590612c2f57506004546001600160a01b03878116911614155b8015612c4457506001600160a01b0386163014155b612c825760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016105b0565b612c8a613930565b612c9357600080fd5b60005b601654811015612d2857866001600160a01b031660168281548110612cbd57612cbd614219565b60009182526020909120600160089092020101546001600160a01b031603612d165760405162461bcd60e51b815260206004820152600c60248201526b616c7265616479206d61646560a01b60448201526064016105b0565b80612d2081614393565b915050612c96565b50600083118015612d395750600085115b8015612d455750600084115b612d7e5760405162461bcd60e51b815260206004820152600a6024820152696261642076616c75657360b01b60448201526064016105b0565b612d8a42612710614252565b8511612dc35760405162461bcd60e51b81526020600482015260086024820152673a37b79039b7b7b760c11b60448201526064016105b0565b612dd062015180846146f3565b158015612ddf57506008548310155b8015612df65750612a30612df386866141df565b10155b8015612e0d575061a8c0612e0a86866141df565b11155b612e445760405162461bcd60e51b81526020600482015260086024820152676261642074696d6560c01b60448201526064016105b0565b601654600311612e7f5760405162461bcd60e51b81526020600482015260066024820152654f6e6c79203360d01b60448201526064016105b0565b306000908152600a602052604081208054612e9990613f81565b9050118015612ec45750306000908152600a602052604081206001018054612ec090613f81565b9050115b612ee05760405162461bcd60e51b81526004016105b0906140dd565b600b80546001600160a01b0319166001600160a01b0388169081179091556040805163bc378a7360e01b815290516005929163bc378a739160048083019260209291908290030181865afa158015612f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f609190613fe0565b10612f965760405162461bcd60e51b81526020600482015260066024820152654f6e6c79203560d01b60448201526064016105b0565b600b60009054906101000a90046001600160a01b03166001600160a01b031663b8f58f726040518163ffffffff1660e01b8152600401602060405180830381865afa158015612fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300d9190613fe0565b8311156130475760405162461bcd60e51b8152602060048201526008602482015267746f6f206c6f6e6760c01b60448201526064016105b0565b600b5460408051631627391760e11b815290516000926001600160a01b031691632c4e722e9160048083019260209291908290030181865afa158015613091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130b59190613fe0565b90506000600b60009054906101000a90046001600160a01b03166001600160a01b031663419759f56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561310c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131309190613fe0565b905061313f62015180866143d9565b61314990836143ac565b6131539082614252565b6005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561319b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131bf9190613fe0565b10156131fa5760405162461bcd60e51b815260206004820152600a60248201526909cdee840cadcdeeaced60b31b60448201526064016105b0565b600b5460048054306000908152600a6020526040908190209051633a92dc9160e11b81526001600160a01b0394851694637525b9229461325094909116928d928d928d928b928b92429291600183019101614707565b600060405180830381600087803b15801561326a57600080fd5b505af115801561327e573d6000803e3d6000fd5b5050505060166040518061010001604052804281526020018a6001600160a01b031681526020018981526020018881526020018781526020018481526020018381526020016000151581525090806001815401808255809150506001900390600052602060002090600802016000909190919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff0219169083151502179055505050876001600160a01b0316306001600160a01b03167fa43440595d7811afa24adc4304a5e6a508929db4628903410c266549444b5b8d428a8a8a8888600a6000306001600160a01b03166001600160a01b03168152602001908152602001600020600001600a6000306001600160a01b03166001600160a01b03168152602001908152602001600020600101604051610abb989796959493929190614772565b600454600090600160a01b900460ff161561344a5760405162461bcd60e51b81526004016105b090613fbb565b6004546001600160a01b031633146134745760405162461bcd60e51b81526004016105b090614313565b5060035490565b6040516001600160a01b0383166024820152604481018290526121cc90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526139a0565b600080601683815481106134f4576134f4614219565b60009182526020822060016008909202010154601680546001600160a01b039092169350908590811061352957613529614219565b90600052602060002090600802016000015490506016600160168054905061355191906141df565b8154811061356157613561614219565b90600052602060002090600802016016858154811061358257613582614219565b60009182526020909120825460089092020190815560018083015490820180546001600160a01b0319166001600160a01b0390921691909117905560028083015490820155600380830154908201556004808301549082015560058083015490820155600680830154908201556007918201549101805460ff909216151560ff19909216919091179055601680548061361d5761361d6147cd565b6000828152602081206008600019909301928302018181556001810180546001600160a01b0319169055600281018290556003810182905560048101829055600581018290556006810191909155600701805460ff1916905590556040516001600160a01b0383169030907f1a07a16d411b1999de40db18a15f956f20021655f5dc8cf7685cdb7c9447710f906136b79085815260200190565b60405180910390a35060019392505050565b6018546001600160a01b0316600090815260176020526040812080546136f1906001906141df565b8154811061370157613701614219565b906000526020600020906007020190508060050160039054906101000a900460ff161580156137355750600581015460ff16155b6137515760405162461bcd60e51b81526004016105b09061422f565b836000036137bb5760008160020154826003015461376f9190614252565b825490915061378190611c20906141df565b42101561378e57806137b7565b61271082600201546103e86137a391906143ac565b6137ad91906143d9565b6137b790826141df565b9450505b6001600160a01b038316156137f9576018546001600160a01b031633146137f45760405162461bcd60e51b81526004016105b0906140fd565b613874565b8161387457601854600b80546001600160a01b0319166001600160a01b0392831690811790915560048054604051630c6986b360e01b815293169083015290630c6986b390602401600060405180830381600087803b15801561385b57600080fd5b505af115801561386f573d6000803e3d6000fd5b505050505b60058101805460ff19166001908117909155600e805460ff60a01b191690554290819055601880546001600160a01b03198116909155825460408051918252602082018890528101929092526001600160a01b031690309082907fc24589c44dcd993689e1ebe33a62cf11f093640e6a7ffe971f50703b5a440e4890606001612b38565b6040516001600160a01b0380851660248301528316604482015260648101829052611b1e9085906323b872dd60e01b906084016134a7565b6000805b601654811015613998576007546016828154811061395457613954614219565b9060005260206000209060080201600001544261397191906141df565b111561398657613980816134de565b50613934565b8061399081614393565b915050613934565b600191505090565b60006139f5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613a729092919063ffffffff16565b8051909150156121cc5780806020019051810190613a1391906147e3565b6121cc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105b0565b6060613a818484600085613a89565b949350505050565b606082471015613aea5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105b0565b600080866001600160a01b03168587604051613b069190614800565b60006040518083038185875af1925050503d8060008114613b43576040519150601f19603f3d011682016040523d82523d6000602084013e613b48565b606091505b5091509150613b5987838387613b64565b979650505050505050565b60608315613bd3578251600003613bcc576001600160a01b0385163b613bcc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105b0565b5081613a81565b613a818383815115613be85781518083602001fd5b8060405162461bcd60e51b81526004016105b0919061481c565b6001600160a01b0381168114613c1757600080fd5b50565b60008060408385031215613c2d57600080fd5b8235613c3881613c02565b946020939093013593505050565b60005b83811015613c61578181015183820152602001613c49565b50506000910152565b60008151808452613c82816020860160208601613c46565b601f01601f19169290920160200192915050565b60006101408c83528b60208401528a604084015289606084015288608084015287151560a084015286151560c084015285151560e084015284151561010084015280610120840152613cea81840185613c6a565b9d9c50505050505050505050505050565b60008083601f840112613d0d57600080fd5b50813567ffffffffffffffff811115613d2557600080fd5b602083019150836020828501011115613d3d57600080fd5b9250929050565b600080600060408486031215613d5957600080fd5b8335613d6481613c02565b9250602084013567ffffffffffffffff811115613d8057600080fd5b613d8c86828701613cfb565b9497909650939450505050565b600060208284031215613dab57600080fd5b5035919050565b600060208284031215613dc457600080fd5b8135613dcf81613c02565b9392505050565b600080600080600060a08688031215613dee57600080fd5b8535613df981613c02565b97602087013597506040870135966060810135965060800135945092505050565b8015158114613c1757600080fd5b600080600060608486031215613e3d57600080fd5b833592506020840135613e4f81613c02565b91506040840135613e5f81613e1a565b809150509250925092565b60008060208385031215613e7d57600080fd5b823567ffffffffffffffff811115613e9457600080fd5b613ea085828601613cfb565b90969095509350505050565b60008060008060408587031215613ec257600080fd5b843567ffffffffffffffff80821115613eda57600080fd5b613ee688838901613cfb565b90965094506020870135915080821115613eff57600080fd5b50613f0c87828801613cfb565b95989497509550505050565b604081526000613f2b6040830185613c6a565b8281036020840152613f3d8185613c6a565b95945050505050565b60008060008060808587031215613f5c57600080fd5b8435613f6781613c02565b966020860135965060408601359560600135945092505050565b600181811c90821680613f9557607f821691505b602082108103613fb557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600b908201526a19195858dd1a5d985d195960aa1b604082015260600190565b600060208284031215613ff257600080fd5b5051919050565b602080825260069082015265139bc813919560d21b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b60006060828403121561404157600080fd5b6040516060810181811067ffffffffffffffff8211171561406457614064614019565b604052825161407281613e1a565b8152602083015161408281613c02565b60208201526040928301519281019290925250919050565b602080825260069082015265139bdd081ddb60d21b604082015260600190565b6020808252600990820152682737903632b73232b960b91b604082015260600190565b6020808252600690820152656e6f2047505360d01b604082015260600190565b6020808252600b908201526a27b7363c903632b73232b960a91b604082015260600190565b600080835461413081613f81565b60018281168015614148576001811461415d5761418c565b60ff198416875282151583028701945061418c565b8760005260208060002060005b858110156141835781548a82015290840190820161416a565b50505082870194505b50929695505050505050565b8183823760009101908152919050565b602080825260079082015266125b9d985b1a5960ca1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156141f2576141f26141c9565b92915050565b602080825260079082015266195e1c1a5c995960ca1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60208082526009908201526862616420737461746560b81b604082015260600190565b808201808211156141f2576141f26141c9565b6000815461427281613f81565b80855260206001838116801561428f57600181146142a9576142d7565b60ff1985168884015283151560051b8801830195506142d7565b866000528260002060005b858110156142cf5781548a82018601529083019084016142b4565b890184019650505b505050505092915050565b8481528360208201526080604082015260006143016080830185614265565b8281036060840152613b598185614265565b6020808252600a908201526937b7363c9037bbb732b960b11b604082015260600190565b8381526060602082015260006143506060830185614265565b82810360408401526143628185614265565b9695505050505050565b6020808252600d908201526c131a5b5a5d081c995858da1959609a1b604082015260600190565b6000600182016143a5576143a56141c9565b5060010190565b80820281158282048414176141f2576141f26141c9565b634e487b7160e01b600052601260045260246000fd5b6000826143e8576143e86143c3565b500490565b601f8211156121cc57600081815260208120601f850160051c810160208610156144145750805b601f850160051c820191505b8181101561443357828155600101614420565b505050505050565b600019600383901b1c191660019190911b1790565b815167ffffffffffffffff81111561446a5761446a614019565b61447e816144788454613f81565b846143ed565b602080601f8311600181146144ad576000841561449b5750858301515b6144a5858261443b565b865550614433565b600085815260208120601f198616915b828110156144dc578886015182559484019460019091019084016144bd565b50858210156144fa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103614515575050565b61451f8254613f81565b67ffffffffffffffff81111561453757614537614019565b614545816144788454613f81565b6000601f82116001811461457357600083156145615750848201545b61456b848261443b565b8555506127ff565b600085815260209020601f19841690600086815260209020845b838110156145ad578286015482556001958601959091019060200161458d565b50858310156144fa5793015460001960f8600387901b161c19169092555050600190811b01905550565b67ffffffffffffffff8311156145ef576145ef614019565b614603836145fd8354613f81565b836143ed565b6000601f841160018114614631576000851561461f5750838201355b614629868261443b565b8455506127ff565b600083815260209020601f19861690835b828110156146625786850135825560209485019460019092019101614642565b508682101561467f5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8581526060602082015260006146d4606083018688614691565b82810360408401526146e7818587614691565b98975050505050505050565b600082614702576147026143c3565b500690565b600061012060018060a01b038c1683528a60208401528960408401528860608401528760808401528660a08401528560c08401528060e084015261474d81840186614265565b90508281036101008401526147628185614265565b9c9b505050505050505050505050565b60006101008a83528960208401528860408401528760608401528660808401528560a08401528060c08401526147aa81840186614265565b905082810360e08401526147be8185614265565b9b9a5050505050505050505050565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156147f557600080fd5b8151613dcf81613e1a565b60008251614812818460208701613c46565b9190910192915050565b602081526000613dcf6020830184613c6a56fea26469706673582212200d8ae64a89e5477f3d8135e60bc519316d0bc2e1436e521a564ae86ca2e6753e64736f6c63430008120033a26469706673582212205e099359b406ec498a6659cff2769df39fe91f0b3c41002a67ef91aeec07bfbb64736f6c63430008120033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1165:33",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:33",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:33"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:33"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:33",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:33",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:33"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:33"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:33"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:33"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:33"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:33",
                "type": ""
              }
            ],
            "src": "14:131:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "301:522:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "348:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "357:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "360:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "350:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "350:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "350:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "322:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "331:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "318:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "318:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:3:33",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "314:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "314:33:33"
                  },
                  "nodeType": "YulIf",
                  "src": "311:53:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "373:29:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "392:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "386:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "386:16:33"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "377:5:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "436:5:33"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "411:24:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "411:31:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "411:31:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "451:15:33",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "461:5:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "475:40:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "511:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "496:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "496:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "490:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:25:33"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "479:7:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "549:7:33"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "524:24:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "524:33:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "524:33:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "566:17:33",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "576:7:33"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "566:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "592:40:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "617:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "628:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "613:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "613:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:25:33"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "596:7:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "666:7:33"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "641:24:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:33:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "641:33:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "683:17:33",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "693:7:33"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "683:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "709:40:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "734:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "745:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "730:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "730:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "724:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:25:33"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "713:7:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "783:7:33"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "758:24:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "758:33:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "758:33:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "800:17:33",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "810:7:33"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "800:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_contract$_I2VaultW2R_$6608_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "243:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "254:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "266:6:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "274:6:33",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "282:6:33",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "290:6:33",
                "type": ""
              }
            ],
            "src": "150:673:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1002:161:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1019:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1030:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1012:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1012:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1012:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1053:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1064:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1049:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1049:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1069:2:33",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1042:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1042:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1042:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1092:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1103:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1088:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1088:18:33"
                      },
                      {
                        "hexValue": "6261642061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1108:13:33",
                        "type": "",
                        "value": "bad address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1081:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:41:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1081:41:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1131:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1143:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1154:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1139:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1139:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1131:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a88b47c233ae917c566b691da54c8824c13e1421996ad27f9ae3f5b45f66380__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "979:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "993:4:33",
                "type": ""
              }
            ],
            "src": "828:335:33"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_contract$_I2VaultW2R_$6608_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n    }\n    function abi_encode_tuple_t_stringliteral_7a88b47c233ae917c566b691da54c8824c13e1421996ad27f9ae3f5b45f66380__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"bad address\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 33,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11822:33",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:33",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:33"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:33"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:33"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:33",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:33",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:33"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:33"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:33"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:33"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:33",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:33",
                "type": ""
              }
            ],
            "src": "14:286:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "456:204:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "466:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "478:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "489:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "474:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "466:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "508:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "533:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "526:6:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "526:14:33"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "519:6:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "519:22:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "501:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "501:41:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "501:41:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "562:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "573:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "558:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "558:18:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "582:6:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "598:3:33",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "603:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "594:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "594:11:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "607:1:33",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "590:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "590:19:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "578:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "578:32:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "551:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:60:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "551:60:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "631:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "642:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "627:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "627:18:33"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "647:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "620:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "620:34:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "620:34:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_address_t_uint256__to_t_bool_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "409:9:33",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "420:6:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "428:6:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "436:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "447:4:33",
                "type": ""
              }
            ],
            "src": "305:355:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "762:87:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "772:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "784:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "795:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "780:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "780:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "772:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "814:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "829:6:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "837:4:33",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "825:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "825:17:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "807:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "807:36:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "807:36:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "731:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "742:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "753:4:33",
                "type": ""
              }
            ],
            "src": "665:184:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "955:102:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "965:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "977:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "988:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "973:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "965:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1007:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1022:6:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1038:3:33",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1043:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1034:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1034:11:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1047:1:33",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1030:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1030:19:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1018:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1018:32:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1000:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:51:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1000:51:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "924:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "935:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "946:4:33",
                "type": ""
              }
            ],
            "src": "854:203:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1177:102:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1187:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1199:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1210:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1195:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1195:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1187:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1229:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1244:6:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1260:3:33",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1265:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1256:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1256:11:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1269:1:33",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1252:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1252:19:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1240:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1240:32:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1222:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1222:51:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1222:51:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$9897__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1146:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1157:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1168:4:33",
                "type": ""
              }
            ],
            "src": "1062:217:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1379:92:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1389:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1401:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1412:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1397:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1397:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1389:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1431:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1456:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1449:6:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1449:14:33"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1442:6:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1442:22:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1424:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1424:41:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1424:41:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1348:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1359:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1370:4:33",
                "type": ""
              }
            ],
            "src": "1284:187:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1508:95:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1525:1:33",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1532:3:33",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1537:10:33",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1528:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1528:20:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1518:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1518:31:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1518:31:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1565:1:33",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1568:4:33",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1558:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1558:15:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1558:15:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1589:1:33",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1592:4:33",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1582:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1582:15:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1582:15:33"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1476:127:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1661:666:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1710:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1719:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1722:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1712:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1712:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1712:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1689:6:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1697:4:33",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1685:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1685:17:33"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1704:3:33"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1681:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1681:27:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1674:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1674:35:33"
                  },
                  "nodeType": "YulIf",
                  "src": "1671:55:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1735:30:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1758:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1745:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1745:20:33"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1739:2:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1774:28:33",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1784:18:33",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1778:2:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1825:22:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1827:16:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1827:18:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1827:18:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1817:2:33"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1821:2:33"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1814:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1814:10:33"
                  },
                  "nodeType": "YulIf",
                  "src": "1811:36:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1856:17:33",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1870:2:33",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1866:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1866:7:33"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1860:2:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1882:23:33",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1902:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1896:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1896:9:33"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1886:6:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1914:71:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1936:6:33"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1960:2:33"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1964:4:33",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1956:3:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1956:13:33"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1971:2:33"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1952:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1952:22:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1976:2:33",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1948:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1948:31:33"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1981:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1944:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1944:40:33"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1932:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1932:53:33"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1918:10:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2044:22:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2046:16:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2046:18:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2046:18:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2003:10:33"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2015:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2000:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2000:18:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2023:10:33"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2035:6:33"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2020:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2020:22:33"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1997:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1997:46:33"
                  },
                  "nodeType": "YulIf",
                  "src": "1994:72:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2082:2:33",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2086:10:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2075:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2075:22:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2075:22:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2113:6:33"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2121:2:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2106:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:18:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2106:18:33"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2172:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2181:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2184:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2174:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2174:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2174:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2147:6:33"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2155:2:33"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2143:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2143:15:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2160:4:33",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2139:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2139:26:33"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2167:3:33"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2136:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2136:35:33"
                  },
                  "nodeType": "YulIf",
                  "src": "2133:55:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2214:6:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2222:4:33",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2210:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2210:17:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2233:6:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2241:4:33",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2229:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2229:17:33"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2248:2:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2197:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2197:54:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2197:54:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2275:6:33"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2283:2:33"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2271:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2271:15:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2288:4:33",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2267:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2267:26:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2295:1:33",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2260:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2260:37:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2260:37:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2306:15:33",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2315:6:33"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2306:5:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1635:6:33",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1643:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1651:5:33",
                "type": ""
              }
            ],
            "src": "1608:719:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2439:436:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2485:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2494:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2497:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2487:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2487:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2487:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2460:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2469:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2456:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2456:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2481:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2452:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2452:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "2449:52:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2510:37:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2537:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2524:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2524:23:33"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2514:6:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2556:28:33",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2566:18:33",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2560:2:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2611:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2620:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2623:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2613:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2613:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2613:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2599:6:33"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2607:2:33"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2596:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2596:14:33"
                  },
                  "nodeType": "YulIf",
                  "src": "2593:34:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2636:60:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2668:9:33"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2679:6:33"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2664:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2664:22:33"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2688:7:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2646:17:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2646:50:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2636:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2705:48:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2738:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2749:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2734:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2734:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2721:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2721:32:33"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2709:8:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2782:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2791:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2794:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2784:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2784:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2784:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2768:8:33"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2778:2:33"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2765:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2765:16:33"
                  },
                  "nodeType": "YulIf",
                  "src": "2762:36:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2807:62:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2839:9:33"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2850:8:33"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2835:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2835:24:33"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2861:7:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2817:17:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2817:52:33"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2807:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2397:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2408:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2420:6:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2428:6:33",
                "type": ""
              }
            ],
            "src": "2332:543:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3054:151:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3071:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3082:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3064:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3064:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3064:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3105:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3116:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3101:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3101:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3121:1:33",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3094:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3094:29:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3094:29:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3143:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3154:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3139:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3139:18:33"
                      },
                      {
                        "hexValue": "626c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3159:4:33",
                        "type": "",
                        "value": "bl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3132:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3132:32:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3132:32:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3173:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3185:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3196:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3181:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3181:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3173:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d181f440042e8f5830ef9ee489779e71df7443906f0969fcfe30b84dcd4f005f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3031:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3045:4:33",
                "type": ""
              }
            ],
            "src": "2880:325:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3384:154:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3401:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3412:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3394:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3394:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3394:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3435:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3446:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3431:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3431:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3451:1:33",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3424:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3424:29:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3424:29:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3473:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3484:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3469:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3469:18:33"
                      },
                      {
                        "hexValue": "6572726f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3489:7:33",
                        "type": "",
                        "value": "error"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3462:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3462:35:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3462:35:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3506:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3518:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3529:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3514:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3514:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3506:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3361:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3375:4:33",
                "type": ""
              }
            ],
            "src": "3210:328:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3644:76:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3654:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3666:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3677:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3662:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3662:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3654:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3696:9:33"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3707:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3689:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3689:25:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3689:25:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3613:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3624:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3635:4:33",
                "type": ""
              }
            ],
            "src": "3543:177:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3899:155:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3916:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3927:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3909:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3909:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3909:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3950:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3961:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3946:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3946:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3966:1:33",
                        "type": "",
                        "value": "6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3939:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3939:29:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3939:29:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3988:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3999:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3984:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3984:18:33"
                      },
                      {
                        "hexValue": "6e6f7420626c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4004:8:33",
                        "type": "",
                        "value": "not bl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3977:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3977:36:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3977:36:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4022:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4034:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4045:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4030:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4030:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4022:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_42730988b5b57c2a4c6c3b2818148f290fd69aeaf43ebb9b109a70ed0aaff9d5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3876:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3890:4:33",
                "type": ""
              }
            ],
            "src": "3725:329:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4233:167:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4250:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4261:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4243:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4243:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4243:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4284:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4295:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4280:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4280:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4300:2:33",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4273:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4273:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4273:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4323:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4334:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4319:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4319:18:33"
                      },
                      {
                        "hexValue": "43616e742062652072656e6f756e636564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4339:19:33",
                        "type": "",
                        "value": "Cant be renounced"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4312:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4312:47:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4312:47:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4368:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4380:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4391:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4376:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4376:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4368:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9627fcc39fc5a156007d9edf6167f87fa4fd95300655ba014d0cd1f07542126f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4210:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4224:4:33",
                "type": ""
              }
            ],
            "src": "4059:341:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4579:155:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4596:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4607:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4589:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4589:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4589:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4630:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4641:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4626:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4626:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4646:1:33",
                        "type": "",
                        "value": "6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4619:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4619:29:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4619:29:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4668:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4679:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4664:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4664:18:33"
                      },
                      {
                        "hexValue": "6e6f7420776c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4684:8:33",
                        "type": "",
                        "value": "not wl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4657:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4657:36:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4657:36:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4702:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4714:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4725:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4710:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4710:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4702:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f229655461b9f7e6a93e6c61b0ecd7df80e0afec0548025c54be26504598ec81__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4556:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4570:4:33",
                "type": ""
              }
            ],
            "src": "4405:329:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4913:151:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4930:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4941:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4923:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4923:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4923:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4964:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4975:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4960:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4960:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4980:1:33",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4953:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4953:29:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4953:29:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5002:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5013:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4998:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4998:18:33"
                      },
                      {
                        "hexValue": "776c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5018:4:33",
                        "type": "",
                        "value": "wl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4991:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4991:32:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4991:32:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5032:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5044:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5055:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5040:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5040:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5032:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0f888941bd07ea31c6e78b607c9e2c2f0a375eb86daa19a04e532dffc7545ca8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4890:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4904:4:33",
                "type": ""
              }
            ],
            "src": "4739:325:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5243:157:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5260:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5271:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5253:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5253:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5253:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5294:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5305:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5290:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5290:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5310:1:33",
                        "type": "",
                        "value": "8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5283:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5283:29:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5283:29:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5332:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5343:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5328:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5328:18:33"
                      },
                      {
                        "hexValue": "6465706c6f796564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5348:10:33",
                        "type": "",
                        "value": "deployed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5321:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5321:38:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5321:38:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5368:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5380:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5391:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5376:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5376:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5368:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c3ffd2fbf4ef817b99e19f63c037cd677154cf58ec0b8033503ab3ae26dceba8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5220:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5234:4:33",
                "type": ""
              }
            ],
            "src": "5069:331:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5579:155:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5596:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5607:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5589:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5589:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5589:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5630:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5641:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5626:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5626:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5646:1:33",
                        "type": "",
                        "value": "6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5619:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5619:29:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5619:29:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5668:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5679:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5664:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5664:18:33"
                      },
                      {
                        "hexValue": "6d696e746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5684:8:33",
                        "type": "",
                        "value": "minted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5657:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5657:36:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5657:36:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5702:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5714:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5725:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5710:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5710:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5702:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e1d7849c0f6c42b67ef46bfe871686aeac2aa524ff4c77793f2afbd412acbd54__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5556:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5570:4:33",
                "type": ""
              }
            ],
            "src": "5405:329:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5913:154:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5930:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5941:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5923:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5923:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5923:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5964:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5975:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5960:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5960:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5980:1:33",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5953:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5953:29:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5953:29:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6002:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6013:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5998:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5998:18:33"
                      },
                      {
                        "hexValue": "656d707479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6018:7:33",
                        "type": "",
                        "value": "empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5991:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5991:35:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5991:35:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6035:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6047:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6058:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6043:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6043:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6035:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_61fc3f77ebc090777f567969ad9823cf6334ab888acb385ca72668ec5adbde80__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5890:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5904:4:33",
                "type": ""
              }
            ],
            "src": "5739:328:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6246:157:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6263:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6274:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6256:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6256:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6256:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6297:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6308:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6293:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6293:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6313:1:33",
                        "type": "",
                        "value": "8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6286:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6286:29:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6286:29:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6335:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6346:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6331:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6331:18:33"
                      },
                      {
                        "hexValue": "746f6f206c6f6e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6351:10:33",
                        "type": "",
                        "value": "too long"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6324:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6324:38:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6324:38:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6371:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6383:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6394:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6379:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6379:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6371:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_672145b11400b28892b051f4e8e535b767bbafdaaf91d014164ce75ca128f736__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6223:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6237:4:33",
                "type": ""
              }
            ],
            "src": "6072:331:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6486:199:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6532:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6541:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6544:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6534:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6534:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6534:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6507:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6516:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6503:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6503:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6528:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6499:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6499:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "6496:52:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6557:29:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6576:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6570:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6570:16:33"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6561:5:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6639:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6648:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6651:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6641:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6641:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6641:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6608:5:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6629:5:33"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6622:6:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6622:13:33"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6615:6:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6615:21:33"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6605:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6605:32:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6598:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6598:40:33"
                  },
                  "nodeType": "YulIf",
                  "src": "6595:60:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6664:15:33",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6674:5:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6664:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6452:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6463:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6475:6:33",
                "type": ""
              }
            ],
            "src": "6408:277:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6864:156:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6881:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6892:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6874:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6874:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6874:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6915:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6926:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6911:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6911:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6931:1:33",
                        "type": "",
                        "value": "7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6904:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6904:29:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6904:29:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6953:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6964:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6949:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6949:18:33"
                      },
                      {
                        "hexValue": "6e6f2049504653",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6969:9:33",
                        "type": "",
                        "value": "no IPFS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6942:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6942:37:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6942:37:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6988:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7000:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7011:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6996:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6996:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6988:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_beab432e36078c159e843a41d8bc8affd3ca400528b6a53fe284a6d85c32fd43__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6841:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6855:4:33",
                "type": ""
              }
            ],
            "src": "6690:330:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7057:95:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7074:1:33",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7081:3:33",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7086:10:33",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7077:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7077:20:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7067:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7067:31:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7067:31:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7114:1:33",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7117:4:33",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7107:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7107:15:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7107:15:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7138:1:33",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7141:4:33",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7131:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7131:15:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7131:15:33"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7025:127:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7202:130:33",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7212:31:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7231:5:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7238:4:33",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7227:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7227:16:33"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "7216:7:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7273:22:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7275:16:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7275:18:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7275:18:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "7258:7:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7267:4:33",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7255:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7255:17:33"
                  },
                  "nodeType": "YulIf",
                  "src": "7252:43:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7304:22:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "7315:7:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7324:1:33",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7311:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7311:15:33"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7304:3:33"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7184:5:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7194:3:33",
                "type": ""
              }
            ],
            "src": "7157:175:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7387:373:33",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7397:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7417:5:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7411:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7411:12:33"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7401:6:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7439:3:33"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7444:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7432:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7432:19:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7432:19:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7460:10:33",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7469:1:33",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7464:1:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7531:110:33",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7545:14:33",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7555:4:33",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "7549:2:33",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "7587:3:33"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7592:1:33"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7583:3:33"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7583:11:33"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7596:2:33"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7579:3:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7579:20:33"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "7615:5:33"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "7622:1:33"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7611:3:33"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7611:13:33"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "7626:2:33"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7607:3:33"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7607:22:33"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7601:5:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7601:29:33"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7572:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7572:59:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7572:59:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7490:1:33"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7493:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7487:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7487:13:33"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7501:21:33",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7503:17:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7512:1:33"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7515:4:33",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7508:3:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7508:12:33"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7503:1:33"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7483:3:33",
                    "statements": []
                  },
                  "src": "7479:162:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7665:3:33"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7670:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7661:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7661:16:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7679:4:33",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7657:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7657:27:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7686:1:33",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7650:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7650:38:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7650:38:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7697:57:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7712:3:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7725:6:33"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7733:2:33",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7721:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7721:15:33"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7742:2:33",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7738:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7738:7:33"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7717:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7717:29:33"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7708:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7708:39:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7749:4:33",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7704:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7704:50:33"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7697:3:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7364:5:33",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7371:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7379:3:33",
                "type": ""
              }
            ],
            "src": "7337:423:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7950:446:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7967:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7982:6:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7998:3:33",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8003:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7994:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7994:11:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8007:1:33",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7990:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7990:19:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7978:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7978:32:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7960:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7960:51:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7960:51:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8031:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8042:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8027:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8027:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8047:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8020:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8020:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8020:30:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8059:33:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8085:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8079:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8079:13:33"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "8063:12:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8112:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8123:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8108:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8108:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8128:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8101:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8101:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8101:30:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8140:66:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "8172:12:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8190:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8201:3:33",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8186:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8186:19:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "8154:17:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8154:52:33"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "8144:6:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8215:44:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8247:6:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8255:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8243:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8243:15:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8237:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8237:22:33"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "8219:14:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8279:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8290:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8275:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8275:18:33"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "8303:6:33"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8311:9:33"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8299:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8299:22:33"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8327:2:33",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "8323:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8323:7:33"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8295:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8295:36:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8268:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8268:64:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8268:64:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8341:49:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "8367:14:33"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "8383:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "8349:17:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8349:41:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8341:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_struct$_RenterInfo_$6614_memory_ptr__to_t_address_t_struct$_RenterInfo_$6614_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7911:9:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7922:6:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7930:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7941:4:33",
                "type": ""
              }
            ],
            "src": "7765:631:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8482:103:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8528:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8537:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8540:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8530:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8530:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8530:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8503:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8512:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8499:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8499:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8524:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8495:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8495:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "8492:52:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8553:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8569:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8563:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8563:16:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8553:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8448:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8459:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8471:6:33",
                "type": ""
              }
            ],
            "src": "8401:184:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8764:228:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8781:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8792:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8774:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8774:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8774:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8815:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8826:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8811:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8811:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8831:2:33",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8804:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8804:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8804:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8854:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8865:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8850:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8850:18:33"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8870:34:33",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8843:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8843:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8843:62:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8925:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8936:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8921:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8921:18:33"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8941:8:33",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8914:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8914:36:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8914:36:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8959:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8971:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8982:3:33",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8967:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8967:19:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8959:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8741:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8755:4:33",
                "type": ""
              }
            ],
            "src": "8590:402:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9171:182:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9188:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9199:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9181:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9181:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9181:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9222:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9233:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9218:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9218:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9238:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9211:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9211:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9211:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9261:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9272:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9257:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9257:18:33"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9277:34:33",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9250:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9250:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9250:62:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9321:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9333:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9344:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9329:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9329:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9321:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9148:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9162:4:33",
                "type": ""
              }
            ],
            "src": "8997:356:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9532:160:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9549:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9560:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9542:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9542:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9542:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9583:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9594:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9579:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9579:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9599:2:33",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9572:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9572:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9572:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9622:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9633:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9618:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9618:18:33"
                      },
                      {
                        "hexValue": "6275726e206572726f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9638:12:33",
                        "type": "",
                        "value": "burn error"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9611:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9611:40:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9611:40:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9660:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9672:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9683:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9668:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9668:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9660:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_865c34ee6c838fbfc02d59d282ffcbdbf30747712e6d1d78ab3f43484ca1cceb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9509:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9523:4:33",
                "type": ""
              }
            ],
            "src": "9358:334:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9871:163:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9888:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9899:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9881:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9881:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9881:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9922:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9933:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9918:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9918:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9938:2:33",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9911:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9911:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9911:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9961:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9972:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9957:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9957:18:33"
                      },
                      {
                        "hexValue": "6572726f722064657374726f79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9977:15:33",
                        "type": "",
                        "value": "error destroy"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9950:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9950:43:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9950:43:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10002:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10014:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10025:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10010:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10010:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10002:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4b95836d85fcaadedf7a01b58005e619c4d1dce3edadfa8b4d2c2c8670f75889__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9848:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9862:4:33",
                "type": ""
              }
            ],
            "src": "9697:337:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10213:164:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10230:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10241:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10223:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10223:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10223:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10264:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10275:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10260:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10260:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10280:2:33",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10253:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10253:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10253:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10303:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10314:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10299:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10299:18:33"
                      },
                      {
                        "hexValue": "4572726f722072656d6f76696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10319:16:33",
                        "type": "",
                        "value": "Error removing"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10292:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10292:44:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10292:44:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10345:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10357:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10368:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10353:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10353:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10345:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a9a75d5ba382e71be78ad72a33bdf1cbf93bd9c5e6f9fa5cea352e44b544bc38__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10190:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10204:4:33",
                "type": ""
              }
            ],
            "src": "10039:338:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10427:133:33",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10437:31:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10456:5:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10463:4:33",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10452:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10452:16:33"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "10441:7:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10496:22:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10498:16:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10498:18:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10498:18:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "10487:7:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10480:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10480:15:33"
                  },
                  "nodeType": "YulIf",
                  "src": "10477:41:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10527:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "10538:7:33"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10551:1:33",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10547:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10547:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10534:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10534:20:33"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10527:3:33"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10409:5:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10419:3:33",
                "type": ""
              }
            ],
            "src": "10382:178:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10739:160:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10756:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10767:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10749:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10749:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10749:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10790:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10801:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10786:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10786:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10806:2:33",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10779:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10779:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10779:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10829:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10840:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10825:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10825:18:33"
                      },
                      {
                        "hexValue": "6e6f74206d696e746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10845:12:33",
                        "type": "",
                        "value": "not minted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10818:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10818:40:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10818:40:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10867:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10879:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10890:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10875:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10875:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10867:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ed0e1848f1dadde260e45ab3b88b9836cb46c110c2a98667c93513423f5d8382__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10716:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10730:4:33",
                "type": ""
              }
            ],
            "src": "10565:334:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11145:386:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11155:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11167:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11178:3:33",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11163:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11163:19:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11155:4:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11191:29:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11209:3:33",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11214:1:33",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11205:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11205:11:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11218:1:33",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11201:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11201:19:33"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11195:2:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11236:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11251:6:33"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11259:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11247:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11247:15:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11229:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11229:34:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11229:34:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11283:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11294:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11279:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11279:18:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11303:6:33"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11311:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11299:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11299:15:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11272:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11272:43:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11272:43:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11335:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11346:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11331:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11331:18:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "11355:6:33"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11363:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11351:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11351:15:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11324:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11324:43:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11324:43:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11387:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11398:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11383:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11383:18:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "11407:6:33"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11415:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11403:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11403:15:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11376:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11376:43:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11376:43:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11439:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11450:3:33",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11435:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11435:19:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "11460:6:33"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11468:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11456:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11456:15:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11428:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11428:44:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11428:44:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11492:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11503:3:33",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11488:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11488:19:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "11513:6:33"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11521:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11509:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11509:15:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11481:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11481:44:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11481:44:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11074:9:33",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "11085:6:33",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "11093:6:33",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11101:6:33",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11109:6:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11117:6:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11125:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11136:4:33",
                "type": ""
              }
            ],
            "src": "10904:627:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11659:161:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11669:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11681:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11692:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11677:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11677:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11669:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11711:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11726:6:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11742:3:33",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11747:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11738:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11738:11:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11751:1:33",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11734:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11734:19:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11722:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11722:32:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11704:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11704:51:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11704:51:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11775:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11786:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11771:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11771:18:33"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "11805:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11798:6:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11798:14:33"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11791:6:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11791:22:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11764:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11764:50:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11764:50:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11620:9:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11631:6:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11639:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11650:4:33",
                "type": ""
              }
            ],
            "src": "11536:284:33"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool_t_address_t_uint256__to_t_bool_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$9897__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_d181f440042e8f5830ef9ee489779e71df7443906f0969fcfe30b84dcd4f005f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"bl\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"error\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_42730988b5b57c2a4c6c3b2818148f290fd69aeaf43ebb9b109a70ed0aaff9d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 6)\n        mstore(add(headStart, 64), \"not bl\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9627fcc39fc5a156007d9edf6167f87fa4fd95300655ba014d0cd1f07542126f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Cant be renounced\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f229655461b9f7e6a93e6c61b0ecd7df80e0afec0548025c54be26504598ec81__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 6)\n        mstore(add(headStart, 64), \"not wl\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0f888941bd07ea31c6e78b607c9e2c2f0a375eb86daa19a04e532dffc7545ca8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"wl\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c3ffd2fbf4ef817b99e19f63c037cd677154cf58ec0b8033503ab3ae26dceba8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 8)\n        mstore(add(headStart, 64), \"deployed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e1d7849c0f6c42b67ef46bfe871686aeac2aa524ff4c77793f2afbd412acbd54__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 6)\n        mstore(add(headStart, 64), \"minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_61fc3f77ebc090777f567969ad9823cf6334ab888acb385ca72668ec5adbde80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_672145b11400b28892b051f4e8e535b767bbafdaaf91d014164ce75ca128f736__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 8)\n        mstore(add(headStart, 64), \"too long\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_beab432e36078c159e843a41d8bc8affd3ca400528b6a53fe284a6d85c32fd43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"no IPFS\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_struct$_RenterInfo_$6614_memory_ptr__to_t_address_t_struct$_RenterInfo_$6614_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        let memberValue0 := mload(value1)\n        mstore(add(headStart, 64), 64)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 128))\n        let memberValue0_1 := mload(add(value1, 32))\n        mstore(add(headStart, 96), add(sub(tail_1, headStart), not(63)))\n        tail := abi_encode_string(memberValue0_1, tail_1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_865c34ee6c838fbfc02d59d282ffcbdbf30747712e6d1d78ab3f43484ca1cceb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"burn error\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4b95836d85fcaadedf7a01b58005e619c4d1dce3edadfa8b4d2c2c8670f75889__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"error destroy\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a9a75d5ba382e71be78ad72a33bdf1cbf93bd9c5e6f9fa5cea352e44b544bc38__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Error removing\")\n        tail := add(headStart, 96)\n    }\n    function decrement_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if iszero(value_1) { panic_error_0x11() }\n        ret := add(value_1, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_ed0e1848f1dadde260e45ab3b88b9836cb46c110c2a98667c93513423f5d8382__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"not minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n}",
      "id": 33,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1398:8061:6:-:0;;;2835:675;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:12;719:10:27;936:18:12;:32::i;:::-;-1:-1:-1;;;;;2992:20:6;;;;;;:58;;-1:-1:-1;;;;;;3032:18:6;;;;2992:58;:106;;;;-1:-1:-1;;;;;;3070:28:6;;;;2992:106;:158;;;;-1:-1:-1;;;;;;3118:32:6;;;;2992:158;2971:216;;;;-1:-1:-1;;;2971:216:6;;1030:2:33;2971:216:6;;;1012:21:33;1069:2;1049:18;;;1042:30;-1:-1:-1;;;1088:18:33;;;1081:41;1139:18;;2971:216:6;;;;;;;;3197:8;:20;;-1:-1:-1;;;;;;3197:20:6;;;-1:-1:-1;;;;;3197:20:6;;;;;;;3291:5;:38;;;;;;;;;;;;;;3392:3;:17;;;;;;;;;;;;;;-1:-1:-1;3473:30:6;;;;;;;;;;1398:8061;;2433:187:12;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:12;;;-1:-1:-1;;;;;;2541:17:12;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:131:33:-;-1:-1:-1;;;;;89:31:33;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:673::-;266:6;274;282;290;343:3;331:9;322:7;318:23;314:33;311:53;;;360:1;357;350:12;311:53;392:9;386:16;411:31;436:5;411:31;:::i;:::-;511:2;496:18;;490:25;461:5;;-1:-1:-1;524:33:33;490:25;524:33;:::i;:::-;628:2;613:18;;607:25;576:7;;-1:-1:-1;641:33:33;607:25;641:33;:::i;:::-;745:2;730:18;;724:25;693:7;;-1:-1:-1;758:33:33;724:25;758:33;:::i;:::-;150:673;;;;-1:-1:-1;150:673:33;;-1:-1:-1;;150:673:33:o;828:335::-;1398:8061:6;;;;;;",
  "deployedSourceMap": "1398:8061:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2296:54;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2296:54:6;;;;;;;;526:14:33;;519:22;501:41;;-1:-1:-1;;;;;578:32:33;;;573:2;558:18;;551:60;627:18;;;620:34;489:2;474:18;2296:54:6;;;;;;;;1497:36;;;;;-1:-1:-1;;;1497:36:6;;;;;;;;;837:4:33;825:17;;;807:36;;795:2;780:18;1497:36:6;665:184:33;7436:543:6;;;;;;:::i;:::-;;:::i;:::-;;8120:293;;;;;;:::i;:::-;;:::i;9353:104::-;;;:::i;1201:85:12:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:12;1201:85;;;-1:-1:-1;;;;;1018:32:33;;;1000:51;;988:2;973:18;1201:85:12;854:203:33;1718:16:6;;;;;-1:-1:-1;;;;;1718:16:6;;;3661:267;;;;;;:::i;:::-;;:::i;6876:439::-;;;:::i;2381:52::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1449:14:33;;1442:22;1424:41;;1412:2;1397:18;2381:52:6;1284:187:33;4104:1389:6;;;;;;:::i;:::-;;:::i;2081:198:12:-;;;;;;:::i;:::-;;:::i;7436:543:6:-;1094:13:12;:11;:13::i;:::-;-1:-1:-1;;;;;7516:30:6;::::1;;::::0;;;:20:::1;:30;::::0;;;;;::::1;;7515:31;7507:46;;;;-1:-1:-1::0;;;7507:46:6::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;7605:30:6;::::1;;::::0;;;:20:::1;:30;::::0;;;;:44;::::1;;7601:372;;;7673:23;7687:8;7673:13;:23::i;:::-;7665:41;;;::::0;-1:-1:-1;;;7665:41:6;;3412:2:33;7665:41:6::1;::::0;::::1;3394:21:33::0;3451:1;3431:18;;;3424:29;-1:-1:-1;;;3469:18:33;;;3462:35;3514:18;;7665:41:6::1;3210:328:33::0;7665:41:6::1;-1:-1:-1::0;;;;;7760:30:6;::::1;;::::0;;;:20:::1;:30;::::0;;;;;;;:37;;-1:-1:-1;;7760:37:6::1;7793:4;7760:37:::0;;::::1;::::0;;;7912:20:::1;:30:::0;;;;;;:36;;::::1;::::0;7842:120;;3689:25:33;;;7842:120:6::1;::::0;3662:18:33;7842:120:6::1;;;;;;;7601:372;7436:543:::0;:::o;8120:293::-;1094:13:12;:11;:13::i;:::-;-1:-1:-1;;;;;8204:30:6;::::1;;::::0;;;:20:::1;:30;::::0;;;;;::::1;;8196:49;;;::::0;-1:-1:-1;;;8196:49:6;;3927:2:33;8196:49:6::1;::::0;::::1;3909:21:33::0;3966:1;3946:18;;;3939:29;-1:-1:-1;;;3984:18:33;;;3977:36;4030:18;;8196:49:6::1;3725:329:33::0;8196:49:6::1;-1:-1:-1::0;;;;;8303:30:6;::::1;;::::0;;;:20:::1;:30;::::0;;;;;8296:37;;-1:-1:-1;;8296:37:6::1;::::0;;8370:36;::::1;::::0;8303:30;8370:36:::1;8120:293:::0;:::o;9353:104::-;1094:13:12;:11;:13::i;:::-;9423:27:6::1;::::0;-1:-1:-1;;;9423:27:6;;4261:2:33;9423:27:6::1;::::0;::::1;4243:21:33::0;4300:2;4280:18;;;4273:30;-1:-1:-1;;;4319:18:33;;;4312:47;4376:18;;9423:27:6::1;4059:341:33::0;3661:267:6;1094:13:12;:11;:13::i;:::-;-1:-1:-1;;;;;3773:30:6;::::1;3765:39;;;::::0;::::1;;3887:15;:34:::0;;-1:-1:-1;;;;;;3887:34:6::1;-1:-1:-1::0;;;;;3887:34:6;;;::::1;::::0;;;::::1;::::0;;3661:267::o;6876:439::-;6963:10;6942:32;;;;:20;:32;;;;;;;;6941:33;6933:48;;;;-1:-1:-1;;;6933:48:6;;;;;;;:::i;:::-;7088:10;7067:32;;;;:20;:32;;;;;:46;;;7059:65;;;;-1:-1:-1;;;7059:65:6;;4607:2:33;7059:65:6;;;4589:21:33;4646:1;4626:18;;;4619:29;-1:-1:-1;;;4664:18:33;;;4657:36;4710:18;;7059:65:6;4405:329:33;7059:65:6;7134:25;7148:10;7134:13;:25::i;:::-;-1:-1:-1;7236:10:6;7260:32;;;;:20;:32;;;;;;;;;:38;;;7196:112;;3689:25:33;;;7196:112:6;;3662:18:33;7196:112:6;;;;;;;6876:439::o;4104:1389::-;4245:10;4224:32;;;;:20;:32;;;;;;;;4223:33;4215:48;;;;-1:-1:-1;;;4215:48:6;;;;;;;:::i;:::-;4303:10;4282:32;;;;:20;:32;;;;;:46;;;4281:47;4273:62;;;;-1:-1:-1;;;4273:62:6;;4941:2:33;4273:62:6;;;4923:21:33;4980:1;4960:18;;;4953:29;-1:-1:-1;;;4998:18:33;;;4991:32;5040:18;;4273:62:6;4739:325:33;4273:62:6;4387:10;4427:1;4366:32;;;:20;:32;;;;;:49;;;;-1:-1:-1;;;;;4366:49:6;:63;4345:118;;;;-1:-1:-1;;;4345:118:6;;5271:2:33;4345:118:6;;;5253:21:33;5310:1;5290:18;;;5283:29;-1:-1:-1;;;5328:18:33;;;5321:38;5376:18;;4345:118:6;5069:331:33;4345:118:6;4502:10;4481:32;;;;:20;:32;;;;;:38;;;:43;4473:62;;;;-1:-1:-1;;;4473:62:6;;5607:2:33;4473:62:6;;;5589:21:33;5646:1;5626:18;;;5619:29;-1:-1:-1;;;5664:18:33;;;5657:36;5710:18;;4473:62:6;5405:329:33;4473:62:6;4574:1;4559:4;4553:18;:22;:50;;;;;4602:1;4585:6;4579:20;:24;4553:50;4545:68;;;;-1:-1:-1;;;4545:68:6;;5941:2:33;4545:68:6;;;5923:21:33;5980:1;5960:18;;;5953:29;-1:-1:-1;;;5998:18:33;;;5991:35;6043:18;;4545:68:6;5739:328:33;4545:68:6;4666:2;4650:4;4644:18;:24;;:54;;;;;4696:2;4678:6;4672:20;:26;;4644:54;4623:109;;;;-1:-1:-1;;;4623:109:6;;6274:2:33;4623:109:6;;;6256:21:33;6313:1;6293:18;;;6286:29;-1:-1:-1;;;6331:18:33;;;6324:38;6379:18;;4623:109:6;6072:331:33;4623:109:6;4787:5;;;;;;;;;-1:-1:-1;;;;;4787:5:6;-1:-1:-1;;;;;4787:23:6;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4779:45;;;;-1:-1:-1;;;4779:45:6;;6892:2:33;4779:45:6;;;6874:21:33;6931:1;6911:18;;;6904:29;-1:-1:-1;;;6949:18:33;;;6942:37;6996:18;;4779:45:6;6690:330:33;4779:45:6;4937:47;;;;;;;;;;;;;;;;;;5059:10;4871:63;5038:32;;;:20;:32;;;;;;:53;;-1:-1:-1;;5038:53:6;5087:4;5038:53;;;5101:25;;4937:47;;-1:-1:-1;;;5101:25:6;;;5038:53;5101:25;;:23;:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5227:5:6;;:71;;-1:-1:-1;;;5227:71:6;;-1:-1:-1;;;;;5227:5:6;;;;:13;;:71;;5254:10;;5278;;5227:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5207:10;5186:32;;;;:20;:32;;;;;:38;;:112;5344:24;:22;:24::i;:::-;5414:10;5438:32;;;;:20;:32;;;;;;;;;:38;;;5383:103;;3689:25:33;;;5383:103:6;;3662:18:33;5383:103:6;;;;;;;4205:1288;4104:1389;;:::o;2081:198:12:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:12;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:12;;8792:2:33;2161:73:12::1;::::0;::::1;8774:21:33::0;8831:2;8811:18;;;8804:30;8870:34;8850:18;;;8843:62;-1:-1:-1;;;8921:18:33;;;8914:36;8967:19;;2161:73:12::1;8590:402:33::0;2161:73:12::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:12;719:10:27;1422:23:12;1414:68;;;;-1:-1:-1;;;1414:68:12;;9199:2:33;1414:68:12;;;9181:21:33;;;9218:18;;;9211:30;9277:34;9257:18;;;9250:62;9329:18;;1414:68:12;8997:356:33;1414:68:12;1359:130::o;8625:643:6:-;8740:5;;-1:-1:-1;;;;;8754:30:6;;;8683:4;8754:30;;;:20;:30;;;;;;8740:5;8754:36;;8740:51;;-1:-1:-1;;;8740:51:6;;;;;3689:25:33;;;;8683:4:6;;8740:5;;;;;:13;;3662:18:33;;8740:51:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8719:108;;;;-1:-1:-1;;;8719:108:6;;9560:2:33;8719:108:6;;;9542:21:33;9599:2;9579:18;;;9572:30;-1:-1:-1;;;9618:18:33;;;9611:40;9668:18;;8719:108:6;9358:334:33;8719:108:6;-1:-1:-1;;;;;8894:30:6;;;;;;;:20;:30;;;;;;;;:47;8874:8;:68;;-1:-1:-1;;;;;;8874:68:6;8894:47;;;;;;;8874:68;;;;;;8960:18;;-1:-1:-1;;;8960:18:6;;;;:16;;:18;;;;;8894:30;8960:18;;;;;;;8894:47;8960:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8952:44;;;;-1:-1:-1;;;8952:44:6;;9899:2:33;8952:44:6;;;9881:21:33;9938:2;9918:18;;;9911:30;-1:-1:-1;;;9957:18:33;;;9950:43;10010:18;;8952:44:6;9697:337:33;8952:44:6;9027:8;;;9067;;9027:50;;-1:-1:-1;;;9027:50:6;;-1:-1:-1;;;;;9067:8:6;;;9027:50;;;1000:51:33;;;;9027:8:6;;:31;;973:18:33;;9027:50:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9006:111;;;;-1:-1:-1;;;9006:111:6;;10241:2:33;9006:111:6;;;10223:21:33;10280:2;10260:18;;;10253:30;-1:-1:-1;;;10299:18:33;;;10292:44;10353:18;;9006:111:6;10039:338:33;9006:111:6;-1:-1:-1;;;;;9175:30:6;;;;;;:20;:30;;;;;9168:37;;-1:-1:-1;;;;;;9168:37:6;;;;;;;;9215:25;;-1:-1:-1;;;9215:25:6;;9168:37;9215:25;;:23;:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;9257:4;9250:11;;8625:643;;;:::o;5571:1231::-;5653:10;5632:32;;;;:20;:32;;;;;;;;5631:33;5623:48;;;;-1:-1:-1;;;5623:48:6;;;;;;;:::i;:::-;5710:10;5689:32;;;;:20;:32;;;;;:46;;;5681:65;;;;-1:-1:-1;;;5681:65:6;;4607:2:33;5681:65:6;;;4589:21:33;4646:1;4626:18;;;4619:29;-1:-1:-1;;;4664:18:33;;;4657:36;4710:18;;5681:65:6;4405:329:33;5681:65:6;5798:10;5838:1;5777:32;;;:20;:32;;;;;:49;;;;-1:-1:-1;;;;;5777:49:6;:63;5756:118;;;;-1:-1:-1;;;5756:118:6;;5271:2:33;5756:118:6;;;5253:21:33;5310:1;5290:18;;;5283:29;-1:-1:-1;;;5328:18:33;;;5321:38;5376:18;;5756:118:6;5069:331:33;5756:118:6;5913:10;5892:32;;;;:20;:32;;;;;:38;;;:43;;5884:66;;;;-1:-1:-1;;;5884:66:6;;10767:2:33;5884:66:6;;;10749:21:33;10806:2;10786:18;;;10779:30;-1:-1:-1;;;10825:18:33;;;10818:40;10875:18;;5884:66:6;10565:334:33;5884:66:6;5968:15;;-1:-1:-1;;;;;5968:15:6;5960:38;;;;;;6224:3;;;6296:13;6433:8;;6498:15;;6055:468;;6139:10;;-1:-1:-1;;;;;6224:3:6;;;;6296:13;;;6371:4;;6433:8;;;;6498:15;;;6055:468;;;:::i;:::-;-1:-1:-1;;;;;11247:15:33;;;11229:34;;11299:15;;;11294:2;11279:18;;11272:43;11351:15;;;11346:2;11331:18;;11324:43;11403:15;;;11398:2;11383:18;;11376:43;11456:15;;11450:3;11435:19;;11428:44;11509:15;;;11209:3;11488:19;;11481:44;11178:3;11163:19;6055:468:6;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6044:8:6;:479;;-1:-1:-1;;;;;;6044:479:6;-1:-1:-1;;;;;6044:479:6;;;;;;;;6614:10;-1:-1:-1;6593:32:6;;;:20;:32;;;;;;;:69;;-1:-1:-1;;;;;;6593:69:6;6044:479;6593:69;;;;;;;;;;6742:8;;;6779;;6742:53;;-1:-1:-1;;;6742:53:6;;6779:8;;;6742:53;;;11704:51:33;-1:-1:-1;11771:18:33;;;11764:50;6742:8:6;;;:28;;11677:18:33;;6742:53:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5571:1231::o;2433:187:12:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:12;;;-1:-1:-1;;;;;;2541:17:12;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;14:286:33:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:33;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:33:o;1476:127::-;1537:10;1532:3;1528:20;1525:1;1518:31;1568:4;1565:1;1558:15;1592:4;1589:1;1582:15;1608:719;1651:5;1704:3;1697:4;1689:6;1685:17;1681:27;1671:55;;1722:1;1719;1712:12;1671:55;1758:6;1745:20;1784:18;1821:2;1817;1814:10;1811:36;;;1827:18;;:::i;:::-;1902:2;1896:9;1870:2;1956:13;;-1:-1:-1;;1952:22:33;;;1976:2;1948:31;1944:40;1932:53;;;2000:18;;;2020:22;;;1997:46;1994:72;;;2046:18;;:::i;:::-;2086:10;2082:2;2075:22;2121:2;2113:6;2106:18;2167:3;2160:4;2155:2;2147:6;2143:15;2139:26;2136:35;2133:55;;;2184:1;2181;2174:12;2133:55;2248:2;2241:4;2233:6;2229:17;2222:4;2214:6;2210:17;2197:54;2295:1;2288:4;2283:2;2275:6;2271:15;2267:26;2260:37;2315:6;2306:15;;;;;;1608:719;;;;:::o;2332:543::-;2420:6;2428;2481:2;2469:9;2460:7;2456:23;2452:32;2449:52;;;2497:1;2494;2487:12;2449:52;2537:9;2524:23;2566:18;2607:2;2599:6;2596:14;2593:34;;;2623:1;2620;2613:12;2593:34;2646:50;2688:7;2679:6;2668:9;2664:22;2646:50;:::i;:::-;2636:60;;2749:2;2738:9;2734:18;2721:32;2705:48;;2778:2;2768:8;2765:16;2762:36;;;2794:1;2791;2784:12;2762:36;;2817:52;2861:7;2850:8;2839:9;2835:24;2817:52;:::i;:::-;2807:62;;;2332:543;;;;;:::o;2880:325::-;3082:2;3064:21;;;3121:1;3101:18;;;3094:29;-1:-1:-1;;;3154:2:33;3139:18;;3132:32;3196:2;3181:18;;2880:325::o;6408:277::-;6475:6;6528:2;6516:9;6507:7;6503:23;6499:32;6496:52;;;6544:1;6541;6534:12;6496:52;6576:9;6570:16;6629:5;6622:13;6615:21;6608:5;6605:32;6595:60;;6651:1;6648;6641:12;7025:127;7086:10;7081:3;7077:20;7074:1;7067:31;7117:4;7114:1;7107:15;7141:4;7138:1;7131:15;7157:175;7194:3;7238:4;7231:5;7227:16;7267:4;7258:7;7255:17;7252:43;;7275:18;;:::i;:::-;7324:1;7311:15;;7157:175;-1:-1:-1;;7157:175:33:o;7337:423::-;7379:3;7417:5;7411:12;7444:6;7439:3;7432:19;7469:1;7479:162;7493:6;7490:1;7487:13;7479:162;;;7555:4;7611:13;;;7607:22;;7601:29;7583:11;;;7579:20;;7572:59;7508:12;7479:162;;;7483:3;7686:1;7679:4;7670:6;7665:3;7661:16;7657:27;7650:38;7749:4;7742:2;7738:7;7733:2;7725:6;7721:15;7717:29;7712:3;7708:39;7704:50;7697:57;;;7337:423;;;;:::o;7765:631::-;8007:1;8003;7998:3;7994:11;7990:19;7982:6;7978:32;7967:9;7960:51;8047:2;8042;8031:9;8027:18;8020:30;7941:4;8085:6;8079:13;8128:2;8123;8112:9;8108:18;8101:30;8154:52;8201:3;8190:9;8186:19;8172:12;8154:52;:::i;:::-;8140:66;;8255:2;8247:6;8243:15;8237:22;8327:2;8323:7;8311:9;8303:6;8299:22;8295:36;8290:2;8279:9;8275:18;8268:64;8349:41;8383:6;8367:14;8349:41;:::i;:::-;8341:49;7765:631;-1:-1:-1;;;;;;7765:631:33:o;8401:184::-;8471:6;8524:2;8512:9;8503:7;8499:23;8495:32;8492:52;;;8540:1;8537;8530:12;8492:52;-1:-1:-1;8563:16:33;;8401:184;-1:-1:-1;8401:184:33:o;10382:178::-;10419:3;10463:4;10456:5;10452:16;10487:7;10477:41;;10498:18;;:::i;:::-;-1:-1:-1;;10534:20:33;;10382:178;-1:-1:-1;;10382:178:33:o",
  "source": "// SPDX-License-Identifier: CC-BY-4.0\npragma solidity ^0.8.17;\n\n//import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n//import \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./BikeRent.sol\";\n\n/**\n * @title I2VaultW2R\n * @dev Interface for interacting with the VaultW2R contract.\n */\ninterface I2VaultW2R {\n    function setApprovedContract(address contractAddress, bool status) external;\n\n    function removeApprovedContract(\n        address contractAddress\n    ) external returns (bool);\n}\n\n/**\n * @title I1TwoWheels2RentRenter\n * @dev Interface for interacting with the TwoWheels2RentRenter contract.\n */\n\ninterface I1TwoWheels2RentRenter {\n    struct RenterInfo {\n        string name;\n        string rather;\n    }\n\n    function getIpfsHashLength() external view returns (bool);\n\n    function mintNFT(\n        address recipient,\n        RenterInfo calldata renterInfo\n    ) external returns (uint);\n\n    function burnNFT(uint tokenId) external returns (bool);\n}\n\n/**\n * @title RenterWhitelist\n * @dev This contract manages a whitelist of renters and their associated BikeRent contracts.\n * It allows renters to be added to the whitelist and to deploy BikeRent contracts.\n * The contract owner can add and remove renters from the blacklist.\n */\n\ncontract RenterWhitelist is Ownable {\n    // keep track of the number of whitelisted addresses\n    uint8 public numAddressesWhitelisted;\n    // address of the lender NFT contract\n    address TW2RLenderNFT;\n    // address of the lender whitelist contract\n    address lenderWhitelist;\n    // import W2R token contract\n    ERC20 public W2R;\n    // import VaultW2R interface\n    I2VaultW2R private vaultW2R;\n\n    event RenterWhitelisted(address indexed renter, uint NFTId);\n    event RenterBlacklisted(address indexed renter, uint NFTId);\n    event RenterRemovedFromBlacklist(address indexed renter);\n    event RenterRemovedFromWhitelist(address indexed renter, uint NFTId);\n\n    // struct of whitelisted addresses\n    struct Renter {\n        bool isWhitelisted;\n        address bikeRentContract;\n        uint NFTId;\n    }\n\n    // mapping of whitelisted addresses, starting false for all addresses\n    mapping(address => Renter) public whitelistedAddresses;\n    // blacklist mapping\n    mapping(address => bool) public blacklistedAddresses;\n\n    I1TwoWheels2RentRenter TW2RR;\n\n    BikeRent bikeRent;\n\n    /**\n     * @notice Constructor to set the required addresses for the contract.\n     * @param _TW2RR Address of the TwoWheels2RentRenter contract.\n     * @param _W2R Address of the W2R token contract.\n     * @param _TW2RLenderNFT Address of the Lender NFT contract.\n     * @param _vaultW2R Address of the VaultW2R contract.\n     */\n\n    constructor(\n        address _TW2RR,\n        address _W2R,\n        address _TW2RLenderNFT,\n        I2VaultW2R _vaultW2R\n    ) {\n        require(\n            _TW2RR != address(0) &&\n                _W2R != address(0) &&\n                _TW2RLenderNFT != address(0) &&\n                address(_vaultW2R) != address(0),\n            \"bad address\"\n        );\n        vaultW2R = _vaultW2R;\n        // set the address of the TwoWheels2RentRenter contract\n        TW2RR = I1TwoWheels2RentRenter(_TW2RR);\n        // set the address of the W2R token contract\n        W2R = ERC20(_W2R);\n        // set the address of the lender NFT contract\n        TW2RLenderNFT = _TW2RLenderNFT;\n    }\n\n    /**\n     * @notice Set the LenderWhitelist contract address.\n     * @param _lenderWhitelist Address of the LenderWhitelist contract.\n     */\n    function setLenderWhitelistAddress(\n        address _lenderWhitelist\n    ) external onlyOwner {\n        require(_lenderWhitelist != address(0));\n        // set the address of the TwoWheels2RentLenderWhitelist contract\n        lenderWhitelist = _lenderWhitelist;\n    }\n\n    /**\n     * @notice Add a renter to the whitelist, set Renter struct and call mintNFT.\n     * @param name Renter's name.\n     * @param rather Renter's rather.\n     */\n    function setRenterInfoAndMint(\n        string memory name,\n        string memory rather\n    ) public {\n        require(!blacklistedAddresses[msg.sender], \"bl\");\n        require(!whitelistedAddresses[msg.sender].isWhitelisted, \"wl\");\n        require(\n            whitelistedAddresses[msg.sender].bikeRentContract == address(0),\n            \"deployed\"\n        );\n        require(whitelistedAddresses[msg.sender].NFTId == 0, \"minted\");\n        require(bytes(name).length > 0 && bytes(rather).length > 0, \"empty\");\n        require(\n            bytes(name).length <= 40 && bytes(rather).length <= 40,\n            \"too long\"\n        );\n        // check if the image is set\n        require(TW2RR.getIpfsHashLength(), \"no IPFS\");\n        // set the RenterInfo struct\n        I1TwoWheels2RentRenter.RenterInfo\n            memory renterInfo = I1TwoWheels2RentRenter.RenterInfo(name, rather);\n        // add the address to the whitelist\n        whitelistedAddresses[msg.sender].isWhitelisted = true;\n        numAddressesWhitelisted++;\n        // mint and add the NFT id to the mapping\n        whitelistedAddresses[msg.sender].NFTId = TW2RR.mintNFT(\n            msg.sender,\n            renterInfo\n        );\n        // deploy bikeRent contract\n        deployBikeRentContract();\n        emit RenterWhitelisted(\n            msg.sender,\n            whitelistedAddresses[msg.sender].NFTId\n        );\n    }\n\n    /**\n     * @dev Deploy a BikeRent contract for the renter.\n     */\n\n    function deployBikeRentContract() private {\n        require(!blacklistedAddresses[msg.sender], \"bl\");\n        require(whitelistedAddresses[msg.sender].isWhitelisted, \"not wl\");\n        require(\n            whitelistedAddresses[msg.sender].bikeRentContract == address(0),\n            \"deployed\"\n        );\n        require(whitelistedAddresses[msg.sender].NFTId != 0, \"not minted\");\n        require(lenderWhitelist != address(0));\n        // deploy bikeRent contract\n        bikeRent = new BikeRent(\n            // the address of the caller of this function\n            msg.sender,\n            // the address of the W2R token contract\n            address(W2R),\n            // the address of the Lender NFT contract\n            TW2RLenderNFT,\n            // address of this contract\n            address(this),\n            // address of vaultW2R\n            address(vaultW2R),\n            // address of lenderWhitelist\n            lenderWhitelist\n        );\n        // add the bikeRent contract address to the mapping\n        whitelistedAddresses[msg.sender].bikeRentContract = address(bikeRent);\n        // authorize the bikeShare contract to spend vault W2R tokens\n        vaultW2R.setApprovedContract(address(bikeRent), true);\n    }\n\n    /**\n     * @notice Remove a renter from the whitelist.\n     */\n\n    function removeAddressFromWhitelist() external {\n        require(!blacklistedAddresses[msg.sender], \"bl\");\n        // msg.sender is the address of the caller of this function\n        require(whitelistedAddresses[msg.sender].isWhitelisted, \"not wl\");\n        doRemoveStuff(msg.sender);\n        // emit event\n        emit RenterRemovedFromWhitelist(\n            msg.sender,\n            whitelistedAddresses[msg.sender].NFTId\n        );\n    }\n\n    /**\n     * @notice Add an address to the blacklist.\n     * @param _address Address to be blacklisted.\n     */\n\n    function addToBlacklist(address _address) external onlyOwner {\n        require(!blacklistedAddresses[_address], \"bl\");\n        // if address was whitelisted\n        if (whitelistedAddresses[_address].isWhitelisted) {\n            require(doRemoveStuff(_address), \"error\");\n            // add address to blacklist\n            blacklistedAddresses[_address] = true;\n            // emit event\n            emit RenterRemovedFromWhitelist(\n                _address,\n                whitelistedAddresses[_address].NFTId\n            );\n        }\n    }\n\n    /**\n     * @notice Remove an address from the blacklist.\n     * @param _address Address to be removed from the blacklist.\n     */\n\n    function removeFromBlacklist(address _address) external onlyOwner {\n        require(blacklistedAddresses[_address], \"not bl\");\n        // remove address from blacklist\n        delete blacklistedAddresses[_address];\n        // emit event\n        emit RenterRemovedFromBlacklist(_address);\n    }\n\n    /**\n     * @dev Perform necessary actions to remove a renter from the whitelist.\n     * @param _address Address of the renter to be removed.\n     * @return true if successful, false otherwise.\n     */\n\n    function doRemoveStuff(address _address) private returns (bool) {\n        // burn NFT\n        require(\n            TW2RR.burnNFT(whitelistedAddresses[_address].NFTId),\n            \"burn error\"\n        );\n        // destroy bikeRent contract\n        bikeRent = BikeRent(whitelistedAddresses[_address].bikeRentContract);\n        require(bikeRent.destroy(), \"error destroy\");\n        require(\n            vaultW2R.removeApprovedContract(address(bikeRent)),\n            \"Error removing\"\n        );\n        // remove address from whitelist\n        delete whitelistedAddresses[_address];\n        numAddressesWhitelisted--;\n        return true;\n    }\n\n    /**\n     * @notice Prevent renouncing ownership of this contract.\n     */\n\n    function renounceOwnership() public view override onlyOwner {\n        revert(\"Cant be renounced\");\n    }\n}\n",
  "sourcePath": "/Users/harbinger/Dropbox/Dossier familial/Formation Blockchain/Alyra/Projet Certification/Projet Alyra 2Wheels2Rent/truffle/contracts/RenterWhitelist.sol",
  "ast": {
    "absolutePath": "project:/contracts/RenterWhitelist.sol",
    "exportedSymbols": {
      "Address": [
        11904
      ],
      "BikeRent": [
        2112
      ],
      "Context": [
        11926
      ],
      "ERC20": [
        9897
      ],
      "I1TwoWheels2RentRenter": [
        6637
      ],
      "I2VaultW2R": [
        6608
      ],
      "I4VaultW2R": [
        129
      ],
      "IBikeShare": [
        199
      ],
      "IERC165": [
        12211
      ],
      "IERC20": [
        9975
      ],
      "IERC20Metadata": [
        10044
      ],
      "IERC20Permit": [
        10080
      ],
      "IERC721": [
        11404
      ],
      "IlenderWhitelist": [
        146
      ],
      "Ownable": [
        9199
      ],
      "RenterWhitelist": [
        7210
      ],
      "SafeERC20": [
        10361
      ],
      "Utilities": [
        8388
      ]
    },
    "id": 7211,
    "license": "CC-BY-4.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6589,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:24:6"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 6590,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7211,
        "sourceUnit": 9898,
        "src": "177:71:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 6591,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7211,
        "sourceUnit": 9200,
        "src": "249:68:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/BikeRent.sol",
        "file": "./BikeRent.sol",
        "id": 6592,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7211,
        "sourceUnit": 2113,
        "src": "318:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "I2VaultW2R",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 6593,
          "nodeType": "StructuredDocumentation",
          "src": "344:90:6",
          "text": " @title I2VaultW2R\n @dev Interface for interacting with the VaultW2R contract."
        },
        "fullyImplemented": false,
        "id": 6608,
        "linearizedBaseContracts": [
          6608
        ],
        "name": "I2VaultW2R",
        "nameLocation": "445:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "5ffd993b",
            "id": 6600,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovedContract",
            "nameLocation": "471:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6595,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "499:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6600,
                  "src": "491:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6597,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "521:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6600,
                  "src": "516:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6596,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:38:6"
            },
            "returnParameters": {
              "id": 6599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:0:6"
            },
            "scope": 6608,
            "src": "462:76:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "9eea2279",
            "id": 6607,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeApprovedContract",
            "nameLocation": "553:22:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6602,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "593:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6607,
                  "src": "585:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "575:39:6"
            },
            "returnParameters": {
              "id": 6606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6607,
                  "src": "633:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6604,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:6:6"
            },
            "scope": 6608,
            "src": "544:95:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7211,
        "src": "435:206:6",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "I1TwoWheels2RentRenter",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 6609,
          "nodeType": "StructuredDocumentation",
          "src": "643:114:6",
          "text": " @title I1TwoWheels2RentRenter\n @dev Interface for interacting with the TwoWheels2RentRenter contract."
        },
        "fullyImplemented": false,
        "id": 6637,
        "linearizedBaseContracts": [
          6637
        ],
        "name": "I1TwoWheels2RentRenter",
        "nameLocation": "769:22:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "I1TwoWheels2RentRenter.RenterInfo",
            "id": 6614,
            "members": [
              {
                "constant": false,
                "id": 6611,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "833:4:6",
                "nodeType": "VariableDeclaration",
                "scope": 6614,
                "src": "826:11:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6610,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "826:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6613,
                "mutability": "mutable",
                "name": "rather",
                "nameLocation": "854:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 6614,
                "src": "847:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6612,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "847:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RenterInfo",
            "nameLocation": "805:10:6",
            "nodeType": "StructDefinition",
            "scope": 6637,
            "src": "798:69:6",
            "visibility": "public"
          },
          {
            "functionSelector": "40219945",
            "id": 6619,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getIpfsHashLength",
            "nameLocation": "882:17:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:2:6"
            },
            "returnParameters": {
              "id": 6618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6617,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6619,
                  "src": "925:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6616,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:6:6"
            },
            "scope": 6637,
            "src": "873:58:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "e8c3bc05",
            "id": 6629,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFT",
            "nameLocation": "946:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6621,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "971:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6629,
                  "src": "963:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6624,
                  "mutability": "mutable",
                  "name": "renterInfo",
                  "nameLocation": "1010:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6629,
                  "src": "990:30:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RenterInfo_$6614_calldata_ptr",
                    "typeString": "struct I1TwoWheels2RentRenter.RenterInfo"
                  },
                  "typeName": {
                    "id": 6623,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6622,
                      "name": "RenterInfo",
                      "nameLocations": [
                        "990:10:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6614,
                      "src": "990:10:6"
                    },
                    "referencedDeclaration": 6614,
                    "src": "990:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RenterInfo_$6614_storage_ptr",
                      "typeString": "struct I1TwoWheels2RentRenter.RenterInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:73:6"
            },
            "returnParameters": {
              "id": 6628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6627,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6629,
                  "src": "1045:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6626,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1044:6:6"
            },
            "scope": 6637,
            "src": "937:114:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2890e0d7",
            "id": 6636,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burnNFT",
            "nameLocation": "1066:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6631,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1079:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6636,
                  "src": "1074:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6630,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1073:14:6"
            },
            "returnParameters": {
              "id": 6635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6634,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6636,
                  "src": "1106:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6633,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1105:6:6"
            },
            "scope": 6637,
            "src": "1057:55:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7211,
        "src": "759:355:6",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6639,
              "name": "Ownable",
              "nameLocations": [
                "1426:7:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9199,
              "src": "1426:7:6"
            },
            "id": 6640,
            "nodeType": "InheritanceSpecifier",
            "src": "1426:7:6"
          }
        ],
        "canonicalName": "RenterWhitelist",
        "contractDependencies": [
          2112
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6638,
          "nodeType": "StructuredDocumentation",
          "src": "1116:280:6",
          "text": " @title RenterWhitelist\n @dev This contract manages a whitelist of renters and their associated BikeRent contracts.\n It allows renters to be added to the whitelist and to deploy BikeRent contracts.\n The contract owner can add and remove renters from the blacklist."
        },
        "fullyImplemented": true,
        "id": 7210,
        "linearizedBaseContracts": [
          7210,
          9199,
          11926
        ],
        "name": "RenterWhitelist",
        "nameLocation": "1407:15:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4011d7cd",
            "id": 6642,
            "mutability": "mutable",
            "name": "numAddressesWhitelisted",
            "nameLocation": "1510:23:6",
            "nodeType": "VariableDeclaration",
            "scope": 7210,
            "src": "1497:36:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 6641,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1497:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6644,
            "mutability": "mutable",
            "name": "TW2RLenderNFT",
            "nameLocation": "1589:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 7210,
            "src": "1581:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6643,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1581:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6646,
            "mutability": "mutable",
            "name": "lenderWhitelist",
            "nameLocation": "1664:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 7210,
            "src": "1656:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6645,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1656:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8f036072",
            "id": 6649,
            "mutability": "mutable",
            "name": "W2R",
            "nameLocation": "1731:3:6",
            "nodeType": "VariableDeclaration",
            "scope": 7210,
            "src": "1718:16:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$9897",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 6648,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6647,
                "name": "ERC20",
                "nameLocations": [
                  "1718:5:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9897,
                "src": "1718:5:6"
              },
              "referencedDeclaration": 9897,
              "src": "1718:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$9897",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6652,
            "mutability": "mutable",
            "name": "vaultW2R",
            "nameLocation": "1792:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 7210,
            "src": "1773:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
              "typeString": "contract I2VaultW2R"
            },
            "typeName": {
              "id": 6651,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6650,
                "name": "I2VaultW2R",
                "nameLocations": [
                  "1773:10:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6608,
                "src": "1773:10:6"
              },
              "referencedDeclaration": 6608,
              "src": "1773:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                "typeString": "contract I2VaultW2R"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "df1fc30c9a67ee41e3e4e2050611e3d7aef8c0921a69a171a465272ae1952da6",
            "id": 6658,
            "name": "RenterWhitelisted",
            "nameLocation": "1813:17:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6654,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "renter",
                  "nameLocation": "1847:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6658,
                  "src": "1831:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6656,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "NFTId",
                  "nameLocation": "1860:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6658,
                  "src": "1855:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6655,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1830:36:6"
            },
            "src": "1807:60:6"
          },
          {
            "anonymous": false,
            "eventSelector": "3b503966ada21fd97099e978132ed0ed9b69d12e6c235864758b37932b47abd2",
            "id": 6664,
            "name": "RenterBlacklisted",
            "nameLocation": "1878:17:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6660,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "renter",
                  "nameLocation": "1912:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6664,
                  "src": "1896:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6662,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "NFTId",
                  "nameLocation": "1925:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6664,
                  "src": "1920:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6661,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1895:36:6"
            },
            "src": "1872:60:6"
          },
          {
            "anonymous": false,
            "eventSelector": "62576b323defc6105d3c96bae5da2a00a7aae3f8f875d27b27da03d0c3cac2d7",
            "id": 6668,
            "name": "RenterRemovedFromBlacklist",
            "nameLocation": "1943:26:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6666,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "renter",
                  "nameLocation": "1986:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6668,
                  "src": "1970:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1969:24:6"
            },
            "src": "1937:57:6"
          },
          {
            "anonymous": false,
            "eventSelector": "2521e1d2181ef8de636f6830a509e2813fb22c1822a283dad266e756f0e3c2ec",
            "id": 6674,
            "name": "RenterRemovedFromWhitelist",
            "nameLocation": "2005:26:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6670,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "renter",
                  "nameLocation": "2048:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6674,
                  "src": "2032:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6672,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "NFTId",
                  "nameLocation": "2061:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6674,
                  "src": "2056:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6671,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2031:36:6"
            },
            "src": "1999:69:6"
          },
          {
            "canonicalName": "RenterWhitelist.Renter",
            "id": 6681,
            "members": [
              {
                "constant": false,
                "id": 6676,
                "mutability": "mutable",
                "name": "isWhitelisted",
                "nameLocation": "2142:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 6681,
                "src": "2137:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6675,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2137:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6678,
                "mutability": "mutable",
                "name": "bikeRentContract",
                "nameLocation": "2173:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 6681,
                "src": "2165:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6677,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2165:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6680,
                "mutability": "mutable",
                "name": "NFTId",
                "nameLocation": "2204:5:6",
                "nodeType": "VariableDeclaration",
                "scope": 6681,
                "src": "2199:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6679,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2199:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Renter",
            "nameLocation": "2120:6:6",
            "nodeType": "StructDefinition",
            "scope": 7210,
            "src": "2113:103:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06c933d8",
            "id": 6686,
            "mutability": "mutable",
            "name": "whitelistedAddresses",
            "nameLocation": "2330:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 7210,
            "src": "2296:54:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
              "typeString": "mapping(address => struct RenterWhitelist.Renter)"
            },
            "typeName": {
              "id": 6685,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 6682,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2304:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2296:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                "typeString": "mapping(address => struct RenterWhitelist.Renter)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 6684,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6683,
                  "name": "Renter",
                  "nameLocations": [
                    "2315:6:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6681,
                  "src": "2315:6:6"
                },
                "referencedDeclaration": 6681,
                "src": "2315:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Renter_$6681_storage_ptr",
                  "typeString": "struct RenterWhitelist.Renter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5749d42",
            "id": 6690,
            "mutability": "mutable",
            "name": "blacklistedAddresses",
            "nameLocation": "2413:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 7210,
            "src": "2381:52:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 6689,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 6687,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2389:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2381:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 6688,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2400:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6693,
            "mutability": "mutable",
            "name": "TW2RR",
            "nameLocation": "2463:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 7210,
            "src": "2440:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_I1TwoWheels2RentRenter_$6637",
              "typeString": "contract I1TwoWheels2RentRenter"
            },
            "typeName": {
              "id": 6692,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6691,
                "name": "I1TwoWheels2RentRenter",
                "nameLocations": [
                  "2440:22:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6637,
                "src": "2440:22:6"
              },
              "referencedDeclaration": 6637,
              "src": "2440:22:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_I1TwoWheels2RentRenter_$6637",
                "typeString": "contract I1TwoWheels2RentRenter"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6696,
            "mutability": "mutable",
            "name": "bikeRent",
            "nameLocation": "2484:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 7210,
            "src": "2475:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BikeRent_$2112",
              "typeString": "contract BikeRent"
            },
            "typeName": {
              "id": 6695,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6694,
                "name": "BikeRent",
                "nameLocations": [
                  "2475:8:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2112,
                "src": "2475:8:6"
              },
              "referencedDeclaration": 2112,
              "src": "2475:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BikeRent_$2112",
                "typeString": "contract BikeRent"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6763,
              "nodeType": "Block",
              "src": "2961:549:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 6729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 6722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 6715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 6710,
                                "name": "_TW2RR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6699,
                                "src": "2992:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 6713,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3010:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 6712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3002:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 6711,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3002:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 6714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3002:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2992:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 6721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 6716,
                                "name": "_W2R",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6701,
                                "src": "3032:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 6719,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3048:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 6718,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3040:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 6717,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3040:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 6720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3040:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3032:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2992:58:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 6728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6723,
                              "name": "_TW2RLenderNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6703,
                              "src": "3070:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 6726,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3096:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 6725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3088:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 6724,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3088:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 6727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3088:10:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3070:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2992:106:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 6732,
                                "name": "_vaultW2R",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6706,
                                "src": "3126:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                                  "typeString": "contract I2VaultW2R"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                                  "typeString": "contract I2VaultW2R"
                                }
                              ],
                              "id": 6731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3118:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6730,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3118:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3118:18:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 6736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3148:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 6735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3140:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6734,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3140:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3140:10:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3118:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2992:158:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6261642061646472657373",
                        "id": 6740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3164:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a88b47c233ae917c566b691da54c8824c13e1421996ad27f9ae3f5b45f66380",
                          "typeString": "literal_string \"bad address\""
                        },
                        "value": "bad address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a88b47c233ae917c566b691da54c8824c13e1421996ad27f9ae3f5b45f66380",
                          "typeString": "literal_string \"bad address\""
                        }
                      ],
                      "id": 6709,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2971:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2971:216:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6742,
                  "nodeType": "ExpressionStatement",
                  "src": "2971:216:6"
                },
                {
                  "expression": {
                    "id": 6745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6743,
                      "name": "vaultW2R",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6652,
                      "src": "3197:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                        "typeString": "contract I2VaultW2R"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6744,
                      "name": "_vaultW2R",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6706,
                      "src": "3208:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                        "typeString": "contract I2VaultW2R"
                      }
                    },
                    "src": "3197:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                      "typeString": "contract I2VaultW2R"
                    }
                  },
                  "id": 6746,
                  "nodeType": "ExpressionStatement",
                  "src": "3197:20:6"
                },
                {
                  "expression": {
                    "id": 6751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6747,
                      "name": "TW2RR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6693,
                      "src": "3291:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_I1TwoWheels2RentRenter_$6637",
                        "typeString": "contract I1TwoWheels2RentRenter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6749,
                          "name": "_TW2RR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6699,
                          "src": "3322:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6748,
                        "name": "I1TwoWheels2RentRenter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6637,
                        "src": "3299:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_I1TwoWheels2RentRenter_$6637_$",
                          "typeString": "type(contract I1TwoWheels2RentRenter)"
                        }
                      },
                      "id": 6750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3299:30:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_I1TwoWheels2RentRenter_$6637",
                        "typeString": "contract I1TwoWheels2RentRenter"
                      }
                    },
                    "src": "3291:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_I1TwoWheels2RentRenter_$6637",
                      "typeString": "contract I1TwoWheels2RentRenter"
                    }
                  },
                  "id": 6752,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:38:6"
                },
                {
                  "expression": {
                    "id": 6757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6753,
                      "name": "W2R",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6649,
                      "src": "3392:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$9897",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6755,
                          "name": "_W2R",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6701,
                          "src": "3404:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6754,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9897,
                        "src": "3398:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$9897_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 6756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3398:11:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$9897",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "3392:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$9897",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 6758,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:17:6"
                },
                {
                  "expression": {
                    "id": 6761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6759,
                      "name": "TW2RLenderNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6644,
                      "src": "3473:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6760,
                      "name": "_TW2RLenderNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6703,
                      "src": "3489:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3473:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6762,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:30:6"
                }
              ]
            },
            "documentation": {
              "id": 6697,
              "nodeType": "StructuredDocumentation",
              "src": "2499:330:6",
              "text": " @notice Constructor to set the required addresses for the contract.\n @param _TW2RR Address of the TwoWheels2RentRenter contract.\n @param _W2R Address of the W2R token contract.\n @param _TW2RLenderNFT Address of the Lender NFT contract.\n @param _vaultW2R Address of the VaultW2R contract."
            },
            "id": 6764,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6699,
                  "mutability": "mutable",
                  "name": "_TW2RR",
                  "nameLocation": "2864:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6764,
                  "src": "2856:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6701,
                  "mutability": "mutable",
                  "name": "_W2R",
                  "nameLocation": "2888:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6764,
                  "src": "2880:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2880:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6703,
                  "mutability": "mutable",
                  "name": "_TW2RLenderNFT",
                  "nameLocation": "2910:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6764,
                  "src": "2902:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2902:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6706,
                  "mutability": "mutable",
                  "name": "_vaultW2R",
                  "nameLocation": "2945:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6764,
                  "src": "2934:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                    "typeString": "contract I2VaultW2R"
                  },
                  "typeName": {
                    "id": 6705,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6704,
                      "name": "I2VaultW2R",
                      "nameLocations": [
                        "2934:10:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6608,
                      "src": "2934:10:6"
                    },
                    "referencedDeclaration": 6608,
                    "src": "2934:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                      "typeString": "contract I2VaultW2R"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2846:114:6"
            },
            "returnParameters": {
              "id": 6708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2961:0:6"
            },
            "scope": 7210,
            "src": "2835:675:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6785,
              "nodeType": "Block",
              "src": "3755:173:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6773,
                          "name": "_lenderWhitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6767,
                          "src": "3773:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3801:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3793:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6774,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3793:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3793:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3773:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6772,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3765:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3765:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6780,
                  "nodeType": "ExpressionStatement",
                  "src": "3765:39:6"
                },
                {
                  "expression": {
                    "id": 6783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6781,
                      "name": "lenderWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6646,
                      "src": "3887:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6782,
                      "name": "_lenderWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6767,
                      "src": "3905:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3887:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6784,
                  "nodeType": "ExpressionStatement",
                  "src": "3887:34:6"
                }
              ]
            },
            "documentation": {
              "id": 6765,
              "nodeType": "StructuredDocumentation",
              "src": "3516:140:6",
              "text": " @notice Set the LenderWhitelist contract address.\n @param _lenderWhitelist Address of the LenderWhitelist contract."
            },
            "functionSelector": "a226481b",
            "id": 6786,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6770,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6769,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3745:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9118,
                  "src": "3745:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3745:9:6"
              }
            ],
            "name": "setLenderWhitelistAddress",
            "nameLocation": "3670:25:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6767,
                  "mutability": "mutable",
                  "name": "_lenderWhitelist",
                  "nameLocation": "3713:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6786,
                  "src": "3705:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3695:40:6"
            },
            "returnParameters": {
              "id": 6771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3755:0:6"
            },
            "scope": 7210,
            "src": "3661:267:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6931,
              "nodeType": "Block",
              "src": "4205:1288:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4223:33:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 6795,
                            "name": "blacklistedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6690,
                            "src": "4224:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 6798,
                          "indexExpression": {
                            "expression": {
                              "id": 6796,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4245:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4249:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4245:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4224:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626c",
                        "id": 6800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4258:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d181f440042e8f5830ef9ee489779e71df7443906f0969fcfe30b84dcd4f005f",
                          "typeString": "literal_string \"bl\""
                        },
                        "value": "bl"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d181f440042e8f5830ef9ee489779e71df7443906f0969fcfe30b84dcd4f005f",
                          "typeString": "literal_string \"bl\""
                        }
                      ],
                      "id": 6794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4215:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4215:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6802,
                  "nodeType": "ExpressionStatement",
                  "src": "4215:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4281:47:6",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6804,
                              "name": "whitelistedAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6686,
                              "src": "4282:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                                "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                              }
                            },
                            "id": 6807,
                            "indexExpression": {
                              "expression": {
                                "id": 6805,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4303:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4307:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4303:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4282:32:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renter_$6681_storage",
                              "typeString": "struct RenterWhitelist.Renter storage ref"
                            }
                          },
                          "id": 6808,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4315:13:6",
                          "memberName": "isWhitelisted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6676,
                          "src": "4282:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "776c",
                        "id": 6810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4330:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f888941bd07ea31c6e78b607c9e2c2f0a375eb86daa19a04e532dffc7545ca8",
                          "typeString": "literal_string \"wl\""
                        },
                        "value": "wl"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f888941bd07ea31c6e78b607c9e2c2f0a375eb86daa19a04e532dffc7545ca8",
                          "typeString": "literal_string \"wl\""
                        }
                      ],
                      "id": 6803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4273:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4273:62:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6812,
                  "nodeType": "ExpressionStatement",
                  "src": "4273:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6814,
                              "name": "whitelistedAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6686,
                              "src": "4366:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                                "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                              }
                            },
                            "id": 6817,
                            "indexExpression": {
                              "expression": {
                                "id": 6815,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4387:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4391:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4387:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4366:32:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renter_$6681_storage",
                              "typeString": "struct RenterWhitelist.Renter storage ref"
                            }
                          },
                          "id": 6818,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4399:16:6",
                          "memberName": "bikeRentContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6678,
                          "src": "4366:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4427:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4419:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6819,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4419:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4419:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4366:63:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706c6f796564",
                        "id": 6824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4443:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3ffd2fbf4ef817b99e19f63c037cd677154cf58ec0b8033503ab3ae26dceba8",
                          "typeString": "literal_string \"deployed\""
                        },
                        "value": "deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3ffd2fbf4ef817b99e19f63c037cd677154cf58ec0b8033503ab3ae26dceba8",
                          "typeString": "literal_string \"deployed\""
                        }
                      ],
                      "id": 6813,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4345:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4345:118:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6826,
                  "nodeType": "ExpressionStatement",
                  "src": "4345:118:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6828,
                              "name": "whitelistedAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6686,
                              "src": "4481:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                                "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                              }
                            },
                            "id": 6831,
                            "indexExpression": {
                              "expression": {
                                "id": 6829,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4502:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4506:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4502:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4481:32:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renter_$6681_storage",
                              "typeString": "struct RenterWhitelist.Renter storage ref"
                            }
                          },
                          "id": 6832,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4514:5:6",
                          "memberName": "NFTId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6680,
                          "src": "4481:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4523:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4481:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e746564",
                        "id": 6835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4526:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1d7849c0f6c42b67ef46bfe871686aeac2aa524ff4c77793f2afbd412acbd54",
                          "typeString": "literal_string \"minted\""
                        },
                        "value": "minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1d7849c0f6c42b67ef46bfe871686aeac2aa524ff4c77793f2afbd412acbd54",
                          "typeString": "literal_string \"minted\""
                        }
                      ],
                      "id": 6827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4473:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4473:62:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6837,
                  "nodeType": "ExpressionStatement",
                  "src": "4473:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6841,
                                  "name": "name",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6789,
                                  "src": "4559:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 6840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4553:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 6839,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4553:5:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 6842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4553:11:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 6843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4565:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4553:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4574:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4553:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6848,
                                  "name": "rather",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6791,
                                  "src": "4585:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 6847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4579:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 6846,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4579:5:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 6849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4579:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 6850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4593:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4579:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4602:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4579:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4553:50:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656d707479",
                        "id": 6854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4605:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61fc3f77ebc090777f567969ad9823cf6334ab888acb385ca72668ec5adbde80",
                          "typeString": "literal_string \"empty\""
                        },
                        "value": "empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61fc3f77ebc090777f567969ad9823cf6334ab888acb385ca72668ec5adbde80",
                          "typeString": "literal_string \"empty\""
                        }
                      ],
                      "id": 6838,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4545:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4545:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6856,
                  "nodeType": "ExpressionStatement",
                  "src": "4545:68:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6860,
                                  "name": "name",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6789,
                                  "src": "4650:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 6859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4644:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 6858,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4644:5:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 6861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4644:11:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 6862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4656:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4644:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3430",
                            "id": 6863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4666:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_40_by_1",
                              "typeString": "int_const 40"
                            },
                            "value": "40"
                          },
                          "src": "4644:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6867,
                                  "name": "rather",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6791,
                                  "src": "4678:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 6866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4672:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 6865,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4672:5:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 6868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4672:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 6869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4686:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4672:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3430",
                            "id": 6870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4696:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_40_by_1",
                              "typeString": "int_const 40"
                            },
                            "value": "40"
                          },
                          "src": "4672:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4644:54:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6f206c6f6e67",
                        "id": 6873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4712:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_672145b11400b28892b051f4e8e535b767bbafdaaf91d014164ce75ca128f736",
                          "typeString": "literal_string \"too long\""
                        },
                        "value": "too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_672145b11400b28892b051f4e8e535b767bbafdaaf91d014164ce75ca128f736",
                          "typeString": "literal_string \"too long\""
                        }
                      ],
                      "id": 6857,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4623:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4623:109:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6875,
                  "nodeType": "ExpressionStatement",
                  "src": "4623:109:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 6877,
                            "name": "TW2RR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6693,
                            "src": "4787:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_I1TwoWheels2RentRenter_$6637",
                              "typeString": "contract I1TwoWheels2RentRenter"
                            }
                          },
                          "id": 6878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4793:17:6",
                          "memberName": "getIpfsHashLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6619,
                          "src": "4787:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 6879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4787:25:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f2049504653",
                        "id": 6880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4814:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_beab432e36078c159e843a41d8bc8affd3ca400528b6a53fe284a6d85c32fd43",
                          "typeString": "literal_string \"no IPFS\""
                        },
                        "value": "no IPFS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_beab432e36078c159e843a41d8bc8affd3ca400528b6a53fe284a6d85c32fd43",
                          "typeString": "literal_string \"no IPFS\""
                        }
                      ],
                      "id": 6876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4779:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4779:45:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6882,
                  "nodeType": "ExpressionStatement",
                  "src": "4779:45:6"
                },
                {
                  "assignments": [
                    6887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6887,
                      "mutability": "mutable",
                      "name": "renterInfo",
                      "nameLocation": "4924:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 6931,
                      "src": "4871:63:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RenterInfo_$6614_memory_ptr",
                        "typeString": "struct I1TwoWheels2RentRenter.RenterInfo"
                      },
                      "typeName": {
                        "id": 6886,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6885,
                          "name": "I1TwoWheels2RentRenter.RenterInfo",
                          "nameLocations": [
                            "4871:22:6",
                            "4894:10:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6614,
                          "src": "4871:33:6"
                        },
                        "referencedDeclaration": 6614,
                        "src": "4871:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RenterInfo_$6614_storage_ptr",
                          "typeString": "struct I1TwoWheels2RentRenter.RenterInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6893,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6890,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6789,
                        "src": "4971:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 6891,
                        "name": "rather",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6791,
                        "src": "4977:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 6888,
                        "name": "I1TwoWheels2RentRenter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6637,
                        "src": "4937:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_I1TwoWheels2RentRenter_$6637_$",
                          "typeString": "type(contract I1TwoWheels2RentRenter)"
                        }
                      },
                      "id": 6889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4960:10:6",
                      "memberName": "RenterInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6614,
                      "src": "4937:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_RenterInfo_$6614_storage_ptr_$",
                        "typeString": "type(struct I1TwoWheels2RentRenter.RenterInfo storage pointer)"
                      }
                    },
                    "id": 6892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4937:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RenterInfo_$6614_memory_ptr",
                      "typeString": "struct I1TwoWheels2RentRenter.RenterInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4871:113:6"
                },
                {
                  "expression": {
                    "id": 6900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6894,
                          "name": "whitelistedAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6686,
                          "src": "5038:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                            "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                          }
                        },
                        "id": 6897,
                        "indexExpression": {
                          "expression": {
                            "id": 6895,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5059:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5063:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5059:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5038:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renter_$6681_storage",
                          "typeString": "struct RenterWhitelist.Renter storage ref"
                        }
                      },
                      "id": 6898,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5071:13:6",
                      "memberName": "isWhitelisted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6676,
                      "src": "5038:46:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 6899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5087:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5038:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6901,
                  "nodeType": "ExpressionStatement",
                  "src": "5038:53:6"
                },
                {
                  "expression": {
                    "id": 6903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5101:25:6",
                    "subExpression": {
                      "id": 6902,
                      "name": "numAddressesWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6642,
                      "src": "5101:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 6904,
                  "nodeType": "ExpressionStatement",
                  "src": "5101:25:6"
                },
                {
                  "expression": {
                    "id": 6916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6905,
                          "name": "whitelistedAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6686,
                          "src": "5186:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                            "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                          }
                        },
                        "id": 6908,
                        "indexExpression": {
                          "expression": {
                            "id": 6906,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5207:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5211:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5207:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5186:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renter_$6681_storage",
                          "typeString": "struct RenterWhitelist.Renter storage ref"
                        }
                      },
                      "id": 6909,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5219:5:6",
                      "memberName": "NFTId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6680,
                      "src": "5186:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 6912,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5254:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5258:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5254:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6914,
                          "name": "renterInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6887,
                          "src": "5278:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RenterInfo_$6614_memory_ptr",
                            "typeString": "struct I1TwoWheels2RentRenter.RenterInfo memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_struct$_RenterInfo_$6614_memory_ptr",
                            "typeString": "struct I1TwoWheels2RentRenter.RenterInfo memory"
                          }
                        ],
                        "expression": {
                          "id": 6910,
                          "name": "TW2RR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6693,
                          "src": "5227:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_I1TwoWheels2RentRenter_$6637",
                            "typeString": "contract I1TwoWheels2RentRenter"
                          }
                        },
                        "id": 6911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5233:7:6",
                        "memberName": "mintNFT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6629,
                        "src": "5227:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_struct$_RenterInfo_$6614_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (address,struct I1TwoWheels2RentRenter.RenterInfo memory) external returns (uint256)"
                        }
                      },
                      "id": 6915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5227:71:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5186:112:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6917,
                  "nodeType": "ExpressionStatement",
                  "src": "5186:112:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6918,
                      "name": "deployBikeRentContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7033,
                      "src": "5344:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5344:24:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6920,
                  "nodeType": "ExpressionStatement",
                  "src": "5344:24:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6922,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5414:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5418:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5414:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 6924,
                            "name": "whitelistedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6686,
                            "src": "5438:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                              "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                            }
                          },
                          "id": 6927,
                          "indexExpression": {
                            "expression": {
                              "id": 6925,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5459:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5463:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5459:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5438:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renter_$6681_storage",
                            "typeString": "struct RenterWhitelist.Renter storage ref"
                          }
                        },
                        "id": 6928,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5471:5:6",
                        "memberName": "NFTId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6680,
                        "src": "5438:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6921,
                      "name": "RenterWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6658,
                      "src": "5383:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5383:103:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6930,
                  "nodeType": "EmitStatement",
                  "src": "5378:108:6"
                }
              ]
            },
            "documentation": {
              "id": 6787,
              "nodeType": "StructuredDocumentation",
              "src": "3934:165:6",
              "text": " @notice Add a renter to the whitelist, set Renter struct and call mintNFT.\n @param name Renter's name.\n @param rather Renter's rather."
            },
            "functionSelector": "de8f2ba8",
            "id": 6932,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRenterInfoAndMint",
            "nameLocation": "4113:20:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6789,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "4157:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6932,
                  "src": "4143:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6788,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4143:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6791,
                  "mutability": "mutable",
                  "name": "rather",
                  "nameLocation": "4185:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 6932,
                  "src": "4171:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6790,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4171:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4133:64:6"
            },
            "returnParameters": {
              "id": 6793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4205:0:6"
            },
            "scope": 7210,
            "src": "4104:1389:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7032,
              "nodeType": "Block",
              "src": "5613:1189:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5631:33:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 6937,
                            "name": "blacklistedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6690,
                            "src": "5632:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 6940,
                          "indexExpression": {
                            "expression": {
                              "id": 6938,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5653:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5657:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5653:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5632:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626c",
                        "id": 6942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5666:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d181f440042e8f5830ef9ee489779e71df7443906f0969fcfe30b84dcd4f005f",
                          "typeString": "literal_string \"bl\""
                        },
                        "value": "bl"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d181f440042e8f5830ef9ee489779e71df7443906f0969fcfe30b84dcd4f005f",
                          "typeString": "literal_string \"bl\""
                        }
                      ],
                      "id": 6936,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5623:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5623:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6944,
                  "nodeType": "ExpressionStatement",
                  "src": "5623:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 6946,
                            "name": "whitelistedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6686,
                            "src": "5689:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                              "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                            }
                          },
                          "id": 6949,
                          "indexExpression": {
                            "expression": {
                              "id": 6947,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5710:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5714:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5710:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5689:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renter_$6681_storage",
                            "typeString": "struct RenterWhitelist.Renter storage ref"
                          }
                        },
                        "id": 6950,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5722:13:6",
                        "memberName": "isWhitelisted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6676,
                        "src": "5689:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420776c",
                        "id": 6951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5737:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f229655461b9f7e6a93e6c61b0ecd7df80e0afec0548025c54be26504598ec81",
                          "typeString": "literal_string \"not wl\""
                        },
                        "value": "not wl"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f229655461b9f7e6a93e6c61b0ecd7df80e0afec0548025c54be26504598ec81",
                          "typeString": "literal_string \"not wl\""
                        }
                      ],
                      "id": 6945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5681:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5681:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6953,
                  "nodeType": "ExpressionStatement",
                  "src": "5681:65:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6955,
                              "name": "whitelistedAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6686,
                              "src": "5777:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                                "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                              }
                            },
                            "id": 6958,
                            "indexExpression": {
                              "expression": {
                                "id": 6956,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5798:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5802:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5798:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5777:32:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renter_$6681_storage",
                              "typeString": "struct RenterWhitelist.Renter storage ref"
                            }
                          },
                          "id": 6959,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5810:16:6",
                          "memberName": "bikeRentContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6678,
                          "src": "5777:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5838:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5830:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6960,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5830:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5830:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5777:63:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706c6f796564",
                        "id": 6965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5854:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3ffd2fbf4ef817b99e19f63c037cd677154cf58ec0b8033503ab3ae26dceba8",
                          "typeString": "literal_string \"deployed\""
                        },
                        "value": "deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3ffd2fbf4ef817b99e19f63c037cd677154cf58ec0b8033503ab3ae26dceba8",
                          "typeString": "literal_string \"deployed\""
                        }
                      ],
                      "id": 6954,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5756:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5756:118:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6967,
                  "nodeType": "ExpressionStatement",
                  "src": "5756:118:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 6969,
                              "name": "whitelistedAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6686,
                              "src": "5892:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                                "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                              }
                            },
                            "id": 6972,
                            "indexExpression": {
                              "expression": {
                                "id": 6970,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5913:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5917:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5913:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5892:32:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renter_$6681_storage",
                              "typeString": "struct RenterWhitelist.Renter storage ref"
                            }
                          },
                          "id": 6973,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5925:5:6",
                          "memberName": "NFTId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6680,
                          "src": "5892:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5934:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5892:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d696e746564",
                        "id": 6976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5937:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed0e1848f1dadde260e45ab3b88b9836cb46c110c2a98667c93513423f5d8382",
                          "typeString": "literal_string \"not minted\""
                        },
                        "value": "not minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed0e1848f1dadde260e45ab3b88b9836cb46c110c2a98667c93513423f5d8382",
                          "typeString": "literal_string \"not minted\""
                        }
                      ],
                      "id": 6968,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5884:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5884:66:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6978,
                  "nodeType": "ExpressionStatement",
                  "src": "5884:66:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6980,
                          "name": "lenderWhitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6646,
                          "src": "5968:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5995:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5987:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6981,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5987:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5987:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5968:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5960:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5960:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6987,
                  "nodeType": "ExpressionStatement",
                  "src": "5960:38:6"
                },
                {
                  "expression": {
                    "id": 7009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6988,
                      "name": "bikeRent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6696,
                      "src": "6044:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BikeRent_$2112",
                        "typeString": "contract BikeRent"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 6992,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6139:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6143:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6139:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 6996,
                              "name": "W2R",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6649,
                              "src": "6224:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$9897",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$9897",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 6995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6216:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6994,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6216:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6216:12:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6998,
                          "name": "TW2RLenderNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6644,
                          "src": "6296:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 7001,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "6371:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RenterWhitelist_$7210",
                                "typeString": "contract RenterWhitelist"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RenterWhitelist_$7210",
                                "typeString": "contract RenterWhitelist"
                              }
                            ],
                            "id": 7000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6363:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6999,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6363:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6363:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 7005,
                              "name": "vaultW2R",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6652,
                              "src": "6433:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                                "typeString": "contract I2VaultW2R"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                                "typeString": "contract I2VaultW2R"
                              }
                            ],
                            "id": 7004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6425:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7003,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6425:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6425:17:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 7007,
                          "name": "lenderWhitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6646,
                          "src": "6498:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6055:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_BikeRent_$2112_$",
                          "typeString": "function (address,address,address,address,address,address) returns (contract BikeRent)"
                        },
                        "typeName": {
                          "id": 6990,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6989,
                            "name": "BikeRent",
                            "nameLocations": [
                              "6059:8:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2112,
                            "src": "6059:8:6"
                          },
                          "referencedDeclaration": 2112,
                          "src": "6059:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BikeRent_$2112",
                            "typeString": "contract BikeRent"
                          }
                        }
                      },
                      "id": 7008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6055:468:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BikeRent_$2112",
                        "typeString": "contract BikeRent"
                      }
                    },
                    "src": "6044:479:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BikeRent_$2112",
                      "typeString": "contract BikeRent"
                    }
                  },
                  "id": 7010,
                  "nodeType": "ExpressionStatement",
                  "src": "6044:479:6"
                },
                {
                  "expression": {
                    "id": 7020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7011,
                          "name": "whitelistedAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6686,
                          "src": "6593:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                            "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                          }
                        },
                        "id": 7014,
                        "indexExpression": {
                          "expression": {
                            "id": 7012,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6614:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6618:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6614:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6593:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renter_$6681_storage",
                          "typeString": "struct RenterWhitelist.Renter storage ref"
                        }
                      },
                      "id": 7015,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6626:16:6",
                      "memberName": "bikeRentContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6678,
                      "src": "6593:49:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7018,
                          "name": "bikeRent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6696,
                          "src": "6653:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BikeRent_$2112",
                            "typeString": "contract BikeRent"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BikeRent_$2112",
                            "typeString": "contract BikeRent"
                          }
                        ],
                        "id": 7017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6645:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7016,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6645:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6645:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6593:69:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7021,
                  "nodeType": "ExpressionStatement",
                  "src": "6593:69:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7027,
                            "name": "bikeRent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6696,
                            "src": "6779:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BikeRent_$2112",
                              "typeString": "contract BikeRent"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BikeRent_$2112",
                              "typeString": "contract BikeRent"
                            }
                          ],
                          "id": 7026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6771:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7025,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6771:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6771:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 7029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6790:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 7022,
                        "name": "vaultW2R",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6652,
                        "src": "6742:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                          "typeString": "contract I2VaultW2R"
                        }
                      },
                      "id": 7024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6751:19:6",
                      "memberName": "setApprovedContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6600,
                      "src": "6742:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 7030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6742:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7031,
                  "nodeType": "ExpressionStatement",
                  "src": "6742:53:6"
                }
              ]
            },
            "documentation": {
              "id": 6933,
              "nodeType": "StructuredDocumentation",
              "src": "5499:66:6",
              "text": " @dev Deploy a BikeRent contract for the renter."
            },
            "id": 7033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployBikeRentContract",
            "nameLocation": "5580:22:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5602:2:6"
            },
            "returnParameters": {
              "id": 6935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5613:0:6"
            },
            "scope": 7210,
            "src": "5571:1231:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7070,
              "nodeType": "Block",
              "src": "6923:392:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6941:33:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 7038,
                            "name": "blacklistedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6690,
                            "src": "6942:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 7041,
                          "indexExpression": {
                            "expression": {
                              "id": 7039,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6963:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6967:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6963:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6942:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626c",
                        "id": 7043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6976:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d181f440042e8f5830ef9ee489779e71df7443906f0969fcfe30b84dcd4f005f",
                          "typeString": "literal_string \"bl\""
                        },
                        "value": "bl"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d181f440042e8f5830ef9ee489779e71df7443906f0969fcfe30b84dcd4f005f",
                          "typeString": "literal_string \"bl\""
                        }
                      ],
                      "id": 7037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6933:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6933:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7045,
                  "nodeType": "ExpressionStatement",
                  "src": "6933:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7047,
                            "name": "whitelistedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6686,
                            "src": "7067:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                              "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                            }
                          },
                          "id": 7050,
                          "indexExpression": {
                            "expression": {
                              "id": 7048,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7088:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7092:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7088:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7067:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renter_$6681_storage",
                            "typeString": "struct RenterWhitelist.Renter storage ref"
                          }
                        },
                        "id": 7051,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7100:13:6",
                        "memberName": "isWhitelisted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6676,
                        "src": "7067:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420776c",
                        "id": 7052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7115:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f229655461b9f7e6a93e6c61b0ecd7df80e0afec0548025c54be26504598ec81",
                          "typeString": "literal_string \"not wl\""
                        },
                        "value": "not wl"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f229655461b9f7e6a93e6c61b0ecd7df80e0afec0548025c54be26504598ec81",
                          "typeString": "literal_string \"not wl\""
                        }
                      ],
                      "id": 7046,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7059:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7059:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7054,
                  "nodeType": "ExpressionStatement",
                  "src": "7059:65:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7056,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7148:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7152:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7148:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7055,
                      "name": "doRemoveStuff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7197,
                      "src": "7134:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) returns (bool)"
                      }
                    },
                    "id": 7058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7134:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7059,
                  "nodeType": "ExpressionStatement",
                  "src": "7134:25:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7236:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7240:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7236:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7063,
                            "name": "whitelistedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6686,
                            "src": "7260:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                              "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                            }
                          },
                          "id": 7066,
                          "indexExpression": {
                            "expression": {
                              "id": 7064,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7281:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7285:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7281:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7260:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renter_$6681_storage",
                            "typeString": "struct RenterWhitelist.Renter storage ref"
                          }
                        },
                        "id": 7067,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7293:5:6",
                        "memberName": "NFTId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6680,
                        "src": "7260:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7060,
                      "name": "RenterRemovedFromWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6674,
                      "src": "7196:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7196:112:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7069,
                  "nodeType": "EmitStatement",
                  "src": "7191:117:6"
                }
              ]
            },
            "documentation": {
              "id": 7034,
              "nodeType": "StructuredDocumentation",
              "src": "6808:62:6",
              "text": " @notice Remove a renter from the whitelist."
            },
            "functionSelector": "bde97687",
            "id": 7071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAddressFromWhitelist",
            "nameLocation": "6885:26:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6911:2:6"
            },
            "returnParameters": {
              "id": 7036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6923:0:6"
            },
            "scope": 7210,
            "src": "6876:439:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7114,
              "nodeType": "Block",
              "src": "7497:482:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7515:31:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 7080,
                            "name": "blacklistedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6690,
                            "src": "7516:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 7082,
                          "indexExpression": {
                            "id": 7081,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7074,
                            "src": "7537:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7516:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626c",
                        "id": 7084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7548:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d181f440042e8f5830ef9ee489779e71df7443906f0969fcfe30b84dcd4f005f",
                          "typeString": "literal_string \"bl\""
                        },
                        "value": "bl"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d181f440042e8f5830ef9ee489779e71df7443906f0969fcfe30b84dcd4f005f",
                          "typeString": "literal_string \"bl\""
                        }
                      ],
                      "id": 7079,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7507:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7507:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7086,
                  "nodeType": "ExpressionStatement",
                  "src": "7507:46:6"
                },
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 7087,
                        "name": "whitelistedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6686,
                        "src": "7605:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                          "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                        }
                      },
                      "id": 7089,
                      "indexExpression": {
                        "id": 7088,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7074,
                        "src": "7626:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7605:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Renter_$6681_storage",
                        "typeString": "struct RenterWhitelist.Renter storage ref"
                      }
                    },
                    "id": 7090,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7636:13:6",
                    "memberName": "isWhitelisted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6676,
                    "src": "7605:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7113,
                  "nodeType": "IfStatement",
                  "src": "7601:372:6",
                  "trueBody": {
                    "id": 7112,
                    "nodeType": "Block",
                    "src": "7651:322:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 7093,
                                  "name": "_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7074,
                                  "src": "7687:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7092,
                                "name": "doRemoveStuff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7197,
                                "src": "7673:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) returns (bool)"
                                }
                              },
                              "id": 7094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7673:23:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6572726f72",
                              "id": 7095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7698:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
                                "typeString": "literal_string \"error\""
                              },
                              "value": "error"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
                                "typeString": "literal_string \"error\""
                              }
                            ],
                            "id": 7091,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7665:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7665:41:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7097,
                        "nodeType": "ExpressionStatement",
                        "src": "7665:41:6"
                      },
                      {
                        "expression": {
                          "id": 7102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 7098,
                              "name": "blacklistedAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6690,
                              "src": "7760:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 7100,
                            "indexExpression": {
                              "id": 7099,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7074,
                              "src": "7781:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7760:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 7101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7793:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7760:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7103,
                        "nodeType": "ExpressionStatement",
                        "src": "7760:37:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 7105,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7074,
                              "src": "7886:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 7106,
                                  "name": "whitelistedAddresses",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6686,
                                  "src": "7912:20:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                                    "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                                  }
                                },
                                "id": 7108,
                                "indexExpression": {
                                  "id": 7107,
                                  "name": "_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7074,
                                  "src": "7933:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7912:30:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renter_$6681_storage",
                                  "typeString": "struct RenterWhitelist.Renter storage ref"
                                }
                              },
                              "id": 7109,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7943:5:6",
                              "memberName": "NFTId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6680,
                              "src": "7912:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7104,
                            "name": "RenterRemovedFromWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6674,
                            "src": "7842:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 7110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7842:120:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7111,
                        "nodeType": "EmitStatement",
                        "src": "7837:125:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7072,
              "nodeType": "StructuredDocumentation",
              "src": "7321:109:6",
              "text": " @notice Add an address to the blacklist.\n @param _address Address to be blacklisted."
            },
            "functionSelector": "44337ea1",
            "id": 7115,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7077,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7076,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7487:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9118,
                  "src": "7487:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7487:9:6"
              }
            ],
            "name": "addToBlacklist",
            "nameLocation": "7445:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7074,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "7468:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 7115,
                  "src": "7460:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7460:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7459:18:6"
            },
            "returnParameters": {
              "id": 7078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7497:0:6"
            },
            "scope": 7210,
            "src": "7436:543:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7139,
              "nodeType": "Block",
              "src": "8186:227:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 7124,
                          "name": "blacklistedAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6690,
                          "src": "8204:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 7126,
                        "indexExpression": {
                          "id": 7125,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7118,
                          "src": "8225:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8204:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420626c",
                        "id": 7127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8236:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42730988b5b57c2a4c6c3b2818148f290fd69aeaf43ebb9b109a70ed0aaff9d5",
                          "typeString": "literal_string \"not bl\""
                        },
                        "value": "not bl"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42730988b5b57c2a4c6c3b2818148f290fd69aeaf43ebb9b109a70ed0aaff9d5",
                          "typeString": "literal_string \"not bl\""
                        }
                      ],
                      "id": 7123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8196:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8196:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7129,
                  "nodeType": "ExpressionStatement",
                  "src": "8196:49:6"
                },
                {
                  "expression": {
                    "id": 7133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8296:37:6",
                    "subExpression": {
                      "baseExpression": {
                        "id": 7130,
                        "name": "blacklistedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6690,
                        "src": "8303:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7132,
                      "indexExpression": {
                        "id": 7131,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7118,
                        "src": "8324:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8303:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7134,
                  "nodeType": "ExpressionStatement",
                  "src": "8296:37:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7136,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7118,
                        "src": "8397:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7135,
                      "name": "RenterRemovedFromBlacklist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6668,
                      "src": "8370:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8370:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7138,
                  "nodeType": "EmitStatement",
                  "src": "8365:41:6"
                }
              ]
            },
            "documentation": {
              "id": 7116,
              "nodeType": "StructuredDocumentation",
              "src": "7985:129:6",
              "text": " @notice Remove an address from the blacklist.\n @param _address Address to be removed from the blacklist."
            },
            "functionSelector": "537df3b6",
            "id": 7140,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7121,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7120,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8176:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9118,
                  "src": "8176:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8176:9:6"
              }
            ],
            "name": "removeFromBlacklist",
            "nameLocation": "8129:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7118,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "8157:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 7140,
                  "src": "8149:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8149:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8148:18:6"
            },
            "returnParameters": {
              "id": 7122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8186:0:6"
            },
            "scope": 7210,
            "src": "8120:293:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7196,
              "nodeType": "Block",
              "src": "8689:579:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7151,
                                "name": "whitelistedAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6686,
                                "src": "8754:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                                  "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                                }
                              },
                              "id": 7153,
                              "indexExpression": {
                                "id": 7152,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7143,
                                "src": "8775:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8754:30:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renter_$6681_storage",
                                "typeString": "struct RenterWhitelist.Renter storage ref"
                              }
                            },
                            "id": 7154,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8785:5:6",
                            "memberName": "NFTId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6680,
                            "src": "8754:36:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7149,
                            "name": "TW2RR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6693,
                            "src": "8740:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_I1TwoWheels2RentRenter_$6637",
                              "typeString": "contract I1TwoWheels2RentRenter"
                            }
                          },
                          "id": 7150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8746:7:6",
                          "memberName": "burnNFT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6636,
                          "src": "8740:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) external returns (bool)"
                          }
                        },
                        "id": 7155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8740:51:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6275726e206572726f72",
                        "id": 7156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8805:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_865c34ee6c838fbfc02d59d282ffcbdbf30747712e6d1d78ab3f43484ca1cceb",
                          "typeString": "literal_string \"burn error\""
                        },
                        "value": "burn error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_865c34ee6c838fbfc02d59d282ffcbdbf30747712e6d1d78ab3f43484ca1cceb",
                          "typeString": "literal_string \"burn error\""
                        }
                      ],
                      "id": 7148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8719:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8719:108:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7158,
                  "nodeType": "ExpressionStatement",
                  "src": "8719:108:6"
                },
                {
                  "expression": {
                    "id": 7166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7159,
                      "name": "bikeRent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6696,
                      "src": "8874:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BikeRent_$2112",
                        "typeString": "contract BikeRent"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 7161,
                              "name": "whitelistedAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6686,
                              "src": "8894:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                                "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                              }
                            },
                            "id": 7163,
                            "indexExpression": {
                              "id": 7162,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7143,
                              "src": "8915:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8894:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renter_$6681_storage",
                              "typeString": "struct RenterWhitelist.Renter storage ref"
                            }
                          },
                          "id": 7164,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8925:16:6",
                          "memberName": "bikeRentContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6678,
                          "src": "8894:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7160,
                        "name": "BikeRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "8885:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BikeRent_$2112_$",
                          "typeString": "type(contract BikeRent)"
                        }
                      },
                      "id": 7165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8885:57:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BikeRent_$2112",
                        "typeString": "contract BikeRent"
                      }
                    },
                    "src": "8874:68:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BikeRent_$2112",
                      "typeString": "contract BikeRent"
                    }
                  },
                  "id": 7167,
                  "nodeType": "ExpressionStatement",
                  "src": "8874:68:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 7169,
                            "name": "bikeRent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6696,
                            "src": "8960:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BikeRent_$2112",
                              "typeString": "contract BikeRent"
                            }
                          },
                          "id": 7170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8969:7:6",
                          "memberName": "destroy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2111,
                          "src": "8960:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                            "typeString": "function () external returns (bool)"
                          }
                        },
                        "id": 7171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8960:18:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6572726f722064657374726f79",
                        "id": 7172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8980:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b95836d85fcaadedf7a01b58005e619c4d1dce3edadfa8b4d2c2c8670f75889",
                          "typeString": "literal_string \"error destroy\""
                        },
                        "value": "error destroy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b95836d85fcaadedf7a01b58005e619c4d1dce3edadfa8b4d2c2c8670f75889",
                          "typeString": "literal_string \"error destroy\""
                        }
                      ],
                      "id": 7168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8952:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8952:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7174,
                  "nodeType": "ExpressionStatement",
                  "src": "8952:44:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7180,
                                "name": "bikeRent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6696,
                                "src": "9067:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BikeRent_$2112",
                                  "typeString": "contract BikeRent"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BikeRent_$2112",
                                  "typeString": "contract BikeRent"
                                }
                              ],
                              "id": 7179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9059:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7178,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9059:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9059:17:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7176,
                            "name": "vaultW2R",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6652,
                            "src": "9027:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_I2VaultW2R_$6608",
                              "typeString": "contract I2VaultW2R"
                            }
                          },
                          "id": 7177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9036:22:6",
                          "memberName": "removeApprovedContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6607,
                          "src": "9027:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) external returns (bool)"
                          }
                        },
                        "id": 7182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9027:50:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f722072656d6f76696e67",
                        "id": 7183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9091:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9a75d5ba382e71be78ad72a33bdf1cbf93bd9c5e6f9fa5cea352e44b544bc38",
                          "typeString": "literal_string \"Error removing\""
                        },
                        "value": "Error removing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9a75d5ba382e71be78ad72a33bdf1cbf93bd9c5e6f9fa5cea352e44b544bc38",
                          "typeString": "literal_string \"Error removing\""
                        }
                      ],
                      "id": 7175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9006:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9006:111:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7185,
                  "nodeType": "ExpressionStatement",
                  "src": "9006:111:6"
                },
                {
                  "expression": {
                    "id": 7189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9168:37:6",
                    "subExpression": {
                      "baseExpression": {
                        "id": 7186,
                        "name": "whitelistedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6686,
                        "src": "9175:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Renter_$6681_storage_$",
                          "typeString": "mapping(address => struct RenterWhitelist.Renter storage ref)"
                        }
                      },
                      "id": 7188,
                      "indexExpression": {
                        "id": 7187,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7143,
                        "src": "9196:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9175:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Renter_$6681_storage",
                        "typeString": "struct RenterWhitelist.Renter storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7190,
                  "nodeType": "ExpressionStatement",
                  "src": "9168:37:6"
                },
                {
                  "expression": {
                    "id": 7192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "9215:25:6",
                    "subExpression": {
                      "id": 7191,
                      "name": "numAddressesWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6642,
                      "src": "9215:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 7193,
                  "nodeType": "ExpressionStatement",
                  "src": "9215:25:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9257:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7147,
                  "id": 7195,
                  "nodeType": "Return",
                  "src": "9250:11:6"
                }
              ]
            },
            "documentation": {
              "id": 7141,
              "nodeType": "StructuredDocumentation",
              "src": "8419:200:6",
              "text": " @dev Perform necessary actions to remove a renter from the whitelist.\n @param _address Address of the renter to be removed.\n @return true if successful, false otherwise."
            },
            "id": 7197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doRemoveStuff",
            "nameLocation": "8634:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7143,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "8656:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 7197,
                  "src": "8648:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8648:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8647:18:6"
            },
            "returnParameters": {
              "id": 7147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7146,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7197,
                  "src": "8683:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8683:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8682:6:6"
            },
            "scope": 7210,
            "src": "8625:643:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              9155
            ],
            "body": {
              "id": 7208,
              "nodeType": "Block",
              "src": "9413:44:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "43616e742062652072656e6f756e636564",
                        "id": 7205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9430:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9627fcc39fc5a156007d9edf6167f87fa4fd95300655ba014d0cd1f07542126f",
                          "typeString": "literal_string \"Cant be renounced\""
                        },
                        "value": "Cant be renounced"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9627fcc39fc5a156007d9edf6167f87fa4fd95300655ba014d0cd1f07542126f",
                          "typeString": "literal_string \"Cant be renounced\""
                        }
                      ],
                      "id": 7204,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "9423:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 7206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9423:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7207,
                  "nodeType": "ExpressionStatement",
                  "src": "9423:27:6"
                }
              ]
            },
            "documentation": {
              "id": 7198,
              "nodeType": "StructuredDocumentation",
              "src": "9274:73:6",
              "text": " @notice Prevent renouncing ownership of this contract."
            },
            "functionSelector": "715018a6",
            "id": 7209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7201,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9403:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9118,
                  "src": "9403:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "9403:9:6"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "9362:17:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7200,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9394:8:6"
            },
            "parameters": {
              "id": 7199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9379:2:6"
            },
            "returnParameters": {
              "id": 7203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9413:0:6"
            },
            "scope": 7210,
            "src": "9353:104:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7211,
        "src": "1398:8061:6",
        "usedErrors": []
      }
    ],
    "src": "38:9422:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0xD49D9ccaE8Ec10BcC5C6CBDF812874aD44D32B3f",
      "transactionHash": "0x860f84ae5797ea10d0d42b9b4045c4ffb94558fbfc735f7d87931e684e1515ea"
    },
    "80001": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x3b503966ada21fd97099e978132ed0ed9b69d12e6c235864758b37932b47abd2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "renter",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "NFTId",
              "type": "uint256"
            }
          ],
          "name": "RenterBlacklisted",
          "type": "event"
        },
        "0x62576b323defc6105d3c96bae5da2a00a7aae3f8f875d27b27da03d0c3cac2d7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "renter",
              "type": "address"
            }
          ],
          "name": "RenterRemovedFromBlacklist",
          "type": "event"
        },
        "0x2521e1d2181ef8de636f6830a509e2813fb22c1822a283dad266e756f0e3c2ec": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "renter",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "NFTId",
              "type": "uint256"
            }
          ],
          "name": "RenterRemovedFromWhitelist",
          "type": "event"
        },
        "0xdf1fc30c9a67ee41e3e4e2050611e3d7aef8c0921a69a171a465272ae1952da6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "renter",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "NFTId",
              "type": "uint256"
            }
          ],
          "name": "RenterWhitelisted",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xDcD39717Dc28eBa4F60aF9b60e04db1150e2E9D9",
      "transactionHash": "0x0d491ebc5332014d18dd4fdd5b4ad8b5abfd183e436179c6b41fa1c4f9059436"
    }
  },
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-04-23T17:19:46.672Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "This contract manages a whitelist of renters and their associated BikeRent contracts. It allows renters to be added to the whitelist and to deploy BikeRent contracts. The contract owner can add and remove renters from the blacklist.",
    "kind": "dev",
    "methods": {
      "addToBlacklist(address)": {
        "params": {
          "_address": "Address to be blacklisted."
        }
      },
      "constructor": {
        "params": {
          "_TW2RLenderNFT": "Address of the Lender NFT contract.",
          "_TW2RR": "Address of the TwoWheels2RentRenter contract.",
          "_W2R": "Address of the W2R token contract.",
          "_vaultW2R": "Address of the VaultW2R contract."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeFromBlacklist(address)": {
        "params": {
          "_address": "Address to be removed from the blacklist."
        }
      },
      "setLenderWhitelistAddress(address)": {
        "params": {
          "_lenderWhitelist": "Address of the LenderWhitelist contract."
        }
      },
      "setRenterInfoAndMint(string,string)": {
        "params": {
          "name": "Renter's name.",
          "rather": "Renter's rather."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "RenterWhitelist",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addToBlacklist(address)": {
        "notice": "Add an address to the blacklist."
      },
      "constructor": {
        "notice": "Constructor to set the required addresses for the contract."
      },
      "removeAddressFromWhitelist()": {
        "notice": "Remove a renter from the whitelist."
      },
      "removeFromBlacklist(address)": {
        "notice": "Remove an address from the blacklist."
      },
      "renounceOwnership()": {
        "notice": "Prevent renouncing ownership of this contract."
      },
      "setLenderWhitelistAddress(address)": {
        "notice": "Set the LenderWhitelist contract address."
      },
      "setRenterInfoAndMint(string,string)": {
        "notice": "Add a renter to the whitelist, set Renter struct and call mintNFT."
      }
    },
    "version": 1
  }
}