{
  "contractName": "MaticW2RPairToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "authorized",
          "type": "address"
        }
      ],
      "name": "checkMinterAndBurner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "authorized",
          "type": "address"
        }
      ],
      "name": "addMinterAndBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "authorized",
          "type": "address"
        }
      ],
      "name": "removeMinterAndBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorized\",\"type\":\"address\"}],\"name\":\"addMinterAndBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorized\",\"type\":\"address\"}],\"name\":\"checkMinterAndBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorized\",\"type\":\"address\"}],\"name\":\"removeMinterAndBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract represents an ERC20 token which is burnable and has restricted minting and burning functionality. It uses the OpenZeppelin ERC20, ERC20Burnable, and Ownable contracts.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addMinterAndBurner(address)\":{\"params\":{\"authorized\":\"The address to be added as a minter and burner.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to burn.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkMinterAndBurner(address)\":{\"params\":{\"authorized\":\"The address to be checked.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the address is authorized as a minter and burner.\"}},\"constructor\":{\"details\":\"Constructor that initializes the token with a name and symbol.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to mint.\",\"to\":\"The address to receive the minted tokens.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeMinterAndBurner(address)\":{\"params\":{\"authorized\":\"The address to be removed as a minter and burner.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MaticW2RPairToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addMinterAndBurner(address)\":{\"notice\":\"Add a minter and burner to the authorized list.\"},\"burn(uint256)\":{\"notice\":\"Burn tokens from the caller's address only for authorized burner.\"},\"checkMinterAndBurner(address)\":{\"notice\":\"Check if an address is authorized as a minter and burner.\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens to a specified address only for authorized minter.\"},\"removeMinterAndBurner(address)\":{\"notice\":\"Remove a minter and burner from the authorized list.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MaticW2RPairToken.sol\":\"MaticW2RPairToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/MaticW2RPairToken.sol\":{\"keccak256\":\"0x33aba586ee1fc29dbbe0277b9f1bc5106f571b510014bf32ffbe3b8045b45a4c\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://d59436146a6f8394f49e2b017d0f9b773c715f854276414e7592e05db1176500\",\"dweb:/ipfs/QmP8HeSYz5ssrEpgauRqZGZeg6iLNx5MkggkoyA7466mcm\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280601281526020017126b0ba34b196ab9929102628102a37b5b2b760711b8152506040518060400160405280600981526020016826a0aa24a196ab992960b91b8152508160039081620000709190620001b7565b5060046200007f8282620001b7565b5050506200009c62000096620000bc60201b60201c565b620000c0565b336000908152600660205260409020805460ff1916600117905562000283565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013d57607f821691505b6020821081036200015e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b257600081815260208120601f850160051c810160208610156200018d5750805b601f850160051c820191505b81811015620001ae5782815560010162000199565b5050505b505050565b81516001600160401b03811115620001d357620001d362000112565b620001eb81620001e4845462000128565b8462000164565b602080601f8311600181146200022357600084156200020a5750858301515b600019600386901b1c1916600185901b178555620001ae565b600085815260208120601f198616915b82811015620002545788860151825594840194600190910190840162000233565b5085821015620002735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61109b80620002936000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063a457c2d711610071578063a457c2d71461026e578063a9059cbb14610281578063dd62ed3e14610294578063f2fde38b146102a7578063f97f3c2c146102ba57600080fd5b806370a0823114610207578063715018a61461023057806379cc6790146102385780638da5cb5b1461024b57806395d89b411461026657600080fd5b8063313ce567116100f4578063313ce567146101aa57806339509351146101b957806340c10f19146101cc57806342966c68146101e157806358b80e35146101f457600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd146101845780632b2540bd14610197575b600080fd5b6101396102cd565b6040516101469190610ed1565b60405180910390f35b61016261015d366004610f36565b61035f565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004610f60565b610379565b6101626101a5366004610f9c565b61039d565b60405160128152602001610146565b6101626101c7366004610f36565b6103ca565b6101df6101da366004610f36565b6103ec565b005b6101df6101ef366004610fbe565b610455565b6101df610202366004610f9c565b6104b7565b610176610215366004610f9c565b6001600160a01b031660009081526020819052604090205490565b6101df61059a565b6101df610246366004610f36565b6105ae565b6005546040516001600160a01b039091168152602001610146565b6101396105c3565b61016261027c366004610f36565b6105d2565b61016261028f366004610f36565b61064d565b6101766102a2366004610fd7565b61065b565b6101df6102b5366004610f9c565b610686565b6101df6102c8366004610f9c565b6106fc565b6060600380546102dc9061100a565b80601f01602080910402602001604051908101604052809291908181526020018280546103089061100a565b80156103555780601f1061032a57610100808354040283529160200191610355565b820191906000526020600020905b81548152906001019060200180831161033857829003601f168201915b5050505050905090565b60003361036d8185856107db565b60019150505b92915050565b600033610387858285610900565b61039285858561097a565b506001949350505050565b60006103a7610b29565b506001600160a01b03811660009081526006602052604090205460ff165b919050565b60003361036d8185856103dd838361065b565b6103e79190611044565b6107db565b3360009081526006602052604090205460ff166104475760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932903737ba10309036b4b73a32b960611b60448201526064015b60405180910390fd5b6104518282610b83565b5050565b3360009081526006602052604090205460ff166104ab5760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932903737ba103090313ab93732b960611b604482015260640161043e565b6104b481610c4e565b50565b6104bf610b29565b6001600160a01b03811660009081526006602052604090205460ff16156105205760405162461bcd60e51b81526020600482015260156024820152744d696e74657220616c72656164792065786973747360581b604482015260640161043e565b6001600160a01b0381166105765760405162461bcd60e51b815260206004820152601c60248201527f4d696e74657220616464726573732063616e6e6f742062652030783000000000604482015260640161043e565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6105a2610b29565b6105ac6000610c58565b565b6105b9823383610900565b6104518282610caa565b6060600480546102dc9061100a565b600033816105e0828661065b565b9050838110156106405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161043e565b61039282868684036107db565b60003361036d81858561097a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61068e610b29565b6001600160a01b0381166106f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043e565b6104b481610c58565b610704610b29565b6001600160a01b03811660009081526006602052604090205460ff166107645760405162461bcd60e51b8152602060048201526015602482015274135a5b9d195c88191bd95cc81b9bdd08195e1a5cdd605a1b604482015260640161043e565b6001600160a01b0381166107ba5760405162461bcd60e51b815260206004820152601c60248201527f4d696e74657220616464726573732063616e6e6f742062652030783000000000604482015260640161043e565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6001600160a01b03831661083d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161043e565b6001600160a01b03821661089e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161043e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061090c848461065b565b9050600019811461097457818110156109675760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161043e565b61097484848484036107db565b50505050565b6001600160a01b0383166109de5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161043e565b6001600160a01b038216610a405760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161043e565b610a4b838383610de0565b6001600160a01b03831660009081526020819052604090205481811015610ac35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161043e565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610974565b6005546001600160a01b031633146105ac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043e565b6001600160a01b038216610bd95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161043e565b610be560008383610de0565b8060026000828254610bf79190611044565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6104b43382610caa565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610d0a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161043e565b610d1682600083610de0565b6001600160a01b03821660009081526020819052604090205481811015610d8a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161043e565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016108f3565b6001600160a01b03831660009081526006602052604090205460ff16610e5f576001600160a01b03821660009081526006602052604090205460ff16610e5f5760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932903737ba10309036b4b73a32b960611b604482015260640161043e565b6001600160a01b038216610ecc576001600160a01b03831660009081526006602052604090205460ff16610ecc5760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932903737ba103090313ab93732b960611b604482015260640161043e565b505050565b600060208083528351808285015260005b81811015610efe57858101830151858201604001528201610ee2565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146103c557600080fd5b60008060408385031215610f4957600080fd5b610f5283610f1f565b946020939093013593505050565b600080600060608486031215610f7557600080fd5b610f7e84610f1f565b9250610f8c60208501610f1f565b9150604084013590509250925092565b600060208284031215610fae57600080fd5b610fb782610f1f565b9392505050565b600060208284031215610fd057600080fd5b5035919050565b60008060408385031215610fea57600080fd5b610ff383610f1f565b915061100160208401610f1f565b90509250929050565b600181811c9082168061101e57607f821691505b60208210810361103e57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561037357634e487b7160e01b600052601160045260246000fdfea26469706673582212206b5402b9b8fef4ecb024fe7d7d9d8c0a73b10d269843f43772fd438a86820f7264736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063a457c2d711610071578063a457c2d71461026e578063a9059cbb14610281578063dd62ed3e14610294578063f2fde38b146102a7578063f97f3c2c146102ba57600080fd5b806370a0823114610207578063715018a61461023057806379cc6790146102385780638da5cb5b1461024b57806395d89b411461026657600080fd5b8063313ce567116100f4578063313ce567146101aa57806339509351146101b957806340c10f19146101cc57806342966c68146101e157806358b80e35146101f457600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd146101845780632b2540bd14610197575b600080fd5b6101396102cd565b6040516101469190610ed1565b60405180910390f35b61016261015d366004610f36565b61035f565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004610f60565b610379565b6101626101a5366004610f9c565b61039d565b60405160128152602001610146565b6101626101c7366004610f36565b6103ca565b6101df6101da366004610f36565b6103ec565b005b6101df6101ef366004610fbe565b610455565b6101df610202366004610f9c565b6104b7565b610176610215366004610f9c565b6001600160a01b031660009081526020819052604090205490565b6101df61059a565b6101df610246366004610f36565b6105ae565b6005546040516001600160a01b039091168152602001610146565b6101396105c3565b61016261027c366004610f36565b6105d2565b61016261028f366004610f36565b61064d565b6101766102a2366004610fd7565b61065b565b6101df6102b5366004610f9c565b610686565b6101df6102c8366004610f9c565b6106fc565b6060600380546102dc9061100a565b80601f01602080910402602001604051908101604052809291908181526020018280546103089061100a565b80156103555780601f1061032a57610100808354040283529160200191610355565b820191906000526020600020905b81548152906001019060200180831161033857829003601f168201915b5050505050905090565b60003361036d8185856107db565b60019150505b92915050565b600033610387858285610900565b61039285858561097a565b506001949350505050565b60006103a7610b29565b506001600160a01b03811660009081526006602052604090205460ff165b919050565b60003361036d8185856103dd838361065b565b6103e79190611044565b6107db565b3360009081526006602052604090205460ff166104475760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932903737ba10309036b4b73a32b960611b60448201526064015b60405180910390fd5b6104518282610b83565b5050565b3360009081526006602052604090205460ff166104ab5760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932903737ba103090313ab93732b960611b604482015260640161043e565b6104b481610c4e565b50565b6104bf610b29565b6001600160a01b03811660009081526006602052604090205460ff16156105205760405162461bcd60e51b81526020600482015260156024820152744d696e74657220616c72656164792065786973747360581b604482015260640161043e565b6001600160a01b0381166105765760405162461bcd60e51b815260206004820152601c60248201527f4d696e74657220616464726573732063616e6e6f742062652030783000000000604482015260640161043e565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6105a2610b29565b6105ac6000610c58565b565b6105b9823383610900565b6104518282610caa565b6060600480546102dc9061100a565b600033816105e0828661065b565b9050838110156106405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161043e565b61039282868684036107db565b60003361036d81858561097a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61068e610b29565b6001600160a01b0381166106f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043e565b6104b481610c58565b610704610b29565b6001600160a01b03811660009081526006602052604090205460ff166107645760405162461bcd60e51b8152602060048201526015602482015274135a5b9d195c88191bd95cc81b9bdd08195e1a5cdd605a1b604482015260640161043e565b6001600160a01b0381166107ba5760405162461bcd60e51b815260206004820152601c60248201527f4d696e74657220616464726573732063616e6e6f742062652030783000000000604482015260640161043e565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6001600160a01b03831661083d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161043e565b6001600160a01b03821661089e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161043e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061090c848461065b565b9050600019811461097457818110156109675760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161043e565b61097484848484036107db565b50505050565b6001600160a01b0383166109de5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161043e565b6001600160a01b038216610a405760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161043e565b610a4b838383610de0565b6001600160a01b03831660009081526020819052604090205481811015610ac35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161043e565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610974565b6005546001600160a01b031633146105ac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043e565b6001600160a01b038216610bd95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161043e565b610be560008383610de0565b8060026000828254610bf79190611044565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6104b43382610caa565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610d0a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161043e565b610d1682600083610de0565b6001600160a01b03821660009081526020819052604090205481811015610d8a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161043e565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016108f3565b6001600160a01b03831660009081526006602052604090205460ff16610e5f576001600160a01b03821660009081526006602052604090205460ff16610e5f5760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932903737ba10309036b4b73a32b960611b604482015260640161043e565b6001600160a01b038216610ecc576001600160a01b03831660009081526006602052604090205460ff16610ecc5760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932903737ba103090313ab93732b960611b604482015260640161043e565b505050565b600060208083528351808285015260005b81811015610efe57858101830151858201604001528201610ee2565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146103c557600080fd5b60008060408385031215610f4957600080fd5b610f5283610f1f565b946020939093013593505050565b600080600060608486031215610f7557600080fd5b610f7e84610f1f565b9250610f8c60208501610f1f565b9150604084013590509250925092565b600060208284031215610fae57600080fd5b610fb782610f1f565b9392505050565b600060208284031215610fd057600080fd5b5035919050565b60008060408385031215610fea57600080fd5b610ff383610f1f565b915061100160208401610f1f565b90509250929050565b600181811c9082168061101e57607f821691505b60208210810361103e57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561037357634e487b7160e01b600052601160045260246000fdfea26469706673582212206b5402b9b8fef4ecb024fe7d7d9d8c0a73b10d269843f43772fd438a86820f7264736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2732:33",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:33",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:33",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:33",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:33",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:33",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:33",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:33",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:33",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:33"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "201:325:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "211:22:33",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "225:1:33",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "228:4:33"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "221:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:12:33"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "211:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "242:38:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "272:4:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "278:1:33",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "268:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "268:12:33"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "246:18:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "319:31:33",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "321:27:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "335:6:33"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "343:4:33",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "331:3:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "331:17:33"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "321:6:33"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "299:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "292:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "292:26:33"
                  },
                  "nodeType": "YulIf",
                  "src": "289:61:33"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:111:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "430:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "437:3:33",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "442:10:33",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "433:3:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "433:20:33"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "423:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "423:31:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "423:31:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "474:1:33",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "477:4:33",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "467:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "467:15:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "467:15:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "502:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "505:4:33",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "495:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "495:15:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "495:15:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "365:18:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "388:6:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "396:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "385:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "385:14:33"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "362:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "362:38:33"
                  },
                  "nodeType": "YulIf",
                  "src": "359:161:33"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "181:4:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "190:6:33",
                "type": ""
              }
            ],
            "src": "146:380:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "587:65:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "604:1:33",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "607:3:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "597:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:14:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "597:14:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "620:26:33",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "638:1:33",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "641:4:33",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "628:9:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "628:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "620:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "570:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "578:4:33",
                "type": ""
              }
            ],
            "src": "531:121:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "738:464:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "771:425:33",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "785:11:33",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "795:1:33",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "789:2:33",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "816:2:33"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "820:5:33"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "809:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "809:17:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "809:17:33"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "839:31:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "861:2:33"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "865:4:33",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "851:9:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "851:19:33"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "843:4:33",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "883:57:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "906:4:33"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "916:1:33",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "923:10:33"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "935:2:33",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "919:3:33"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "919:19:33"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "912:3:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "912:27:33"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "902:3:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "902:38:33"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "887:11:33",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "977:23:33",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "979:19:33",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "994:4:33"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "979:11:33"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "959:10:33"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "971:4:33",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "956:2:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "956:20:33"
                        },
                        "nodeType": "YulIf",
                        "src": "953:47:33"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1013:41:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "1027:4:33"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1037:1:33",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "1044:3:33"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1049:2:33",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1040:3:33"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1040:12:33"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "1033:3:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1033:20:33"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1023:3:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1023:31:33"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "1017:2:33",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1067:24:33",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "1080:11:33"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "1071:5:33",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1165:21:33",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "1174:5:33"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1181:2:33"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1167:6:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1167:17:33"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1167:17:33"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "1115:5:33"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "1122:2:33"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "1112:2:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1112:13:33"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "1126:26:33",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1128:22:33",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "1141:5:33"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1148:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1137:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1137:13:33"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "1128:5:33"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "1108:3:33",
                          "statements": []
                        },
                        "src": "1104:82:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "754:3:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "759:2:33",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "751:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:11:33"
                  },
                  "nodeType": "YulIf",
                  "src": "748:448:33"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "710:5:33",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "717:3:33",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "722:10:33",
                "type": ""
              }
            ],
            "src": "657:545:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1292:81:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1302:65:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "1317:4:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1335:1:33",
                                        "type": "",
                                        "value": "3"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "1338:3:33"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1331:3:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1331:11:33"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1348:1:33",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "1344:3:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1344:6:33"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1327:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1327:24:33"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "1323:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1323:29:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1313:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1313:40:33"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1359:1:33",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "1362:3:33"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1355:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1355:11:33"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1310:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1310:57:33"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "1302:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1269:4:33",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "1275:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "1283:4:33",
                "type": ""
              }
            ],
            "src": "1207:166:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1474:1256:33",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1484:24:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "1504:3:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1498:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1498:10:33"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "1488:6:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1551:22:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1553:16:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1553:18:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1553:18:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "1523:6:33"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1539:2:33",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1543:1:33",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1535:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1535:10:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1547:1:33",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1531:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1531:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1520:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1520:30:33"
                  },
                  "nodeType": "YulIf",
                  "src": "1517:56:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "1626:4:33"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "1664:4:33"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "1658:5:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1658:11:33"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "1632:25:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1632:38:33"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "1672:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "1582:43:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1582:97:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1582:97:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1688:18:33",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1705:1:33",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "1692:9:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1715:23:33",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1734:4:33",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "1719:11:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1747:24:33",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "1760:11:33"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "1747:9:33"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1817:656:33",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1831:35:33",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "1850:6:33"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1862:2:33",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "1858:3:33"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1858:7:33"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1846:3:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1846:20:33"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "1835:7:33",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1879:49:33",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "1923:4:33"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "1893:29:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1893:35:33"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "1883:6:33",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1941:10:33",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1950:1:33",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "1945:1:33",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2028:172:33",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2053:6:33"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "2071:3:33"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "2076:9:33"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2067:3:33"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2067:19:33"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "2061:5:33"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2061:26:33"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "2046:6:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2046:42:33"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2046:42:33"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2105:24:33",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2119:6:33"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2127:1:33",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2115:3:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2115:14:33"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "2105:6:33"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2146:40:33",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2163:9:33"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2174:11:33"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2159:3:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2159:27:33"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "2146:9:33"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1975:1:33"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1978:7:33"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "1972:2:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1972:14:33"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "1987:28:33",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1989:24:33",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1998:1:33"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2001:11:33"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1994:3:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1994:19:33"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1989:1:33"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "1968:3:33",
                              "statements": []
                            },
                            "src": "1964:236:33"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2248:166:33",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2266:43:33",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "2293:3:33"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2298:9:33"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2289:3:33"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2289:19:33"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2283:5:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2283:26:33"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "2270:9:33",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2333:6:33"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "2345:9:33"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2372:1:33",
                                                            "type": "",
                                                            "value": "3"
                                                          },
                                                          {
                                                            "name": "newLen",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2375:6:33"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "shl",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "2368:3:33"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "2368:14:33"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "2384:3:33",
                                                        "type": "",
                                                        "value": "248"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2364:3:33"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2364:24:33"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "2394:1:33",
                                                        "type": "",
                                                        "value": "0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2390:3:33"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2390:6:33"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2360:3:33"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2360:37:33"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "2356:3:33"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2356:42:33"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2341:3:33"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2341:58:33"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "2326:6:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2326:74:33"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2326:74:33"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "2219:7:33"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "2228:6:33"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "2216:2:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2216:19:33"
                            },
                            "nodeType": "YulIf",
                            "src": "2213:201:33"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "2434:4:33"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2448:1:33",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "2451:6:33"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "2444:3:33"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2444:14:33"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2460:1:33",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2440:3:33"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2440:22:33"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "2427:6:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2427:36:33"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2427:36:33"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "1810:663:33",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1815:1:33",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2490:234:33",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2504:14:33",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2517:1:33",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "2508:5:33",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2553:67:33",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2571:35:33",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "2590:3:33"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2595:9:33"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2586:3:33"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2586:19:33"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2580:5:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2580:26:33"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "2571:5:33"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "2534:6:33"
                            },
                            "nodeType": "YulIf",
                            "src": "2531:89:33"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "2640:4:33"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "2699:5:33"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "2706:6:33"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "2646:52:33"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2646:67:33"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "2633:6:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2633:81:33"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2633:81:33"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "2482:242:33",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "1790:6:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1798:2:33",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1787:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1787:14:33"
                  },
                  "nodeType": "YulSwitch",
                  "src": "1780:944:33"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "1459:4:33",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1465:3:33",
                "type": ""
              }
            ],
            "src": "1378:1352:33"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
      "id": 33,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9835:33",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:33",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:427:33",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:33",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:33",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:33"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:33"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:33"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:33"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:33",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:33",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:33"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:33"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:33"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:33"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:33",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:33"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:33"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:33"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:33"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:33"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:33"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:33"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:33"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:33"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:33"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:33"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:33",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:33"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:33"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:33"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:33"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:33",
                    "statements": []
                  },
                  "src": "294:140:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "458:9:33"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "469:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "454:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "454:22:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "478:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "450:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "450:31:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:1:33",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "443:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "443:42:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "443:42:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "494:62:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "529:6:33"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "537:2:33",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "525:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "525:15:33"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "546:2:33",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "542:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "542:7:33"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "521:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "521:29:33"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:45:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "553:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:54:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "494:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:33",
                "type": ""
              }
            ],
            "src": "14:548:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "616:124:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "626:29:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "648:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "635:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "635:20:33"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "626:5:33"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "718:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "727:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "730:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "720:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "720:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "720:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "677:5:33"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "688:5:33"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "703:3:33",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "708:1:33",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "699:3:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "699:11:33"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "712:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "695:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "695:19:33"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "684:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "684:31:33"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "674:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "674:42:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "667:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "667:50:33"
                  },
                  "nodeType": "YulIf",
                  "src": "664:70:33"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "595:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "606:5:33",
                "type": ""
              }
            ],
            "src": "567:173:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "832:167:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "878:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "887:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "890:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "880:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "880:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "880:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "853:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "862:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "849:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "849:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "874:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "845:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "842:52:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "903:39:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "932:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "913:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "913:29:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "903:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "951:42:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "978:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "989:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "974:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "974:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "961:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "961:32:33"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "951:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "790:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "801:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "813:6:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "821:6:33",
                "type": ""
              }
            ],
            "src": "745:254:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1099:92:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1109:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1121:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1132:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1117:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1117:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1109:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1151:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1176:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1169:6:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1169:14:33"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1162:6:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1162:22:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1144:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1144:41:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1144:41:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1068:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1079:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1090:4:33",
                "type": ""
              }
            ],
            "src": "1004:187:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1297:76:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1307:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1319:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1330:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1315:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1307:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1349:9:33"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1360:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1342:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1342:25:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1342:25:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1266:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1277:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1288:4:33",
                "type": ""
              }
            ],
            "src": "1196:177:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1482:224:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1528:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1537:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1540:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1530:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1530:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1530:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1503:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1512:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1499:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1499:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1524:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1495:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1495:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "1492:52:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1553:39:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1582:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1563:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:29:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1553:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1601:48:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1634:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1645:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1630:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1630:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1611:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:38:33"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1601:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1658:42:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1685:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1696:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1681:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1681:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1668:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1668:32:33"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1658:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1432:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1443:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1455:6:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1463:6:33",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1471:6:33",
                "type": ""
              }
            ],
            "src": "1378:328:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1781:116:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1827:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1836:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1839:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1829:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1829:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1829:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1802:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1811:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1798:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1798:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1823:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1794:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1794:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "1791:52:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1852:39:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1881:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1862:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1862:29:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1852:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1747:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1758:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1770:6:33",
                "type": ""
              }
            ],
            "src": "1711:186:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1999:87:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2009:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2021:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2032:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2017:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2017:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2009:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2051:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2066:6:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2074:4:33",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2062:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2062:17:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2044:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2044:36:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2044:36:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1968:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1979:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1990:4:33",
                "type": ""
              }
            ],
            "src": "1902:184:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2161:110:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2207:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2216:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2219:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2209:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2209:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2209:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2182:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2191:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2178:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2178:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2203:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2174:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2174:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "2171:52:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2232:33:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2255:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2242:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2242:23:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2232:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2127:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2138:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2150:6:33",
                "type": ""
              }
            ],
            "src": "2091:180:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2377:102:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2387:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2399:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2410:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2395:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2395:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2387:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2429:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2444:6:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2460:3:33",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2465:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2456:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2456:11:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2469:1:33",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2452:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2452:19:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2440:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2440:32:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2422:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2422:51:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2422:51:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2346:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2357:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2368:4:33",
                "type": ""
              }
            ],
            "src": "2276:203:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2571:173:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2617:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2626:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2629:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2619:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2619:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2619:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2592:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2601:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2588:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2588:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2613:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2584:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2584:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "2581:52:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2642:39:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2671:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2652:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2652:29:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2642:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2690:48:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2723:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2734:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2719:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2719:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2700:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2700:38:33"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2690:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2529:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2540:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2552:6:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2560:6:33",
                "type": ""
              }
            ],
            "src": "2484:260:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2804:325:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2814:22:33",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2828:1:33",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2831:4:33"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2824:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:12:33"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2814:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2845:38:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2875:4:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2881:1:33",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2871:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2871:12:33"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2849:18:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2922:31:33",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2924:27:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2938:6:33"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2946:4:33",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2934:3:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2934:17:33"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2924:6:33"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2902:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2895:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2895:26:33"
                  },
                  "nodeType": "YulIf",
                  "src": "2892:61:33"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3012:111:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3033:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3040:3:33",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3045:10:33",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3036:3:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3036:20:33"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3026:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3026:31:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3026:31:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3077:1:33",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3080:4:33",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3070:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3070:15:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3070:15:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3105:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3108:4:33",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3098:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3098:15:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3098:15:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2968:18:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2991:6:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2999:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2988:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2988:14:33"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2965:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2965:38:33"
                  },
                  "nodeType": "YulIf",
                  "src": "2962:161:33"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2784:4:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2793:6:33",
                "type": ""
              }
            ],
            "src": "2749:380:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3182:174:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3192:16:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3203:1:33"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3206:1:33"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3199:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3199:9:33"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3192:3:33"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3239:111:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3260:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3267:3:33",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3272:10:33",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3263:3:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3263:20:33"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3253:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3253:31:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3253:31:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3304:1:33",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3307:4:33",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3297:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3297:15:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3297:15:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3332:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3335:4:33",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3325:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3325:15:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3325:15:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3223:1:33"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "3226:3:33"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3220:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3220:10:33"
                  },
                  "nodeType": "YulIf",
                  "src": "3217:133:33"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3165:1:33",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3168:1:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3174:3:33",
                "type": ""
              }
            ],
            "src": "3134:222:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3535:170:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3552:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3563:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3545:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3545:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3545:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3586:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3597:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3582:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3582:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3602:2:33",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3575:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3575:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3575:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3625:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3636:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3621:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3621:18:33"
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061206d696e746572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3641:22:33",
                        "type": "",
                        "value": "You are not a minter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3614:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3614:50:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3614:50:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3673:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3685:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3696:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3681:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3681:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3673:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3512:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3526:4:33",
                "type": ""
              }
            ],
            "src": "3361:344:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3884:170:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3901:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3912:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3894:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3894:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3894:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3935:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3946:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3931:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3931:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3951:2:33",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3924:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3924:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3924:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3974:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3985:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3970:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3970:18:33"
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061206275726e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3990:22:33",
                        "type": "",
                        "value": "You are not a burner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3963:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3963:50:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3963:50:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4022:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4034:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4045:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4030:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4030:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4022:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab6228460a0dc983b1cb5bdf949536b8c270ab2b7aec7b22c69c21d7fb075f28__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3861:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3875:4:33",
                "type": ""
              }
            ],
            "src": "3710:344:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4233:171:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4250:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4261:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4243:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4243:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4243:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4284:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4295:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4280:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4280:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4300:2:33",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4273:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4273:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4273:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4323:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4334:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4319:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4319:18:33"
                      },
                      {
                        "hexValue": "4d696e74657220616c726561647920657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4339:23:33",
                        "type": "",
                        "value": "Minter already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4312:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4312:51:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4312:51:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4372:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4384:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4395:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4380:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4380:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4372:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_348bcb43a2fea3a15d0534157fc947732254be1b22b0554161fc9a6aca342576__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4210:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4224:4:33",
                "type": ""
              }
            ],
            "src": "4059:345:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4583:178:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4600:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4611:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4593:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4593:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4593:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4634:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4645:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4630:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4630:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4650:2:33",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4623:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4623:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4623:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4673:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4684:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4669:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4669:18:33"
                      },
                      {
                        "hexValue": "4d696e74657220616464726573732063616e6e6f7420626520307830",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4689:30:33",
                        "type": "",
                        "value": "Minter address cannot be 0x0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4662:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4662:58:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4662:58:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4729:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4741:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4752:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4737:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4737:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4729:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e40d682cfd33032688aa0136dcebf5ec3b029d0ba0497a0cec7f0be9cfd7a3e6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4560:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4574:4:33",
                "type": ""
              }
            ],
            "src": "4409:352:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4940:227:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4957:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4968:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4950:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4950:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4950:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4991:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5002:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4987:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4987:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5007:2:33",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4980:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4980:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4980:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5030:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5041:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5026:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5026:18:33"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5046:34:33",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5019:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5019:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5019:62:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5101:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5112:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5097:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5097:18:33"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5117:7:33",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5090:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5090:35:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5090:35:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5134:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5146:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5157:3:33",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5142:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5142:19:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5134:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4917:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4931:4:33",
                "type": ""
              }
            ],
            "src": "4766:401:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5346:228:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5363:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5374:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5356:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5356:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5356:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5397:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5408:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5393:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5393:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5413:2:33",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5386:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5386:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5386:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5436:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5447:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5432:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5432:18:33"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5452:34:33",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5425:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5425:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5425:62:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5507:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5518:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5503:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5503:18:33"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5523:8:33",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5496:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5496:36:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5496:36:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5541:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5553:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5564:3:33",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5549:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5549:19:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5541:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5323:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5337:4:33",
                "type": ""
              }
            ],
            "src": "5172:402:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5753:171:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5770:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5781:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5763:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5763:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5763:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5804:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5815:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5800:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5800:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5820:2:33",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5793:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5793:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5793:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5843:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5854:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5839:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5839:18:33"
                      },
                      {
                        "hexValue": "4d696e74657220646f6573206e6f74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5859:23:33",
                        "type": "",
                        "value": "Minter does not exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5832:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5832:51:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5832:51:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5892:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5904:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5915:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5900:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5900:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5892:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4a4234ca88cdb45a91504af5c24ca78278a4f14f040d693f27da260efdf71cd2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5730:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5744:4:33",
                "type": ""
              }
            ],
            "src": "5579:345:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6103:226:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6120:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6131:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6113:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6113:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6113:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6154:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6165:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6150:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6150:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6170:2:33",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6143:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6143:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6143:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6193:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6204:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6189:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6189:18:33"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6209:34:33",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6182:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6182:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6182:62:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6264:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6275:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6260:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6260:18:33"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6280:6:33",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6253:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6253:34:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6253:34:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6296:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6308:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6319:3:33",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6304:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6304:19:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6296:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6080:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6094:4:33",
                "type": ""
              }
            ],
            "src": "5929:400:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6508:224:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6525:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6536:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6518:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6518:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6518:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6559:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6570:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6555:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6555:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6575:2:33",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6548:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6548:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6598:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6609:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6594:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6594:18:33"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6614:34:33",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6587:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6587:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6587:62:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6669:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6680:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6665:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6665:18:33"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6685:4:33",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6658:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6658:32:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6658:32:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6699:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6711:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6722:3:33",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6707:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6707:19:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6699:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6485:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6499:4:33",
                "type": ""
              }
            ],
            "src": "6334:398:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6911:179:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6928:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6939:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6921:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6921:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6921:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6962:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6973:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6958:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6958:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6978:2:33",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6951:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6951:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6951:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7001:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7012:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6997:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6997:18:33"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7017:31:33",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6990:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6990:59:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6990:59:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7058:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7070:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7081:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7066:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7066:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7058:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6888:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6902:4:33",
                "type": ""
              }
            ],
            "src": "6737:353:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7269:227:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7286:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7297:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7279:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7279:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7279:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7320:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7331:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7316:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7316:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7336:2:33",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7309:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7309:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7309:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7359:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7370:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7355:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7355:18:33"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7375:34:33",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7348:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7348:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7348:62:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7430:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7441:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7426:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7426:18:33"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7446:7:33",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7419:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7419:35:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7419:35:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7463:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7475:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7486:3:33",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7471:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7471:19:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7463:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7246:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7260:4:33",
                "type": ""
              }
            ],
            "src": "7095:401:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7675:225:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7692:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7703:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7685:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7685:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7685:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7726:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7737:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7722:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7722:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7742:2:33",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7715:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7715:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7715:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7765:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7776:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7761:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7761:18:33"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7781:34:33",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7754:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7754:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7754:62:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7836:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7847:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7832:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7832:18:33"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7852:5:33",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7825:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7825:33:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7825:33:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7867:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7879:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7890:3:33",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7875:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7875:19:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7867:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7652:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7666:4:33",
                "type": ""
              }
            ],
            "src": "7501:399:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8079:228:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8096:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8107:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8089:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8089:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8089:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8130:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8141:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8126:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8126:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8146:2:33",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8119:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8119:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8119:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8169:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8180:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8165:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8165:18:33"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8185:34:33",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8158:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8158:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8158:62:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8240:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8251:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8236:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8236:18:33"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8256:8:33",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8229:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8229:36:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8229:36:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8274:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8286:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8297:3:33",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8282:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8282:19:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8274:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8056:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8070:4:33",
                "type": ""
              }
            ],
            "src": "7905:402:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8486:182:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8503:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8514:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8496:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8496:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8496:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8537:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8548:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8533:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8533:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8553:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8526:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8526:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8526:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8576:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8587:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8572:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8572:18:33"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8592:34:33",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8565:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8565:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8565:62:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8636:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8648:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8659:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8644:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8644:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8636:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8463:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8477:4:33",
                "type": ""
              }
            ],
            "src": "8312:356:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8847:181:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8864:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8875:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8857:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8857:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8857:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8898:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8909:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8894:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8894:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8914:2:33",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8887:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8887:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8887:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8937:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8948:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8933:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8933:18:33"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8953:33:33",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8926:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8926:61:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8926:61:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8996:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9008:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9019:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9004:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9004:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8996:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8824:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8838:4:33",
                "type": ""
              }
            ],
            "src": "8673:355:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9207:223:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9224:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9235:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9217:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9217:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9217:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9258:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9269:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9254:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9254:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9274:2:33",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9247:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9247:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9247:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9297:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9308:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9293:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9293:18:33"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9313:34:33",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9286:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9286:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9286:62:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9368:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9379:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9364:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9364:18:33"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9384:3:33",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9357:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9357:31:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9357:31:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9397:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9409:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9420:3:33",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9405:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9405:19:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9397:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9184:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9198:4:33",
                "type": ""
              }
            ],
            "src": "9033:397:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9609:224:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9626:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9637:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9619:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9619:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9619:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9660:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9671:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9656:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9656:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9676:2:33",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9649:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9649:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9649:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9699:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9710:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9695:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9695:18:33"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9715:34:33",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9688:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9688:62:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9688:62:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9770:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9781:2:33",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9766:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9766:18:33"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9786:4:33",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9759:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9759:32:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9759:32:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9800:27:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9812:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9823:3:33",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9808:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9808:19:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9800:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9586:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9600:4:33",
                "type": ""
              }
            ],
            "src": "9435:398:33"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"You are not a minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ab6228460a0dc983b1cb5bdf949536b8c270ab2b7aec7b22c69c21d7fb075f28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"You are not a burner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_348bcb43a2fea3a15d0534157fc947732254be1b22b0554161fc9a6aca342576__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Minter already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e40d682cfd33032688aa0136dcebf5ec3b029d0ba0497a0cec7f0be9cfd7a3e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Minter address cannot be 0x0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4a4234ca88cdb45a91504af5c24ca78278a4f14f040d693f27da260efdf71cd2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Minter does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 33,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "717:2994:4:-:0;;;874:108;;;;;;;;;;1976:113:15;;;;;;;;;;;;;-1:-1:-1;;;1976:113:15;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:15;;;2050:5;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:15;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;936:32:12;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;957:10:4::1;939:29;::::0;;;:17:::1;:29;::::0;;;;:36;;-1:-1:-1;;939:36:4::1;971:4;939:36;::::0;;717:2994;;640:96:27;719:10;;640:96::o;2433:187:12:-;2525:6;;;-1:-1:-1;;;;;2541:17:12;;;-1:-1:-1;;;;;;2541:17:12;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:33:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:33;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:33;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:33;;;2580:26;2531:89;-1:-1:-1;;1335:1:33;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:33;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:33;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:33;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:33:o;:::-;717:2994:4;;;;;;",
  "deployedSourceMap": "717:2994:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:33;;1162:22;1144:41;;1132:2;1117:18;4431:197:15;1004:187:33;3242:106:15;3329:12;;3242:106;;;1342:25:33;;;1330:2;1315:18;3242:106:15;1196:177:33;5190:286:15;;;;;;:::i;:::-;;:::i;1279:156:4:-;;;;;;:::i;:::-;;:::i;3091:91:15:-;;;3173:2;2044:36:33;;2032:2;2017:18;3091:91:15;1902:184:33;5871:234:15;;;;;;:::i;:::-;;:::i;2511:154:4:-;;;;;;:::i;:::-;;:::i;:::-;;2820:153;;;;;;:::i;:::-;;:::i;1594:269::-;;;;;;:::i;:::-;;:::i;3406:125:15:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:15;3480:7;3506:18;;;;;;;;;;;;3406:125;1831:101:12;;;:::i;973:161:17:-;;;;;;:::i;:::-;;:::i;1201:85:12:-;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:12;;;2422:51:33;;2410:2;2395:18;1201:85:12;2276:203:33;2365:102:15;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2081:198:12:-;;;;;;:::i;:::-;;:::i;2029:272:4:-;;;;;;:::i;:::-;;:::i;2154:98:15:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:27;4568:32:15;719:10:27;4584:7:15;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:27;5373:38:15;5389:4;719:10:27;5404:6:15;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:15;;5190:286;-1:-1:-1;;;;5190:286:15:o;1279:156:4:-;1376:4;1094:13:12;:11;:13::i;:::-;-1:-1:-1;;;;;;1399:29:4;::::1;;::::0;;;:17:::1;:29;::::0;;;;;::::1;;1117:1:12;1279:156:4::0;;;:::o;5871:234:15:-;5959:4;719:10:27;6013:64:15;719:10:27;6029:7:15;6066:10;6038:25;719:10:27;6029:7:15;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2511:154:4:-;2595:10;2577:29;;;;:17;:29;;;;;;;;2569:62;;;;-1:-1:-1;;;2569:62:4;;3563:2:33;2569:62:4;;;3545:21:33;3602:2;3582:18;;;3575:30;-1:-1:-1;;;3621:18:33;;;3614:50;3681:18;;2569:62:4;;;;;;;;;2641:17;2647:2;2651:6;2641:5;:17::i;:::-;2511:154;;:::o;2820:153::-;2902:10;2884:29;;;;:17;:29;;;;;;;;2876:62;;;;-1:-1:-1;;;2876:62:4;;3912:2:33;2876:62:4;;;3894:21:33;3951:2;3931:18;;;3924:30;-1:-1:-1;;;3970:18:33;;;3963:50;4030:18;;2876:62:4;3710:344:33;2876:62:4;2948:18;2959:6;2948:10;:18::i;:::-;2820:153;:::o;1594:269::-;1094:13:12;:11;:13::i;:::-;-1:-1:-1;;;;;1680:29:4;::::1;;::::0;;;:17:::1;:29;::::0;;;;;::::1;;1679:30;1671:64;;;::::0;-1:-1:-1;;;1671:64:4;;4261:2:33;1671:64:4::1;::::0;::::1;4243:21:33::0;4300:2;4280:18;;;4273:30;-1:-1:-1;;;4319:18:33;;;4312:51;4380:18;;1671:64:4::1;4059:345:33::0;1671:64:4::1;-1:-1:-1::0;;;;;1753:24:4;::::1;1745:65;;;::::0;-1:-1:-1;;;1745:65:4;;4611:2:33;1745:65:4::1;::::0;::::1;4593:21:33::0;4650:2;4630:18;;;4623:30;4689;4669:18;;;4662:58;4737:18;;1745:65:4::1;4409:352:33::0;1745:65:4::1;-1:-1:-1::0;;;;;1820:29:4::1;;::::0;;;:17:::1;:29;::::0;;;;:36;;-1:-1:-1;;1820:36:4::1;1852:4;1820:36;::::0;;1594:269::o;1831:101:12:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;973:161:17:-;1049:46;1065:7;719:10:27;1088:6:17;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2365:102:15:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:27;6685:4:15;6766:25;719:10:27;6783:7:15;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:15;;4968:2:33;6801:85:15;;;4950:21:33;5007:2;4987:18;;;4980:30;5046:34;5026:18;;;5019:62;-1:-1:-1;;;5097:18:33;;;5090:35;5142:19;;6801:85:15;4766:401:33;6801:85:15;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:27;3860:28:15;719:10:27;3877:2:15;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:15;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;2081:198:12:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:12;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:12;;5374:2:33;2161:73:12::1;::::0;::::1;5356:21:33::0;5413:2;5393:18;;;5386:30;5452:34;5432:18;;;5425:62;-1:-1:-1;;;5503:18:33;;;5496:36;5549:19;;2161:73:12::1;5172:402:33::0;2161:73:12::1;2244:28;2263:8;2244:18;:28::i;2029:272:4:-:0;1094:13:12;:11;:13::i;:::-;-1:-1:-1;;;;;2117:29:4;::::1;;::::0;;;:17:::1;:29;::::0;;;;;::::1;;2109:63;;;::::0;-1:-1:-1;;;2109:63:4;;5781:2:33;2109:63:4::1;::::0;::::1;5763:21:33::0;5820:2;5800:18;;;5793:30;-1:-1:-1;;;5839:18:33;;;5832:51;5900:18;;2109:63:4::1;5579:345:33::0;2109:63:4::1;-1:-1:-1::0;;;;;2190:24:4;::::1;2182:65;;;::::0;-1:-1:-1;;;2182:65:4;;4611:2:33;2182:65:4::1;::::0;::::1;4593:21:33::0;4650:2;4630:18;;;4623:30;4689;4669:18;;;4662:58;4737:18;;2182:65:4::1;4409:352:33::0;2182:65:4::1;-1:-1:-1::0;;;;;2257:29:4::1;2289:5;2257:29:::0;;;:17:::1;:29;::::0;;;;:37;;-1:-1:-1;;2257:37:4::1;::::0;;2029:272::o;10504:370:15:-;-1:-1:-1;;;;;10635:19:15;;10627:68;;;;-1:-1:-1;;;10627:68:15;;6131:2:33;10627:68:15;;;6113:21:33;6170:2;6150:18;;;6143:30;6209:34;6189:18;;;6182:62;-1:-1:-1;;;6260:18:33;;;6253:34;6304:19;;10627:68:15;5929:400:33;10627:68:15;-1:-1:-1;;;;;10713:21:15;;10705:68;;;;-1:-1:-1;;;10705:68:15;;6536:2:33;10705:68:15;;;6518:21:33;6575:2;6555:18;;;6548:30;6614:34;6594:18;;;6587:62;-1:-1:-1;;;6665:18:33;;;6658:32;6707:19;;10705:68:15;6334:398:33;10705:68:15;-1:-1:-1;;;;;10784:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1342:25:33;;;10835:32:15;;1315:18:33;10835:32:15;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:15;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:15;;6939:2:33;11404:68:15;;;6921:21:33;6978:2;6958:18;;;6951:30;7017:31;6997:18;;;6990:59;7066:18;;11404:68:15;6737:353:33;11404:68:15;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:15;;7591:68;;;;-1:-1:-1;;;7591:68:15;;7297:2:33;7591:68:15;;;7279:21:33;7336:2;7316:18;;;7309:30;7375:34;7355:18;;;7348:62;-1:-1:-1;;;7426:18:33;;;7419:35;7471:19;;7591:68:15;7095:401:33;7591:68:15;-1:-1:-1;;;;;7677:16:15;;7669:64;;;;-1:-1:-1;;;7669:64:15;;7703:2:33;7669:64:15;;;7685:21:33;7742:2;7722:18;;;7715:30;7781:34;7761:18;;;7754:62;-1:-1:-1;;;7832:18:33;;;7825:33;7875:19;;7669:64:15;7501:399:33;7669:64:15;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;-1:-1:-1;;;;;7815:15:15;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:15;;8107:2:33;7840:72:15;;;8089:21:33;8146:2;8126:18;;;8119:30;8185:34;8165:18;;;8158:62;-1:-1:-1;;;8236:18:33;;;8229:36;8282:19;;7840:72:15;7905:402:33;7840:72:15;-1:-1:-1;;;;;7946:15:15;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1342:25:33;;;8161:13:15;;8210:26;;1315:18:33;8210:26:15;;;;;;;8247:37;9422:659;1359:130:12;1273:6;;-1:-1:-1;;;;;1273:6:12;719:10:27;1422:23:12;1414:68;;;;-1:-1:-1;;;1414:68:12;;8514:2:33;1414:68:12;;;8496:21:33;;;8533:18;;;8526:30;8592:34;8572:18;;;8565:62;8644:18;;1414:68:12;8312:356:33;8567:535:15;-1:-1:-1;;;;;8650:21:15;;8642:65;;;;-1:-1:-1;;;8642:65:15;;8875:2:33;8642:65:15;;;8857:21:33;8914:2;8894:18;;;8887:30;8953:33;8933:18;;;8926:61;9004:18;;8642:65:15;8673:355:33;8642:65:15;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:15;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1342:25:33;;;8999:37:15;;1315:18:33;8999:37:15;;;;;;;2511:154:4;;:::o;578:89:17:-;633:27;719:10:27;653:6:17;633:5;:27::i;2433:187:12:-;2525:6;;;-1:-1:-1;;;;;2541:17:12;;;-1:-1:-1;;;;;;2541:17:12;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;9422:659:15:-;-1:-1:-1;;;;;9505:21:15;;9497:67;;;;-1:-1:-1;;;9497:67:15;;9235:2:33;9497:67:15;;;9217:21:33;9274:2;9254:18;;;9247:30;9313:34;9293:18;;;9286:62;-1:-1:-1;;;9364:18:33;;;9357:31;9405:19;;9497:67:15;9033:397:33;9497:67:15;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;-1:-1:-1;;;;;9660:18:15;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:15;;9637:2:33;9688:71:15;;;9619:21:33;9676:2;9656:18;;;9649:30;9715:34;9695:18;;;9688:62;-1:-1:-1;;;9766:18:33;;;9759:32;9808:19;;9688:71:15;9435:398:33;9688:71:15;-1:-1:-1;;;;;9793:18:15;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1342:25:33;;;9793:9:15;;:18;9978:37;;1315:18:33;9978:37:15;1196:177:33;3321:388:4;-1:-1:-1;;;;;3456:23:4;;;;;;:17;:23;;;;;;;;3451:96;;-1:-1:-1;;;;;3501:21:4;;;;;;:17;:21;;;;;;;;3493:54;;;;-1:-1:-1;;;3493:54:4;;3563:2:33;3493:54:4;;;3545:21:33;3602:2;3582:18;;;3575:30;-1:-1:-1;;;3621:18:33;;;3614:50;3681:18;;3493:54:4;3361:344:33;3493:54:4;-1:-1:-1;;;;;3562:16:4;;3558:90;;-1:-1:-1;;;;;3600:23:4;;;;;;:17;:23;;;;;;;;3592:56;;;;-1:-1:-1;;;3592:56:4;;3912:2:33;3592:56:4;;;3894:21:33;3951:2;3931:18;;;3924:30;-1:-1:-1;;;3970:18:33;;;3963:50;4030:18;;3592:56:4;3710:344:33;3592:56:4;9487:594:15;9422:659;;:::o;14:548:33:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:33;;674:42;;664:70;;730:1;727;720:12;745:254;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:33:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1711:186::-;1770:6;1823:2;1811:9;1802:7;1798:23;1794:32;1791:52;;;1839:1;1836;1829:12;1791:52;1862:29;1881:9;1862:29;:::i;:::-;1852:39;1711:186;-1:-1:-1;;;1711:186:33:o;2091:180::-;2150:6;2203:2;2191:9;2182:7;2178:23;2174:32;2171:52;;;2219:1;2216;2209:12;2171:52;-1:-1:-1;2242:23:33;;2091:180;-1:-1:-1;2091:180:33:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:222::-;3199:9;;;3220:10;;;3217:133;;;3272:10;3267:3;3263:20;3260:1;3253:31;3307:4;3304:1;3297:15;3335:4;3332:1;3325:15",
  "source": "// SPDX-License-Identifier: CC-BY-4.0\npragma solidity ^0.8.9;\n\n//import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n//import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n//import \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title MaticW2RPairToken\n * @dev This contract represents an ERC20 token which is burnable and has restricted minting and burning functionality.\n * It uses the OpenZeppelin ERC20, ERC20Burnable, and Ownable contracts.\n */\n\ncontract MaticW2RPairToken is ERC20, ERC20Burnable, Ownable {\n    /**\n     * @dev Constructor that initializes the token with a name and symbol.\n     */\n    constructor() ERC20(\"Matic-W2R LP Token\", \"MATIC-W2R\") {\n        isMinterAndBurner[msg.sender] = true;\n    }\n\n    mapping(address => bool) isMinterAndBurner;\n\n    /**\n     * @notice Check if an address is authorized as a minter and burner.\n     * @param authorized The address to be checked.\n     * @return A boolean value indicating whether the address is authorized as a minter and burner.\n     */\n\n    function checkMinterAndBurner(\n        address authorized\n    ) external view onlyOwner returns (bool) {\n        return isMinterAndBurner[authorized];\n    }\n\n    /**\n     * @notice Add a minter and burner to the authorized list.\n     * @param authorized The address to be added as a minter and burner.\n     */\n\n    function addMinterAndBurner(address authorized) external onlyOwner {\n        require(!isMinterAndBurner[authorized], \"Minter already exists\");\n        require(authorized != address(0), \"Minter address cannot be 0x0\");\n        isMinterAndBurner[authorized] = true;\n    }\n\n    /**\n     * @notice Remove a minter and burner from the authorized list.\n     * @param authorized The address to be removed as a minter and burner.\n     */\n\n    function removeMinterAndBurner(address authorized) external onlyOwner {\n        require(isMinterAndBurner[authorized], \"Minter does not exist\");\n        require(authorized != address(0), \"Minter address cannot be 0x0\");\n        isMinterAndBurner[authorized] = false;\n    }\n\n    /**\n     * @notice Mint tokens to a specified address only for authorized minter.\n     * @param to The address to receive the minted tokens.\n     * @param amount The amount of tokens to mint.\n     */\n    function mint(address to, uint amount) external {\n        require(isMinterAndBurner[msg.sender], \"You are not a minter\");\n        _mint(to, amount);\n    }\n\n    /**\n     * @notice Burn tokens from the caller's address only for authorized burner.\n     * @param amount The amount of tokens to burn.\n     */\n\n    function burn(uint256 amount) public override {\n        require(isMinterAndBurner[msg.sender], \"You are not a burner\");\n        super.burn(amount);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer.\n     * This implementation checks whether the sender or receiver is authorized as a minter and burner.\n     * @param from The address sending the tokens.\n     * @param to The address receiving the tokens.\n     * @param amount The amount of tokens being transferred.\n     */\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override {\n        if (!isMinterAndBurner[from])\n            require(isMinterAndBurner[to], \"You are not a minter\");\n\n        if (to == address(0))\n            require(isMinterAndBurner[from], \"You are not a burner\");\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n",
  "sourcePath": "/Users/harbinger/Dropbox/Dossier familial/Formation Blockchain/Alyra/Projet Certification/Projet Alyra 2Wheels2Rent/truffle/contracts/MaticW2RPairToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/MaticW2RPairToken.sol",
    "exportedSymbols": {
      "Context": [
        11926
      ],
      "ERC20": [
        9897
      ],
      "ERC20Burnable": [
        10019
      ],
      "IERC20": [
        9975
      ],
      "IERC20Metadata": [
        10044
      ],
      "MaticW2RPairToken": [
        4925
      ],
      "Ownable": [
        9199
      ]
    },
    "id": 4926,
    "license": "CC-BY-4.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4724,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:4"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 4725,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4926,
        "sourceUnit": 9898,
        "src": "254:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 4726,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4926,
        "sourceUnit": 10020,
        "src": "326:90:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 4727,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4926,
        "sourceUnit": 9200,
        "src": "417:68:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4729,
              "name": "ERC20",
              "nameLocations": [
                "747:5:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9897,
              "src": "747:5:4"
            },
            "id": 4730,
            "nodeType": "InheritanceSpecifier",
            "src": "747:5:4"
          },
          {
            "baseName": {
              "id": 4731,
              "name": "ERC20Burnable",
              "nameLocations": [
                "754:13:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10019,
              "src": "754:13:4"
            },
            "id": 4732,
            "nodeType": "InheritanceSpecifier",
            "src": "754:13:4"
          },
          {
            "baseName": {
              "id": 4733,
              "name": "Ownable",
              "nameLocations": [
                "769:7:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9199,
              "src": "769:7:4"
            },
            "id": 4734,
            "nodeType": "InheritanceSpecifier",
            "src": "769:7:4"
          }
        ],
        "canonicalName": "MaticW2RPairToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4728,
          "nodeType": "StructuredDocumentation",
          "src": "487:228:4",
          "text": " @title MaticW2RPairToken\n @dev This contract represents an ERC20 token which is burnable and has restricted minting and burning functionality.\n It uses the OpenZeppelin ERC20, ERC20Burnable, and Ownable contracts."
        },
        "fullyImplemented": true,
        "id": 4925,
        "linearizedBaseContracts": [
          4925,
          9199,
          10019,
          9897,
          10044,
          9975,
          11926
        ],
        "name": "MaticW2RPairToken",
        "nameLocation": "726:17:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4749,
              "nodeType": "Block",
              "src": "929:53:4",
              "statements": [
                {
                  "expression": {
                    "id": 4747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4742,
                        "name": "isMinterAndBurner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4754,
                        "src": "939:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4745,
                      "indexExpression": {
                        "expression": {
                          "id": 4743,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "957:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "961:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "957:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "939:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "971:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "939:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4748,
                  "nodeType": "ExpressionStatement",
                  "src": "939:36:4"
                }
              ]
            },
            "documentation": {
              "id": 4735,
              "nodeType": "StructuredDocumentation",
              "src": "783:86:4",
              "text": " @dev Constructor that initializes the token with a name and symbol."
            },
            "id": 4750,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d617469632d573252204c5020546f6b656e",
                    "id": 4738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "894:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e7f74ce262df38376af92df584f48ddf00576df44428e36c14c5307420b40248",
                      "typeString": "literal_string \"Matic-W2R LP Token\""
                    },
                    "value": "Matic-W2R LP Token"
                  },
                  {
                    "hexValue": "4d415449432d573252",
                    "id": 4739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "916:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_204836c68fe993258afbf01c08ab6af08d91d7926382be08a3b77f2641fabdf5",
                      "typeString": "literal_string \"MATIC-W2R\""
                    },
                    "value": "MATIC-W2R"
                  }
                ],
                "id": 4740,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4737,
                  "name": "ERC20",
                  "nameLocations": [
                    "888:5:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9897,
                  "src": "888:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "888:40:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "885:2:4"
            },
            "returnParameters": {
              "id": 4741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "929:0:4"
            },
            "scope": 4925,
            "src": "874:108:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4754,
            "mutability": "mutable",
            "name": "isMinterAndBurner",
            "nameLocation": "1013:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 4925,
            "src": "988:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 4753,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4751,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "996:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "988:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4752,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1007:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4768,
              "nodeType": "Block",
              "src": "1382:53:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4764,
                      "name": "isMinterAndBurner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4754,
                      "src": "1399:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 4766,
                    "indexExpression": {
                      "id": 4765,
                      "name": "authorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4757,
                      "src": "1417:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1399:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4763,
                  "id": 4767,
                  "nodeType": "Return",
                  "src": "1392:36:4"
                }
              ]
            },
            "documentation": {
              "id": 4755,
              "nodeType": "StructuredDocumentation",
              "src": "1037:236:4",
              "text": " @notice Check if an address is authorized as a minter and burner.\n @param authorized The address to be checked.\n @return A boolean value indicating whether the address is authorized as a minter and burner."
            },
            "functionSelector": "2b2540bd",
            "id": 4769,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4760,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4759,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1357:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9118,
                  "src": "1357:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1357:9:4"
              }
            ],
            "name": "checkMinterAndBurner",
            "nameLocation": "1288:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4757,
                  "mutability": "mutable",
                  "name": "authorized",
                  "nameLocation": "1326:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4769,
                  "src": "1318:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1308:34:4"
            },
            "returnParameters": {
              "id": 4763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4762,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4769,
                  "src": "1376:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4761,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1375:6:4"
            },
            "scope": 4925,
            "src": "1279:156:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4801,
              "nodeType": "Block",
              "src": "1661:202:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1679:30:4",
                        "subExpression": {
                          "baseExpression": {
                            "id": 4778,
                            "name": "isMinterAndBurner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4754,
                            "src": "1680:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 4780,
                          "indexExpression": {
                            "id": 4779,
                            "name": "authorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4772,
                            "src": "1698:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1680:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74657220616c726561647920657869737473",
                        "id": 4782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1711:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_348bcb43a2fea3a15d0534157fc947732254be1b22b0554161fc9a6aca342576",
                          "typeString": "literal_string \"Minter already exists\""
                        },
                        "value": "Minter already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_348bcb43a2fea3a15d0534157fc947732254be1b22b0554161fc9a6aca342576",
                          "typeString": "literal_string \"Minter already exists\""
                        }
                      ],
                      "id": 4777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1671:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1671:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4784,
                  "nodeType": "ExpressionStatement",
                  "src": "1671:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4786,
                          "name": "authorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4772,
                          "src": "1753:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1775:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1767:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4787,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1767:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1767:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1753:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74657220616464726573732063616e6e6f7420626520307830",
                        "id": 4792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1779:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e40d682cfd33032688aa0136dcebf5ec3b029d0ba0497a0cec7f0be9cfd7a3e6",
                          "typeString": "literal_string \"Minter address cannot be 0x0\""
                        },
                        "value": "Minter address cannot be 0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e40d682cfd33032688aa0136dcebf5ec3b029d0ba0497a0cec7f0be9cfd7a3e6",
                          "typeString": "literal_string \"Minter address cannot be 0x0\""
                        }
                      ],
                      "id": 4785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1745:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4794,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:65:4"
                },
                {
                  "expression": {
                    "id": 4799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4795,
                        "name": "isMinterAndBurner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4754,
                        "src": "1820:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4797,
                      "indexExpression": {
                        "id": 4796,
                        "name": "authorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4772,
                        "src": "1838:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1820:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1852:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1820:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4800,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:36:4"
                }
              ]
            },
            "documentation": {
              "id": 4770,
              "nodeType": "StructuredDocumentation",
              "src": "1441:147:4",
              "text": " @notice Add a minter and burner to the authorized list.\n @param authorized The address to be added as a minter and burner."
            },
            "functionSelector": "58b80e35",
            "id": 4802,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4775,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4774,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1651:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9118,
                  "src": "1651:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1651:9:4"
              }
            ],
            "name": "addMinterAndBurner",
            "nameLocation": "1603:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4772,
                  "mutability": "mutable",
                  "name": "authorized",
                  "nameLocation": "1630:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4802,
                  "src": "1622:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1622:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1621:20:4"
            },
            "returnParameters": {
              "id": 4776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1661:0:4"
            },
            "scope": 4925,
            "src": "1594:269:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4833,
              "nodeType": "Block",
              "src": "2099:202:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 4811,
                          "name": "isMinterAndBurner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4754,
                          "src": "2117:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 4813,
                        "indexExpression": {
                          "id": 4812,
                          "name": "authorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4805,
                          "src": "2135:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2117:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74657220646f6573206e6f74206578697374",
                        "id": 4814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2148:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a4234ca88cdb45a91504af5c24ca78278a4f14f040d693f27da260efdf71cd2",
                          "typeString": "literal_string \"Minter does not exist\""
                        },
                        "value": "Minter does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a4234ca88cdb45a91504af5c24ca78278a4f14f040d693f27da260efdf71cd2",
                          "typeString": "literal_string \"Minter does not exist\""
                        }
                      ],
                      "id": 4810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2109:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4816,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:63:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4818,
                          "name": "authorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4805,
                          "src": "2190:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2212:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2204:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4819,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2204:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2204:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2190:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74657220616464726573732063616e6e6f7420626520307830",
                        "id": 4824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2216:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e40d682cfd33032688aa0136dcebf5ec3b029d0ba0497a0cec7f0be9cfd7a3e6",
                          "typeString": "literal_string \"Minter address cannot be 0x0\""
                        },
                        "value": "Minter address cannot be 0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e40d682cfd33032688aa0136dcebf5ec3b029d0ba0497a0cec7f0be9cfd7a3e6",
                          "typeString": "literal_string \"Minter address cannot be 0x0\""
                        }
                      ],
                      "id": 4817,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2182:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2182:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4826,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:65:4"
                },
                {
                  "expression": {
                    "id": 4831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4827,
                        "name": "isMinterAndBurner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4754,
                        "src": "2257:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4829,
                      "indexExpression": {
                        "id": 4828,
                        "name": "authorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4805,
                        "src": "2275:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2257:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 4830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2289:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2257:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4832,
                  "nodeType": "ExpressionStatement",
                  "src": "2257:37:4"
                }
              ]
            },
            "documentation": {
              "id": 4803,
              "nodeType": "StructuredDocumentation",
              "src": "1869:154:4",
              "text": " @notice Remove a minter and burner from the authorized list.\n @param authorized The address to be removed as a minter and burner."
            },
            "functionSelector": "f97f3c2c",
            "id": 4834,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4808,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4807,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2089:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9118,
                  "src": "2089:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2089:9:4"
              }
            ],
            "name": "removeMinterAndBurner",
            "nameLocation": "2038:21:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4805,
                  "mutability": "mutable",
                  "name": "authorized",
                  "nameLocation": "2068:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4834,
                  "src": "2060:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:20:4"
            },
            "returnParameters": {
              "id": 4809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:0:4"
            },
            "scope": 4925,
            "src": "2029:272:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4855,
              "nodeType": "Block",
              "src": "2559:106:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 4843,
                          "name": "isMinterAndBurner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4754,
                          "src": "2577:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 4846,
                        "indexExpression": {
                          "expression": {
                            "id": 4844,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2595:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2599:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2595:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2577:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061206d696e746572",
                        "id": 4847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2608:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65",
                          "typeString": "literal_string \"You are not a minter\""
                        },
                        "value": "You are not a minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65",
                          "typeString": "literal_string \"You are not a minter\""
                        }
                      ],
                      "id": 4842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2569:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4849,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:62:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4851,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4837,
                        "src": "2647:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4852,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4839,
                        "src": "2651:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4850,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9714,
                      "src": "2641:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2641:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4854,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:17:4"
                }
              ]
            },
            "documentation": {
              "id": 4835,
              "nodeType": "StructuredDocumentation",
              "src": "2307:199:4",
              "text": " @notice Mint tokens to a specified address only for authorized minter.\n @param to The address to receive the minted tokens.\n @param amount The amount of tokens to mint."
            },
            "functionSelector": "40c10f19",
            "id": 4856,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2520:4:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4837,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2533:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4856,
                  "src": "2525:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4839,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2542:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4856,
                  "src": "2537:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4838,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2524:25:4"
            },
            "returnParameters": {
              "id": 4841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2559:0:4"
            },
            "scope": 4925,
            "src": "2511:154:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9997
            ],
            "body": {
              "id": 4877,
              "nodeType": "Block",
              "src": "2866:107:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 4864,
                          "name": "isMinterAndBurner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4754,
                          "src": "2884:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 4867,
                        "indexExpression": {
                          "expression": {
                            "id": 4865,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2902:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2906:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2902:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2884:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061206275726e6572",
                        "id": 4868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2915:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab6228460a0dc983b1cb5bdf949536b8c270ab2b7aec7b22c69c21d7fb075f28",
                          "typeString": "literal_string \"You are not a burner\""
                        },
                        "value": "You are not a burner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab6228460a0dc983b1cb5bdf949536b8c270ab2b7aec7b22c69c21d7fb075f28",
                          "typeString": "literal_string \"You are not a burner\""
                        }
                      ],
                      "id": 4863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2876:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4870,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:62:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4874,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4859,
                        "src": "2959:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4871,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2948:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MaticW2RPairToken_$4925_$",
                          "typeString": "type(contract super MaticW2RPairToken)"
                        }
                      },
                      "id": 4873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2954:4:4",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9997,
                      "src": "2948:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2948:18:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4876,
                  "nodeType": "ExpressionStatement",
                  "src": "2948:18:4"
                }
              ]
            },
            "documentation": {
              "id": 4857,
              "nodeType": "StructuredDocumentation",
              "src": "2671:143:4",
              "text": " @notice Burn tokens from the caller's address only for authorized burner.\n @param amount The amount of tokens to burn."
            },
            "functionSelector": "42966c68",
            "id": 4878,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2829:4:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4861,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2857:8:4"
            },
            "parameters": {
              "id": 4860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4859,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2842:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4878,
                  "src": "2834:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2834:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2833:16:4"
            },
            "returnParameters": {
              "id": 4862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2866:0:4"
            },
            "scope": 4925,
            "src": "2820:153:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9885
            ],
            "body": {
              "id": 4923,
              "nodeType": "Block",
              "src": "3441:268:4",
              "statements": [
                {
                  "condition": {
                    "id": 4892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3455:24:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 4889,
                        "name": "isMinterAndBurner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4754,
                        "src": "3456:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4891,
                      "indexExpression": {
                        "id": 4890,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4881,
                        "src": "3474:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3456:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4900,
                  "nodeType": "IfStatement",
                  "src": "3451:96:4",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 4894,
                            "name": "isMinterAndBurner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4754,
                            "src": "3501:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 4896,
                          "indexExpression": {
                            "id": 4895,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4883,
                            "src": "3519:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3501:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "596f7520617265206e6f742061206d696e746572",
                          "id": 4897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3524:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65",
                            "typeString": "literal_string \"You are not a minter\""
                          },
                          "value": "You are not a minter"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65",
                            "typeString": "literal_string \"You are not a minter\""
                          }
                        ],
                        "id": 4893,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3493:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3493:54:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4899,
                    "nodeType": "ExpressionStatement",
                    "src": "3493:54:4"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4901,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4883,
                      "src": "3562:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3576:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3568:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4902,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3568:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3568:10:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3562:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4914,
                  "nodeType": "IfStatement",
                  "src": "3558:90:4",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 4908,
                            "name": "isMinterAndBurner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4754,
                            "src": "3600:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 4910,
                          "indexExpression": {
                            "id": 4909,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4881,
                            "src": "3618:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3600:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "596f7520617265206e6f742061206275726e6572",
                          "id": 4911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3625:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ab6228460a0dc983b1cb5bdf949536b8c270ab2b7aec7b22c69c21d7fb075f28",
                            "typeString": "literal_string \"You are not a burner\""
                          },
                          "value": "You are not a burner"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ab6228460a0dc983b1cb5bdf949536b8c270ab2b7aec7b22c69c21d7fb075f28",
                            "typeString": "literal_string \"You are not a burner\""
                          }
                        ],
                        "id": 4907,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3592:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3592:56:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4913,
                    "nodeType": "ExpressionStatement",
                    "src": "3592:56:4"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4918,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4881,
                        "src": "3685:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4919,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4883,
                        "src": "3691:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4920,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4885,
                        "src": "3695:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4915,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3658:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MaticW2RPairToken_$4925_$",
                          "typeString": "type(contract super MaticW2RPairToken)"
                        }
                      },
                      "id": 4917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3664:20:4",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9885,
                      "src": "3658:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3658:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4922,
                  "nodeType": "ExpressionStatement",
                  "src": "3658:44:4"
                }
              ]
            },
            "documentation": {
              "id": 4879,
              "nodeType": "StructuredDocumentation",
              "src": "2979:336:4",
              "text": " @dev Hook that is called before any token transfer.\n This implementation checks whether the sender or receiver is authorized as a minter and burner.\n @param from The address sending the tokens.\n @param to The address receiving the tokens.\n @param amount The amount of tokens being transferred."
            },
            "id": 4924,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "3330:20:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4887,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3432:8:4"
            },
            "parameters": {
              "id": 4886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4881,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3368:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4924,
                  "src": "3360:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3360:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4883,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3390:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4924,
                  "src": "3382:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4885,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3410:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 4924,
                  "src": "3402:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3350:72:4"
            },
            "returnParameters": {
              "id": 4888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3441:0:4"
            },
            "scope": 4925,
            "src": "3321:388:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4926,
        "src": "717:2994:4",
        "usedErrors": []
      }
    ],
    "src": "38:3674:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0xcCbC1bC393911cdA0cf9Ade05fFeC934De8D0E8F",
      "transactionHash": "0xf9c6f3c11371ad95b18767b02aae3451101a87fd50d60a87fcb3005a8382eb20"
    },
    "80001": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x84D19ee85fCdb32c91d1b8F5269D4E1aAa455212",
      "transactionHash": "0x9ce62a186936d27448397d1f5848dee9b9915033c33f3524a669eca087969eb3"
    }
  },
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-04-23T17:19:46.622Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "This contract represents an ERC20 token which is burnable and has restricted minting and burning functionality. It uses the OpenZeppelin ERC20, ERC20Burnable, and Ownable contracts.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "addMinterAndBurner(address)": {
        "params": {
          "authorized": "The address to be added as a minter and burner."
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "params": {
          "amount": "The amount of tokens to burn."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "checkMinterAndBurner(address)": {
        "params": {
          "authorized": "The address to be checked."
        },
        "returns": {
          "_0": "A boolean value indicating whether the address is authorized as a minter and burner."
        }
      },
      "constructor": {
        "details": "Constructor that initializes the token with a name and symbol."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "params": {
          "amount": "The amount of tokens to mint.",
          "to": "The address to receive the minted tokens."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeMinterAndBurner(address)": {
        "params": {
          "authorized": "The address to be removed as a minter and burner."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "MaticW2RPairToken",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addMinterAndBurner(address)": {
        "notice": "Add a minter and burner to the authorized list."
      },
      "burn(uint256)": {
        "notice": "Burn tokens from the caller's address only for authorized burner."
      },
      "checkMinterAndBurner(address)": {
        "notice": "Check if an address is authorized as a minter and burner."
      },
      "mint(address,uint256)": {
        "notice": "Mint tokens to a specified address only for authorized minter."
      },
      "removeMinterAndBurner(address)": {
        "notice": "Remove a minter and burner from the authorized list."
      }
    },
    "version": 1
  }
}